
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model AssumableMortgage
 * 
 */
export type AssumableMortgage = $Result.DefaultSelection<Prisma.$AssumableMortgagePayload>
/**
 * Model DataCorrection
 * 
 */
export type DataCorrection = $Result.DefaultSelection<Prisma.$DataCorrectionPayload>
/**
 * Model Listing
 * 
 */
export type Listing = $Result.DefaultSelection<Prisma.$ListingPayload>
/**
 * Model ListingAudit
 * 
 */
export type ListingAudit = $Result.DefaultSelection<Prisma.$ListingAuditPayload>
/**
 * Model ListingHistory
 * 
 */
export type ListingHistory = $Result.DefaultSelection<Prisma.$ListingHistoryPayload>
/**
 * Model ListingLocation
 * 
 */
export type ListingLocation = $Result.DefaultSelection<Prisma.$ListingLocationPayload>
/**
 * Model ListingPhoto
 * 
 */
export type ListingPhoto = $Result.DefaultSelection<Prisma.$ListingPhotoPayload>
/**
 * Model ListingReport
 * 
 */
export type ListingReport = $Result.DefaultSelection<Prisma.$ListingReportPayload>
/**
 * Model Loan
 * 
 */
export type Loan = $Result.DefaultSelection<Prisma.$LoanPayload>
/**
 * Model MlsInstanceDetails
 * 
 */
export type MlsInstanceDetails = $Result.DefaultSelection<Prisma.$MlsInstanceDetailsPayload>
/**
 * Model MlsInstanceVisibility
 * 
 */
export type MlsInstanceVisibility = $Result.DefaultSelection<Prisma.$MlsInstanceVisibilityPayload>
/**
 * Model PropertyRadar
 * 
 */
export type PropertyRadar = $Result.DefaultSelection<Prisma.$PropertyRadarPayload>
/**
 * Model RawListingData
 * 
 */
export type RawListingData = $Result.DefaultSelection<Prisma.$RawListingDataPayload>
/**
 * Model RawLoanData
 * 
 */
export type RawLoanData = $Result.DefaultSelection<Prisma.$RawLoanDataPayload>
/**
 * Model RawPhotoData
 * 
 */
export type RawPhotoData = $Result.DefaultSelection<Prisma.$RawPhotoDataPayload>
/**
 * Model spatial_ref_sys
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type spatial_ref_sys = $Result.DefaultSelection<Prisma.$spatial_ref_sysPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const AuditSource: {
  ADMIN: 'ADMIN',
  USER: 'USER',
  MLS_SYNC: 'MLS_SYNC',
  SYSTEM_CLEANUP: 'SYSTEM_CLEANUP',
  DATA_MIGRATION: 'DATA_MIGRATION',
  API_WEBHOOK: 'API_WEBHOOK',
  UNKNOWN: 'UNKNOWN'
};

export type AuditSource = (typeof AuditSource)[keyof typeof AuditSource]


export const CorrectionStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE'
};

export type CorrectionStatus = (typeof CorrectionStatus)[keyof typeof CorrectionStatus]


export const DataPullStatus: {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  HASH_MATCHED: 'HASH_MATCHED',
  NEW: 'NEW',
  SKIPPED_INACTIVE: 'SKIPPED_INACTIVE',
  INACTIVE: 'INACTIVE',
  NO_RESULTS: 'NO_RESULTS',
  MULTIPLE_RESULTS: 'MULTIPLE_RESULTS',
  EXISTING_DATA_LINKED: 'EXISTING_DATA_LINKED',
  SKIPPED_UNDER_CONSTRUCTION: 'SKIPPED_UNDER_CONSTRUCTION',
  SKIPPED_NOT_VA_OR_FHA: 'SKIPPED_NOT_VA_OR_FHA',
  PENDING_RETRY: 'PENDING_RETRY'
};

export type DataPullStatus = (typeof DataPullStatus)[keyof typeof DataPullStatus]


export const EntityType: {
  RAW_LISTING_DATA: 'RAW_LISTING_DATA',
  RAW_LOAN_DATA: 'RAW_LOAN_DATA',
  RAW_PHOTO_DATA: 'RAW_PHOTO_DATA',
  LISTING_OVERRIDE: 'LISTING_OVERRIDE',
  LISTING_PERMANENT: 'LISTING_PERMANENT',
  LOAN_OVERRIDE: 'LOAN_OVERRIDE',
  LOAN_PERMANENT: 'LOAN_PERMANENT',
  LISTING_PHOTO_OVERRIDE: 'LISTING_PHOTO_OVERRIDE',
  LISTING_PHOTO_PERMANENT: 'LISTING_PHOTO_PERMANENT',
  PROPERTY_RADAR_OVERRIDE: 'PROPERTY_RADAR_OVERRIDE',
  PROPERTY_RADAR_PERMANENT: 'PROPERTY_RADAR_PERMANENT',
  ASSUMABLE_MORTGAGE_OVERRIDE: 'ASSUMABLE_MORTGAGE_OVERRIDE',
  ASSUMABLE_MORTGAGE_PERMANENT: 'ASSUMABLE_MORTGAGE_PERMANENT',
  MLS_INSTANCE_OVERRIDE: 'MLS_INSTANCE_OVERRIDE',
  MLS_INSTANCE_PERMANENT: 'MLS_INSTANCE_PERMANENT',
  LISTING_HISTORY_OVERRIDE: 'LISTING_HISTORY_OVERRIDE',
  LISTING_HISTORY_PERMANENT: 'LISTING_HISTORY_PERMANENT'
};

export type EntityType = (typeof EntityType)[keyof typeof EntityType]


export const ListingReportReason: {
  NO_LONGER_AVAILABLE: 'NO_LONGER_AVAILABLE',
  INCORRECT_INFORMATION: 'INCORRECT_INFORMATION',
  FRAUDULENT_OR_SPAM: 'FRAUDULENT_OR_SPAM'
};

export type ListingReportReason = (typeof ListingReportReason)[keyof typeof ListingReportReason]


export const ListingStatus: {
  ACTIVE: 'ACTIVE',
  PENDING: 'PENDING',
  SOLD: 'SOLD',
  WITHDRAWN: 'WITHDRAWN',
  EXPIRED: 'EXPIRED',
  ACTIVE_CONTINGENT: 'ACTIVE_CONTINGENT',
  ACTIVE_KICK_OUT: 'ACTIVE_KICK_OUT',
  ACTIVE_OPTION_CONTRACT: 'ACTIVE_OPTION_CONTRACT',
  ACTIVE_UNDER_CONTRACT: 'ACTIVE_UNDER_CONTRACT',
  ACTIVE_WITH_CONTRACT: 'ACTIVE_WITH_CONTRACT',
  APPROVED: 'APPROVED',
  ARCHIVED: 'ARCHIVED',
  AUCTION: 'AUCTION',
  BACK_ON_MARKET: 'BACK_ON_MARKET',
  CANCELLED: 'CANCELLED',
  CLOSED: 'CLOSED',
  COMING_SOON: 'COMING_SOON',
  CONTINGENT: 'CONTINGENT',
  CONTINGENT_CONTINUE_TO_SHOW: 'CONTINGENT_CONTINUE_TO_SHOW',
  CONTINGENT_NO_SHOW: 'CONTINGENT_NO_SHOW',
  DELETED: 'DELETED',
  HOLD: 'HOLD',
  IN_CONTRACT: 'IN_CONTRACT',
  LEASED: 'LEASED',
  NEW: 'NEW',
  OFF_MARKET: 'OFF_MARKET',
  PENDING_CONTINUE_TO_SHOW: 'PENDING_CONTINUE_TO_SHOW',
  PENDING_NO_SHOW: 'PENDING_NO_SHOW',
  PENDING_TAKING_BACKUPS: 'PENDING_TAKING_BACKUPS',
  PRE_FORECLOSURE: 'PRE_FORECLOSURE',
  PRE_MLS: 'PRE_MLS',
  PRICE_CHANGE: 'PRICE_CHANGE',
  REACTIVATED: 'REACTIVATED',
  RENTED: 'RENTED',
  RESERVED: 'RESERVED',
  SHORT_SALE: 'SHORT_SALE',
  TEMPORARILY_OFF_MARKET: 'TEMPORARILY_OFF_MARKET',
  TERMINATED: 'TERMINATED',
  UNDER_CONTRACT: 'UNDER_CONTRACT',
  UNKNOWN: 'UNKNOWN'
};

export type ListingStatus = (typeof ListingStatus)[keyof typeof ListingStatus]


export const LoanType: {
  FHA: 'FHA',
  VA: 'VA',
  CONVENTIONAL: 'CONVENTIONAL',
  OTHER: 'OTHER',
  PRIVATE: 'PRIVATE',
  CONFORMING: 'CONFORMING',
  NON_CONFORMING_JUMBO: 'NON_CONFORMING_JUMBO'
};

export type LoanType = (typeof LoanType)[keyof typeof LoanType]


export const PhotoProcessingStatus: {
  PENDING: 'PENDING',
  PROCESSED: 'PROCESSED',
  ERROR: 'ERROR',
  SKIPPED: 'SKIPPED',
  CONNECTED: 'CONNECTED'
};

export type PhotoProcessingStatus = (typeof PhotoProcessingStatus)[keyof typeof PhotoProcessingStatus]


export const PropertyType: {
  SINGLE_FAMILY: 'SINGLE_FAMILY',
  CONDO: 'CONDO',
  TOWNHOUSE: 'TOWNHOUSE',
  MULTI_FAMILY: 'MULTI_FAMILY',
  LAND: 'LAND',
  COMMERCIAL: 'COMMERCIAL',
  OTHER: 'OTHER',
  MANUFACTURED: 'MANUFACTURED',
  VACATION: 'VACATION',
  AGRICULTURAL: 'AGRICULTURAL',
  INDUSTRIAL: 'INDUSTRIAL',
  MIXED_USE: 'MIXED_USE',
  RETAIL: 'RETAIL',
  OFFICE: 'OFFICE',
  APARTMENT_BUILDING: 'APARTMENT_BUILDING',
  DEVELOPMENT: 'DEVELOPMENT'
};

export type PropertyType = (typeof PropertyType)[keyof typeof PropertyType]


export const ReporterType: {
  CONSUMER: 'CONSUMER',
  REAL_ESTATE_PROFESSIONAL: 'REAL_ESTATE_PROFESSIONAL'
};

export type ReporterType = (typeof ReporterType)[keyof typeof ReporterType]

}

export type AuditSource = $Enums.AuditSource

export const AuditSource: typeof $Enums.AuditSource

export type CorrectionStatus = $Enums.CorrectionStatus

export const CorrectionStatus: typeof $Enums.CorrectionStatus

export type DataPullStatus = $Enums.DataPullStatus

export const DataPullStatus: typeof $Enums.DataPullStatus

export type EntityType = $Enums.EntityType

export const EntityType: typeof $Enums.EntityType

export type ListingReportReason = $Enums.ListingReportReason

export const ListingReportReason: typeof $Enums.ListingReportReason

export type ListingStatus = $Enums.ListingStatus

export const ListingStatus: typeof $Enums.ListingStatus

export type LoanType = $Enums.LoanType

export const LoanType: typeof $Enums.LoanType

export type PhotoProcessingStatus = $Enums.PhotoProcessingStatus

export const PhotoProcessingStatus: typeof $Enums.PhotoProcessingStatus

export type PropertyType = $Enums.PropertyType

export const PropertyType: typeof $Enums.PropertyType

export type ReporterType = $Enums.ReporterType

export const ReporterType: typeof $Enums.ReporterType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more AssumableMortgages
 * const assumableMortgages = await prisma.assumableMortgage.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more AssumableMortgages
   * const assumableMortgages = await prisma.assumableMortgage.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.assumableMortgage`: Exposes CRUD operations for the **AssumableMortgage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssumableMortgages
    * const assumableMortgages = await prisma.assumableMortgage.findMany()
    * ```
    */
  get assumableMortgage(): Prisma.AssumableMortgageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dataCorrection`: Exposes CRUD operations for the **DataCorrection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DataCorrections
    * const dataCorrections = await prisma.dataCorrection.findMany()
    * ```
    */
  get dataCorrection(): Prisma.DataCorrectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listing`: Exposes CRUD operations for the **Listing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Listings
    * const listings = await prisma.listing.findMany()
    * ```
    */
  get listing(): Prisma.ListingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingAudit`: Exposes CRUD operations for the **ListingAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingAudits
    * const listingAudits = await prisma.listingAudit.findMany()
    * ```
    */
  get listingAudit(): Prisma.ListingAuditDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingHistory`: Exposes CRUD operations for the **ListingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingHistories
    * const listingHistories = await prisma.listingHistory.findMany()
    * ```
    */
  get listingHistory(): Prisma.ListingHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingLocation`: Exposes CRUD operations for the **ListingLocation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingLocations
    * const listingLocations = await prisma.listingLocation.findMany()
    * ```
    */
  get listingLocation(): Prisma.ListingLocationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingPhoto`: Exposes CRUD operations for the **ListingPhoto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingPhotos
    * const listingPhotos = await prisma.listingPhoto.findMany()
    * ```
    */
  get listingPhoto(): Prisma.ListingPhotoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.listingReport`: Exposes CRUD operations for the **ListingReport** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ListingReports
    * const listingReports = await prisma.listingReport.findMany()
    * ```
    */
  get listingReport(): Prisma.ListingReportDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.loan`: Exposes CRUD operations for the **Loan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Loans
    * const loans = await prisma.loan.findMany()
    * ```
    */
  get loan(): Prisma.LoanDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mlsInstanceDetails`: Exposes CRUD operations for the **MlsInstanceDetails** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MlsInstanceDetails
    * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findMany()
    * ```
    */
  get mlsInstanceDetails(): Prisma.MlsInstanceDetailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mlsInstanceVisibility`: Exposes CRUD operations for the **MlsInstanceVisibility** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MlsInstanceVisibilities
    * const mlsInstanceVisibilities = await prisma.mlsInstanceVisibility.findMany()
    * ```
    */
  get mlsInstanceVisibility(): Prisma.MlsInstanceVisibilityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.propertyRadar`: Exposes CRUD operations for the **PropertyRadar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PropertyRadars
    * const propertyRadars = await prisma.propertyRadar.findMany()
    * ```
    */
  get propertyRadar(): Prisma.PropertyRadarDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rawListingData`: Exposes CRUD operations for the **RawListingData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RawListingData
    * const rawListingData = await prisma.rawListingData.findMany()
    * ```
    */
  get rawListingData(): Prisma.RawListingDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rawLoanData`: Exposes CRUD operations for the **RawLoanData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RawLoanData
    * const rawLoanData = await prisma.rawLoanData.findMany()
    * ```
    */
  get rawLoanData(): Prisma.RawLoanDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rawPhotoData`: Exposes CRUD operations for the **RawPhotoData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RawPhotoData
    * const rawPhotoData = await prisma.rawPhotoData.findMany()
    * ```
    */
  get rawPhotoData(): Prisma.RawPhotoDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.spatial_ref_sys`: Exposes CRUD operations for the **spatial_ref_sys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spatial_ref_sys
    * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
    * ```
    */
  get spatial_ref_sys(): Prisma.spatial_ref_sysDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    AssumableMortgage: 'AssumableMortgage',
    DataCorrection: 'DataCorrection',
    Listing: 'Listing',
    ListingAudit: 'ListingAudit',
    ListingHistory: 'ListingHistory',
    ListingLocation: 'ListingLocation',
    ListingPhoto: 'ListingPhoto',
    ListingReport: 'ListingReport',
    Loan: 'Loan',
    MlsInstanceDetails: 'MlsInstanceDetails',
    MlsInstanceVisibility: 'MlsInstanceVisibility',
    PropertyRadar: 'PropertyRadar',
    RawListingData: 'RawListingData',
    RawLoanData: 'RawLoanData',
    RawPhotoData: 'RawPhotoData',
    spatial_ref_sys: 'spatial_ref_sys'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "assumableMortgage" | "dataCorrection" | "listing" | "listingAudit" | "listingHistory" | "listingLocation" | "listingPhoto" | "listingReport" | "loan" | "mlsInstanceDetails" | "mlsInstanceVisibility" | "propertyRadar" | "rawListingData" | "rawLoanData" | "rawPhotoData" | "spatial_ref_sys"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      AssumableMortgage: {
        payload: Prisma.$AssumableMortgagePayload<ExtArgs>
        fields: Prisma.AssumableMortgageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssumableMortgageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssumableMortgageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          findFirst: {
            args: Prisma.AssumableMortgageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssumableMortgageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          findMany: {
            args: Prisma.AssumableMortgageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>[]
          }
          create: {
            args: Prisma.AssumableMortgageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          createMany: {
            args: Prisma.AssumableMortgageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssumableMortgageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>[]
          }
          delete: {
            args: Prisma.AssumableMortgageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          update: {
            args: Prisma.AssumableMortgageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          deleteMany: {
            args: Prisma.AssumableMortgageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssumableMortgageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssumableMortgageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>[]
          }
          upsert: {
            args: Prisma.AssumableMortgageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssumableMortgagePayload>
          }
          aggregate: {
            args: Prisma.AssumableMortgageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssumableMortgage>
          }
          groupBy: {
            args: Prisma.AssumableMortgageGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssumableMortgageGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssumableMortgageCountArgs<ExtArgs>
            result: $Utils.Optional<AssumableMortgageCountAggregateOutputType> | number
          }
        }
      }
      DataCorrection: {
        payload: Prisma.$DataCorrectionPayload<ExtArgs>
        fields: Prisma.DataCorrectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DataCorrectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DataCorrectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          findFirst: {
            args: Prisma.DataCorrectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DataCorrectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          findMany: {
            args: Prisma.DataCorrectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>[]
          }
          create: {
            args: Prisma.DataCorrectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          createMany: {
            args: Prisma.DataCorrectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DataCorrectionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>[]
          }
          delete: {
            args: Prisma.DataCorrectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          update: {
            args: Prisma.DataCorrectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          deleteMany: {
            args: Prisma.DataCorrectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DataCorrectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DataCorrectionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>[]
          }
          upsert: {
            args: Prisma.DataCorrectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DataCorrectionPayload>
          }
          aggregate: {
            args: Prisma.DataCorrectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDataCorrection>
          }
          groupBy: {
            args: Prisma.DataCorrectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DataCorrectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.DataCorrectionCountArgs<ExtArgs>
            result: $Utils.Optional<DataCorrectionCountAggregateOutputType> | number
          }
        }
      }
      Listing: {
        payload: Prisma.$ListingPayload<ExtArgs>
        fields: Prisma.ListingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          findFirst: {
            args: Prisma.ListingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          findMany: {
            args: Prisma.ListingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          create: {
            args: Prisma.ListingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          createMany: {
            args: Prisma.ListingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          delete: {
            args: Prisma.ListingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          update: {
            args: Prisma.ListingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          deleteMany: {
            args: Prisma.ListingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>[]
          }
          upsert: {
            args: Prisma.ListingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPayload>
          }
          aggregate: {
            args: Prisma.ListingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListing>
          }
          groupBy: {
            args: Prisma.ListingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingCountArgs<ExtArgs>
            result: $Utils.Optional<ListingCountAggregateOutputType> | number
          }
        }
      }
      ListingAudit: {
        payload: Prisma.$ListingAuditPayload<ExtArgs>
        fields: Prisma.ListingAuditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingAuditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingAuditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          findFirst: {
            args: Prisma.ListingAuditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingAuditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          findMany: {
            args: Prisma.ListingAuditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>[]
          }
          create: {
            args: Prisma.ListingAuditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          createMany: {
            args: Prisma.ListingAuditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingAuditCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>[]
          }
          delete: {
            args: Prisma.ListingAuditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          update: {
            args: Prisma.ListingAuditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          deleteMany: {
            args: Prisma.ListingAuditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingAuditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingAuditUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>[]
          }
          upsert: {
            args: Prisma.ListingAuditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingAuditPayload>
          }
          aggregate: {
            args: Prisma.ListingAuditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingAudit>
          }
          groupBy: {
            args: Prisma.ListingAuditGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingAuditGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingAuditCountArgs<ExtArgs>
            result: $Utils.Optional<ListingAuditCountAggregateOutputType> | number
          }
        }
      }
      ListingHistory: {
        payload: Prisma.$ListingHistoryPayload<ExtArgs>
        fields: Prisma.ListingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          findFirst: {
            args: Prisma.ListingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          findMany: {
            args: Prisma.ListingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>[]
          }
          create: {
            args: Prisma.ListingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          createMany: {
            args: Prisma.ListingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>[]
          }
          delete: {
            args: Prisma.ListingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          update: {
            args: Prisma.ListingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.ListingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>[]
          }
          upsert: {
            args: Prisma.ListingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingHistoryPayload>
          }
          aggregate: {
            args: Prisma.ListingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingHistory>
          }
          groupBy: {
            args: Prisma.ListingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<ListingHistoryCountAggregateOutputType> | number
          }
        }
      }
      ListingLocation: {
        payload: Prisma.$ListingLocationPayload<ExtArgs>
        fields: Prisma.ListingLocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingLocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingLocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          findFirst: {
            args: Prisma.ListingLocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingLocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          findMany: {
            args: Prisma.ListingLocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>[]
          }
          create: {
            args: Prisma.ListingLocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          createMany: {
            args: Prisma.ListingLocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingLocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>[]
          }
          delete: {
            args: Prisma.ListingLocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          update: {
            args: Prisma.ListingLocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          deleteMany: {
            args: Prisma.ListingLocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingLocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingLocationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>[]
          }
          upsert: {
            args: Prisma.ListingLocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingLocationPayload>
          }
          aggregate: {
            args: Prisma.ListingLocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingLocation>
          }
          groupBy: {
            args: Prisma.ListingLocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingLocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingLocationCountArgs<ExtArgs>
            result: $Utils.Optional<ListingLocationCountAggregateOutputType> | number
          }
        }
      }
      ListingPhoto: {
        payload: Prisma.$ListingPhotoPayload<ExtArgs>
        fields: Prisma.ListingPhotoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingPhotoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingPhotoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          findFirst: {
            args: Prisma.ListingPhotoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingPhotoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          findMany: {
            args: Prisma.ListingPhotoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>[]
          }
          create: {
            args: Prisma.ListingPhotoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          createMany: {
            args: Prisma.ListingPhotoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingPhotoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>[]
          }
          delete: {
            args: Prisma.ListingPhotoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          update: {
            args: Prisma.ListingPhotoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          deleteMany: {
            args: Prisma.ListingPhotoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingPhotoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingPhotoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>[]
          }
          upsert: {
            args: Prisma.ListingPhotoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingPhotoPayload>
          }
          aggregate: {
            args: Prisma.ListingPhotoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingPhoto>
          }
          groupBy: {
            args: Prisma.ListingPhotoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingPhotoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingPhotoCountArgs<ExtArgs>
            result: $Utils.Optional<ListingPhotoCountAggregateOutputType> | number
          }
        }
      }
      ListingReport: {
        payload: Prisma.$ListingReportPayload<ExtArgs>
        fields: Prisma.ListingReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ListingReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ListingReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          findFirst: {
            args: Prisma.ListingReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ListingReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          findMany: {
            args: Prisma.ListingReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>[]
          }
          create: {
            args: Prisma.ListingReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          createMany: {
            args: Prisma.ListingReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ListingReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>[]
          }
          delete: {
            args: Prisma.ListingReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          update: {
            args: Prisma.ListingReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          deleteMany: {
            args: Prisma.ListingReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ListingReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ListingReportUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>[]
          }
          upsert: {
            args: Prisma.ListingReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ListingReportPayload>
          }
          aggregate: {
            args: Prisma.ListingReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateListingReport>
          }
          groupBy: {
            args: Prisma.ListingReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ListingReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.ListingReportCountArgs<ExtArgs>
            result: $Utils.Optional<ListingReportCountAggregateOutputType> | number
          }
        }
      }
      Loan: {
        payload: Prisma.$LoanPayload<ExtArgs>
        fields: Prisma.LoanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LoanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LoanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          findFirst: {
            args: Prisma.LoanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LoanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          findMany: {
            args: Prisma.LoanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>[]
          }
          create: {
            args: Prisma.LoanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          createMany: {
            args: Prisma.LoanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LoanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>[]
          }
          delete: {
            args: Prisma.LoanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          update: {
            args: Prisma.LoanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          deleteMany: {
            args: Prisma.LoanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LoanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LoanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>[]
          }
          upsert: {
            args: Prisma.LoanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LoanPayload>
          }
          aggregate: {
            args: Prisma.LoanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLoan>
          }
          groupBy: {
            args: Prisma.LoanGroupByArgs<ExtArgs>
            result: $Utils.Optional<LoanGroupByOutputType>[]
          }
          count: {
            args: Prisma.LoanCountArgs<ExtArgs>
            result: $Utils.Optional<LoanCountAggregateOutputType> | number
          }
        }
      }
      MlsInstanceDetails: {
        payload: Prisma.$MlsInstanceDetailsPayload<ExtArgs>
        fields: Prisma.MlsInstanceDetailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MlsInstanceDetailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MlsInstanceDetailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          findFirst: {
            args: Prisma.MlsInstanceDetailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MlsInstanceDetailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          findMany: {
            args: Prisma.MlsInstanceDetailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>[]
          }
          create: {
            args: Prisma.MlsInstanceDetailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          createMany: {
            args: Prisma.MlsInstanceDetailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MlsInstanceDetailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>[]
          }
          delete: {
            args: Prisma.MlsInstanceDetailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          update: {
            args: Prisma.MlsInstanceDetailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          deleteMany: {
            args: Prisma.MlsInstanceDetailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MlsInstanceDetailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MlsInstanceDetailsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>[]
          }
          upsert: {
            args: Prisma.MlsInstanceDetailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceDetailsPayload>
          }
          aggregate: {
            args: Prisma.MlsInstanceDetailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMlsInstanceDetails>
          }
          groupBy: {
            args: Prisma.MlsInstanceDetailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MlsInstanceDetailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.MlsInstanceDetailsCountArgs<ExtArgs>
            result: $Utils.Optional<MlsInstanceDetailsCountAggregateOutputType> | number
          }
        }
      }
      MlsInstanceVisibility: {
        payload: Prisma.$MlsInstanceVisibilityPayload<ExtArgs>
        fields: Prisma.MlsInstanceVisibilityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MlsInstanceVisibilityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MlsInstanceVisibilityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          findFirst: {
            args: Prisma.MlsInstanceVisibilityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MlsInstanceVisibilityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          findMany: {
            args: Prisma.MlsInstanceVisibilityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>[]
          }
          create: {
            args: Prisma.MlsInstanceVisibilityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          createMany: {
            args: Prisma.MlsInstanceVisibilityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MlsInstanceVisibilityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>[]
          }
          delete: {
            args: Prisma.MlsInstanceVisibilityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          update: {
            args: Prisma.MlsInstanceVisibilityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          deleteMany: {
            args: Prisma.MlsInstanceVisibilityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MlsInstanceVisibilityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MlsInstanceVisibilityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>[]
          }
          upsert: {
            args: Prisma.MlsInstanceVisibilityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MlsInstanceVisibilityPayload>
          }
          aggregate: {
            args: Prisma.MlsInstanceVisibilityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMlsInstanceVisibility>
          }
          groupBy: {
            args: Prisma.MlsInstanceVisibilityGroupByArgs<ExtArgs>
            result: $Utils.Optional<MlsInstanceVisibilityGroupByOutputType>[]
          }
          count: {
            args: Prisma.MlsInstanceVisibilityCountArgs<ExtArgs>
            result: $Utils.Optional<MlsInstanceVisibilityCountAggregateOutputType> | number
          }
        }
      }
      PropertyRadar: {
        payload: Prisma.$PropertyRadarPayload<ExtArgs>
        fields: Prisma.PropertyRadarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PropertyRadarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PropertyRadarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          findFirst: {
            args: Prisma.PropertyRadarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PropertyRadarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          findMany: {
            args: Prisma.PropertyRadarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>[]
          }
          create: {
            args: Prisma.PropertyRadarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          createMany: {
            args: Prisma.PropertyRadarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PropertyRadarCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>[]
          }
          delete: {
            args: Prisma.PropertyRadarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          update: {
            args: Prisma.PropertyRadarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          deleteMany: {
            args: Prisma.PropertyRadarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PropertyRadarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PropertyRadarUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>[]
          }
          upsert: {
            args: Prisma.PropertyRadarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PropertyRadarPayload>
          }
          aggregate: {
            args: Prisma.PropertyRadarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePropertyRadar>
          }
          groupBy: {
            args: Prisma.PropertyRadarGroupByArgs<ExtArgs>
            result: $Utils.Optional<PropertyRadarGroupByOutputType>[]
          }
          count: {
            args: Prisma.PropertyRadarCountArgs<ExtArgs>
            result: $Utils.Optional<PropertyRadarCountAggregateOutputType> | number
          }
        }
      }
      RawListingData: {
        payload: Prisma.$RawListingDataPayload<ExtArgs>
        fields: Prisma.RawListingDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RawListingDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RawListingDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          findFirst: {
            args: Prisma.RawListingDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RawListingDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          findMany: {
            args: Prisma.RawListingDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>[]
          }
          create: {
            args: Prisma.RawListingDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          createMany: {
            args: Prisma.RawListingDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RawListingDataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>[]
          }
          delete: {
            args: Prisma.RawListingDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          update: {
            args: Prisma.RawListingDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          deleteMany: {
            args: Prisma.RawListingDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RawListingDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RawListingDataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>[]
          }
          upsert: {
            args: Prisma.RawListingDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawListingDataPayload>
          }
          aggregate: {
            args: Prisma.RawListingDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRawListingData>
          }
          groupBy: {
            args: Prisma.RawListingDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<RawListingDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.RawListingDataCountArgs<ExtArgs>
            result: $Utils.Optional<RawListingDataCountAggregateOutputType> | number
          }
        }
      }
      RawLoanData: {
        payload: Prisma.$RawLoanDataPayload<ExtArgs>
        fields: Prisma.RawLoanDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RawLoanDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RawLoanDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          findFirst: {
            args: Prisma.RawLoanDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RawLoanDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          findMany: {
            args: Prisma.RawLoanDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>[]
          }
          create: {
            args: Prisma.RawLoanDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          createMany: {
            args: Prisma.RawLoanDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RawLoanDataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>[]
          }
          delete: {
            args: Prisma.RawLoanDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          update: {
            args: Prisma.RawLoanDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          deleteMany: {
            args: Prisma.RawLoanDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RawLoanDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RawLoanDataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>[]
          }
          upsert: {
            args: Prisma.RawLoanDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawLoanDataPayload>
          }
          aggregate: {
            args: Prisma.RawLoanDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRawLoanData>
          }
          groupBy: {
            args: Prisma.RawLoanDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<RawLoanDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.RawLoanDataCountArgs<ExtArgs>
            result: $Utils.Optional<RawLoanDataCountAggregateOutputType> | number
          }
        }
      }
      RawPhotoData: {
        payload: Prisma.$RawPhotoDataPayload<ExtArgs>
        fields: Prisma.RawPhotoDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RawPhotoDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RawPhotoDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          findFirst: {
            args: Prisma.RawPhotoDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RawPhotoDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          findMany: {
            args: Prisma.RawPhotoDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>[]
          }
          create: {
            args: Prisma.RawPhotoDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          createMany: {
            args: Prisma.RawPhotoDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RawPhotoDataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>[]
          }
          delete: {
            args: Prisma.RawPhotoDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          update: {
            args: Prisma.RawPhotoDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          deleteMany: {
            args: Prisma.RawPhotoDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RawPhotoDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RawPhotoDataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>[]
          }
          upsert: {
            args: Prisma.RawPhotoDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RawPhotoDataPayload>
          }
          aggregate: {
            args: Prisma.RawPhotoDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRawPhotoData>
          }
          groupBy: {
            args: Prisma.RawPhotoDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<RawPhotoDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.RawPhotoDataCountArgs<ExtArgs>
            result: $Utils.Optional<RawPhotoDataCountAggregateOutputType> | number
          }
        }
      }
      spatial_ref_sys: {
        payload: Prisma.$spatial_ref_sysPayload<ExtArgs>
        fields: Prisma.spatial_ref_sysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.spatial_ref_sysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findFirst: {
            args: Prisma.spatial_ref_sysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findMany: {
            args: Prisma.spatial_ref_sysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          create: {
            args: Prisma.spatial_ref_sysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          createMany: {
            args: Prisma.spatial_ref_sysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          delete: {
            args: Prisma.spatial_ref_sysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          update: {
            args: Prisma.spatial_ref_sysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          deleteMany: {
            args: Prisma.spatial_ref_sysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.spatial_ref_sysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          upsert: {
            args: Prisma.spatial_ref_sysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          aggregate: {
            args: Prisma.Spatial_ref_sysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpatial_ref_sys>
          }
          groupBy: {
            args: Prisma.spatial_ref_sysGroupByArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysGroupByOutputType>[]
          }
          count: {
            args: Prisma.spatial_ref_sysCountArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    assumableMortgage?: AssumableMortgageOmit
    dataCorrection?: DataCorrectionOmit
    listing?: ListingOmit
    listingAudit?: ListingAuditOmit
    listingHistory?: ListingHistoryOmit
    listingLocation?: ListingLocationOmit
    listingPhoto?: ListingPhotoOmit
    listingReport?: ListingReportOmit
    loan?: LoanOmit
    mlsInstanceDetails?: MlsInstanceDetailsOmit
    mlsInstanceVisibility?: MlsInstanceVisibilityOmit
    propertyRadar?: PropertyRadarOmit
    rawListingData?: RawListingDataOmit
    rawLoanData?: RawLoanDataOmit
    rawPhotoData?: RawPhotoDataOmit
    spatial_ref_sys?: spatial_ref_sysOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ListingCountOutputType
   */

  export type ListingCountOutputType = {
    ListingAudit: number
    ListingHistory: number
    ListingPhoto: number
    ListingReport: number
  }

  export type ListingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListingAudit?: boolean | ListingCountOutputTypeCountListingAuditArgs
    ListingHistory?: boolean | ListingCountOutputTypeCountListingHistoryArgs
    ListingPhoto?: boolean | ListingCountOutputTypeCountListingPhotoArgs
    ListingReport?: boolean | ListingCountOutputTypeCountListingReportArgs
  }

  // Custom InputTypes
  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingCountOutputType
     */
    select?: ListingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountListingAuditArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAuditWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountListingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingHistoryWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountListingPhotoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingPhotoWhereInput
  }

  /**
   * ListingCountOutputType without action
   */
  export type ListingCountOutputTypeCountListingReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingReportWhereInput
  }


  /**
   * Count Type ListingAuditCountOutputType
   */

  export type ListingAuditCountOutputType = {
    ListingHistory: number
  }

  export type ListingAuditCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListingHistory?: boolean | ListingAuditCountOutputTypeCountListingHistoryArgs
  }

  // Custom InputTypes
  /**
   * ListingAuditCountOutputType without action
   */
  export type ListingAuditCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAuditCountOutputType
     */
    select?: ListingAuditCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ListingAuditCountOutputType without action
   */
  export type ListingAuditCountOutputTypeCountListingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingHistoryWhereInput
  }


  /**
   * Count Type PropertyRadarCountOutputType
   */

  export type PropertyRadarCountOutputType = {
    Loan: number
  }

  export type PropertyRadarCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Loan?: boolean | PropertyRadarCountOutputTypeCountLoanArgs
  }

  // Custom InputTypes
  /**
   * PropertyRadarCountOutputType without action
   */
  export type PropertyRadarCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadarCountOutputType
     */
    select?: PropertyRadarCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PropertyRadarCountOutputType without action
   */
  export type PropertyRadarCountOutputTypeCountLoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
  }


  /**
   * Count Type RawLoanDataCountOutputType
   */

  export type RawLoanDataCountOutputType = {
    RawListingData: number
  }

  export type RawLoanDataCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawListingData?: boolean | RawLoanDataCountOutputTypeCountRawListingDataArgs
  }

  // Custom InputTypes
  /**
   * RawLoanDataCountOutputType without action
   */
  export type RawLoanDataCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanDataCountOutputType
     */
    select?: RawLoanDataCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RawLoanDataCountOutputType without action
   */
  export type RawLoanDataCountOutputTypeCountRawListingDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RawListingDataWhereInput
  }


  /**
   * Count Type RawPhotoDataCountOutputType
   */

  export type RawPhotoDataCountOutputType = {
    RawListingData: number
  }

  export type RawPhotoDataCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawListingData?: boolean | RawPhotoDataCountOutputTypeCountRawListingDataArgs
  }

  // Custom InputTypes
  /**
   * RawPhotoDataCountOutputType without action
   */
  export type RawPhotoDataCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoDataCountOutputType
     */
    select?: RawPhotoDataCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RawPhotoDataCountOutputType without action
   */
  export type RawPhotoDataCountOutputTypeCountRawListingDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RawListingDataWhereInput
  }


  /**
   * Models
   */

  /**
   * Model AssumableMortgage
   */

  export type AggregateAssumableMortgage = {
    _count: AssumableMortgageCountAggregateOutputType | null
    _avg: AssumableMortgageAvgAggregateOutputType | null
    _sum: AssumableMortgageSumAggregateOutputType | null
    _min: AssumableMortgageMinAggregateOutputType | null
    _max: AssumableMortgageMaxAggregateOutputType | null
  }

  export type AssumableMortgageAvgAggregateOutputType = {
    currentBalance: Decimal | null
    interestRate: Decimal | null
    monthlyPayment: Decimal | null
    remainingTerm: number | null
    qualifyingIncome: Decimal | null
    qualifyingDti: Decimal | null
    downPayment: Decimal | null
    monthlyAllInPayment: Decimal | null
    monthlyHoa: Decimal | null
    monthlyInsurance: Decimal | null
    monthlyPmi: Decimal | null
    monthlyPropertyTax: Decimal | null
    percentDown: Decimal | null
    assumableDesirabilityScore: Decimal | null
    maxDownPaymentThreshold: Decimal | null
    maxLoanBalanceRatioThreshold: Decimal | null
  }

  export type AssumableMortgageSumAggregateOutputType = {
    currentBalance: Decimal | null
    interestRate: Decimal | null
    monthlyPayment: Decimal | null
    remainingTerm: number | null
    qualifyingIncome: Decimal | null
    qualifyingDti: Decimal | null
    downPayment: Decimal | null
    monthlyAllInPayment: Decimal | null
    monthlyHoa: Decimal | null
    monthlyInsurance: Decimal | null
    monthlyPmi: Decimal | null
    monthlyPropertyTax: Decimal | null
    percentDown: Decimal | null
    assumableDesirabilityScore: Decimal | null
    maxDownPaymentThreshold: Decimal | null
    maxLoanBalanceRatioThreshold: Decimal | null
  }

  export type AssumableMortgageMinAggregateOutputType = {
    id: string | null
    currentBalance: Decimal | null
    interestRate: Decimal | null
    monthlyPayment: Decimal | null
    remainingTerm: number | null
    qualifyingIncome: Decimal | null
    qualifyingDti: Decimal | null
    assumabilityStatus: string | null
    lastVerifiedDate: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    downPayment: Decimal | null
    monthlyAllInPayment: Decimal | null
    monthlyHoa: Decimal | null
    monthlyInsurance: Decimal | null
    monthlyPmi: Decimal | null
    monthlyPropertyTax: Decimal | null
    percentDown: Decimal | null
    tileMonthlyPayment: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean | null
    maxDownPaymentThreshold: Decimal | null
    maxLoanBalanceRatioThreshold: Decimal | null
    rawListingDataId: string | null
    rawLoanDataId: string | null
  }

  export type AssumableMortgageMaxAggregateOutputType = {
    id: string | null
    currentBalance: Decimal | null
    interestRate: Decimal | null
    monthlyPayment: Decimal | null
    remainingTerm: number | null
    qualifyingIncome: Decimal | null
    qualifyingDti: Decimal | null
    assumabilityStatus: string | null
    lastVerifiedDate: Date | null
    verificationNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    downPayment: Decimal | null
    monthlyAllInPayment: Decimal | null
    monthlyHoa: Decimal | null
    monthlyInsurance: Decimal | null
    monthlyPmi: Decimal | null
    monthlyPropertyTax: Decimal | null
    percentDown: Decimal | null
    tileMonthlyPayment: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean | null
    maxDownPaymentThreshold: Decimal | null
    maxLoanBalanceRatioThreshold: Decimal | null
    rawListingDataId: string | null
    rawLoanDataId: string | null
  }

  export type AssumableMortgageCountAggregateOutputType = {
    id: number
    currentBalance: number
    interestRate: number
    monthlyPayment: number
    remainingTerm: number
    qualifyingIncome: number
    qualifyingDti: number
    assumabilityStatus: number
    lastVerifiedDate: number
    verificationNotes: number
    createdAt: number
    updatedAt: number
    downPayment: number
    monthlyAllInPayment: number
    monthlyHoa: number
    monthlyInsurance: number
    monthlyPmi: number
    monthlyPropertyTax: number
    percentDown: number
    tileMonthlyPayment: number
    assumableDesirabilityScore: number
    isAssumableDesirable: number
    maxDownPaymentThreshold: number
    maxLoanBalanceRatioThreshold: number
    rawListingDataId: number
    rawLoanDataId: number
    _all: number
  }


  export type AssumableMortgageAvgAggregateInputType = {
    currentBalance?: true
    interestRate?: true
    monthlyPayment?: true
    remainingTerm?: true
    qualifyingIncome?: true
    qualifyingDti?: true
    downPayment?: true
    monthlyAllInPayment?: true
    monthlyHoa?: true
    monthlyInsurance?: true
    monthlyPmi?: true
    monthlyPropertyTax?: true
    percentDown?: true
    assumableDesirabilityScore?: true
    maxDownPaymentThreshold?: true
    maxLoanBalanceRatioThreshold?: true
  }

  export type AssumableMortgageSumAggregateInputType = {
    currentBalance?: true
    interestRate?: true
    monthlyPayment?: true
    remainingTerm?: true
    qualifyingIncome?: true
    qualifyingDti?: true
    downPayment?: true
    monthlyAllInPayment?: true
    monthlyHoa?: true
    monthlyInsurance?: true
    monthlyPmi?: true
    monthlyPropertyTax?: true
    percentDown?: true
    assumableDesirabilityScore?: true
    maxDownPaymentThreshold?: true
    maxLoanBalanceRatioThreshold?: true
  }

  export type AssumableMortgageMinAggregateInputType = {
    id?: true
    currentBalance?: true
    interestRate?: true
    monthlyPayment?: true
    remainingTerm?: true
    qualifyingIncome?: true
    qualifyingDti?: true
    assumabilityStatus?: true
    lastVerifiedDate?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    downPayment?: true
    monthlyAllInPayment?: true
    monthlyHoa?: true
    monthlyInsurance?: true
    monthlyPmi?: true
    monthlyPropertyTax?: true
    percentDown?: true
    tileMonthlyPayment?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    maxDownPaymentThreshold?: true
    maxLoanBalanceRatioThreshold?: true
    rawListingDataId?: true
    rawLoanDataId?: true
  }

  export type AssumableMortgageMaxAggregateInputType = {
    id?: true
    currentBalance?: true
    interestRate?: true
    monthlyPayment?: true
    remainingTerm?: true
    qualifyingIncome?: true
    qualifyingDti?: true
    assumabilityStatus?: true
    lastVerifiedDate?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    downPayment?: true
    monthlyAllInPayment?: true
    monthlyHoa?: true
    monthlyInsurance?: true
    monthlyPmi?: true
    monthlyPropertyTax?: true
    percentDown?: true
    tileMonthlyPayment?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    maxDownPaymentThreshold?: true
    maxLoanBalanceRatioThreshold?: true
    rawListingDataId?: true
    rawLoanDataId?: true
  }

  export type AssumableMortgageCountAggregateInputType = {
    id?: true
    currentBalance?: true
    interestRate?: true
    monthlyPayment?: true
    remainingTerm?: true
    qualifyingIncome?: true
    qualifyingDti?: true
    assumabilityStatus?: true
    lastVerifiedDate?: true
    verificationNotes?: true
    createdAt?: true
    updatedAt?: true
    downPayment?: true
    monthlyAllInPayment?: true
    monthlyHoa?: true
    monthlyInsurance?: true
    monthlyPmi?: true
    monthlyPropertyTax?: true
    percentDown?: true
    tileMonthlyPayment?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    maxDownPaymentThreshold?: true
    maxLoanBalanceRatioThreshold?: true
    rawListingDataId?: true
    rawLoanDataId?: true
    _all?: true
  }

  export type AssumableMortgageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssumableMortgage to aggregate.
     */
    where?: AssumableMortgageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssumableMortgages to fetch.
     */
    orderBy?: AssumableMortgageOrderByWithRelationInput | AssumableMortgageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssumableMortgageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssumableMortgages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssumableMortgages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssumableMortgages
    **/
    _count?: true | AssumableMortgageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssumableMortgageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssumableMortgageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssumableMortgageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssumableMortgageMaxAggregateInputType
  }

  export type GetAssumableMortgageAggregateType<T extends AssumableMortgageAggregateArgs> = {
        [P in keyof T & keyof AggregateAssumableMortgage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssumableMortgage[P]>
      : GetScalarType<T[P], AggregateAssumableMortgage[P]>
  }




  export type AssumableMortgageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssumableMortgageWhereInput
    orderBy?: AssumableMortgageOrderByWithAggregationInput | AssumableMortgageOrderByWithAggregationInput[]
    by: AssumableMortgageScalarFieldEnum[] | AssumableMortgageScalarFieldEnum
    having?: AssumableMortgageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssumableMortgageCountAggregateInputType | true
    _avg?: AssumableMortgageAvgAggregateInputType
    _sum?: AssumableMortgageSumAggregateInputType
    _min?: AssumableMortgageMinAggregateInputType
    _max?: AssumableMortgageMaxAggregateInputType
  }

  export type AssumableMortgageGroupByOutputType = {
    id: string
    currentBalance: Decimal
    interestRate: Decimal
    monthlyPayment: Decimal
    remainingTerm: number
    qualifyingIncome: Decimal | null
    qualifyingDti: Decimal | null
    assumabilityStatus: string
    lastVerifiedDate: Date | null
    verificationNotes: string | null
    createdAt: Date
    updatedAt: Date
    downPayment: Decimal
    monthlyAllInPayment: Decimal
    monthlyHoa: Decimal
    monthlyInsurance: Decimal
    monthlyPmi: Decimal
    monthlyPropertyTax: Decimal
    percentDown: Decimal
    tileMonthlyPayment: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean
    maxDownPaymentThreshold: Decimal | null
    maxLoanBalanceRatioThreshold: Decimal | null
    rawListingDataId: string | null
    rawLoanDataId: string | null
    _count: AssumableMortgageCountAggregateOutputType | null
    _avg: AssumableMortgageAvgAggregateOutputType | null
    _sum: AssumableMortgageSumAggregateOutputType | null
    _min: AssumableMortgageMinAggregateOutputType | null
    _max: AssumableMortgageMaxAggregateOutputType | null
  }

  type GetAssumableMortgageGroupByPayload<T extends AssumableMortgageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssumableMortgageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssumableMortgageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssumableMortgageGroupByOutputType[P]>
            : GetScalarType<T[P], AssumableMortgageGroupByOutputType[P]>
        }
      >
    >


  export type AssumableMortgageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentBalance?: boolean
    interestRate?: boolean
    monthlyPayment?: boolean
    remainingTerm?: boolean
    qualifyingIncome?: boolean
    qualifyingDti?: boolean
    assumabilityStatus?: boolean
    lastVerifiedDate?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    downPayment?: boolean
    monthlyAllInPayment?: boolean
    monthlyHoa?: boolean
    monthlyInsurance?: boolean
    monthlyPmi?: boolean
    monthlyPropertyTax?: boolean
    percentDown?: boolean
    tileMonthlyPayment?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: boolean
    maxLoanBalanceRatioThreshold?: boolean
    rawListingDataId?: boolean
    rawLoanDataId?: boolean
    Loan?: boolean | AssumableMortgage$LoanArgs<ExtArgs>
  }, ExtArgs["result"]["assumableMortgage"]>

  export type AssumableMortgageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentBalance?: boolean
    interestRate?: boolean
    monthlyPayment?: boolean
    remainingTerm?: boolean
    qualifyingIncome?: boolean
    qualifyingDti?: boolean
    assumabilityStatus?: boolean
    lastVerifiedDate?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    downPayment?: boolean
    monthlyAllInPayment?: boolean
    monthlyHoa?: boolean
    monthlyInsurance?: boolean
    monthlyPmi?: boolean
    monthlyPropertyTax?: boolean
    percentDown?: boolean
    tileMonthlyPayment?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: boolean
    maxLoanBalanceRatioThreshold?: boolean
    rawListingDataId?: boolean
    rawLoanDataId?: boolean
  }, ExtArgs["result"]["assumableMortgage"]>

  export type AssumableMortgageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    currentBalance?: boolean
    interestRate?: boolean
    monthlyPayment?: boolean
    remainingTerm?: boolean
    qualifyingIncome?: boolean
    qualifyingDti?: boolean
    assumabilityStatus?: boolean
    lastVerifiedDate?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    downPayment?: boolean
    monthlyAllInPayment?: boolean
    monthlyHoa?: boolean
    monthlyInsurance?: boolean
    monthlyPmi?: boolean
    monthlyPropertyTax?: boolean
    percentDown?: boolean
    tileMonthlyPayment?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: boolean
    maxLoanBalanceRatioThreshold?: boolean
    rawListingDataId?: boolean
    rawLoanDataId?: boolean
  }, ExtArgs["result"]["assumableMortgage"]>

  export type AssumableMortgageSelectScalar = {
    id?: boolean
    currentBalance?: boolean
    interestRate?: boolean
    monthlyPayment?: boolean
    remainingTerm?: boolean
    qualifyingIncome?: boolean
    qualifyingDti?: boolean
    assumabilityStatus?: boolean
    lastVerifiedDate?: boolean
    verificationNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    downPayment?: boolean
    monthlyAllInPayment?: boolean
    monthlyHoa?: boolean
    monthlyInsurance?: boolean
    monthlyPmi?: boolean
    monthlyPropertyTax?: boolean
    percentDown?: boolean
    tileMonthlyPayment?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: boolean
    maxLoanBalanceRatioThreshold?: boolean
    rawListingDataId?: boolean
    rawLoanDataId?: boolean
  }

  export type AssumableMortgageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "currentBalance" | "interestRate" | "monthlyPayment" | "remainingTerm" | "qualifyingIncome" | "qualifyingDti" | "assumabilityStatus" | "lastVerifiedDate" | "verificationNotes" | "createdAt" | "updatedAt" | "downPayment" | "monthlyAllInPayment" | "monthlyHoa" | "monthlyInsurance" | "monthlyPmi" | "monthlyPropertyTax" | "percentDown" | "tileMonthlyPayment" | "assumableDesirabilityScore" | "isAssumableDesirable" | "maxDownPaymentThreshold" | "maxLoanBalanceRatioThreshold" | "rawListingDataId" | "rawLoanDataId", ExtArgs["result"]["assumableMortgage"]>
  export type AssumableMortgageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Loan?: boolean | AssumableMortgage$LoanArgs<ExtArgs>
  }
  export type AssumableMortgageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AssumableMortgageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AssumableMortgagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssumableMortgage"
    objects: {
      Loan: Prisma.$LoanPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      currentBalance: Prisma.Decimal
      interestRate: Prisma.Decimal
      monthlyPayment: Prisma.Decimal
      remainingTerm: number
      qualifyingIncome: Prisma.Decimal | null
      qualifyingDti: Prisma.Decimal | null
      assumabilityStatus: string
      lastVerifiedDate: Date | null
      verificationNotes: string | null
      createdAt: Date
      updatedAt: Date
      downPayment: Prisma.Decimal
      monthlyAllInPayment: Prisma.Decimal
      monthlyHoa: Prisma.Decimal
      monthlyInsurance: Prisma.Decimal
      monthlyPmi: Prisma.Decimal
      monthlyPropertyTax: Prisma.Decimal
      percentDown: Prisma.Decimal
      tileMonthlyPayment: string | null
      assumableDesirabilityScore: Prisma.Decimal | null
      isAssumableDesirable: boolean
      maxDownPaymentThreshold: Prisma.Decimal | null
      maxLoanBalanceRatioThreshold: Prisma.Decimal | null
      rawListingDataId: string | null
      rawLoanDataId: string | null
    }, ExtArgs["result"]["assumableMortgage"]>
    composites: {}
  }

  type AssumableMortgageGetPayload<S extends boolean | null | undefined | AssumableMortgageDefaultArgs> = $Result.GetResult<Prisma.$AssumableMortgagePayload, S>

  type AssumableMortgageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssumableMortgageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssumableMortgageCountAggregateInputType | true
    }

  export interface AssumableMortgageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssumableMortgage'], meta: { name: 'AssumableMortgage' } }
    /**
     * Find zero or one AssumableMortgage that matches the filter.
     * @param {AssumableMortgageFindUniqueArgs} args - Arguments to find a AssumableMortgage
     * @example
     * // Get one AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssumableMortgageFindUniqueArgs>(args: SelectSubset<T, AssumableMortgageFindUniqueArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssumableMortgage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssumableMortgageFindUniqueOrThrowArgs} args - Arguments to find a AssumableMortgage
     * @example
     * // Get one AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssumableMortgageFindUniqueOrThrowArgs>(args: SelectSubset<T, AssumableMortgageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssumableMortgage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageFindFirstArgs} args - Arguments to find a AssumableMortgage
     * @example
     * // Get one AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssumableMortgageFindFirstArgs>(args?: SelectSubset<T, AssumableMortgageFindFirstArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssumableMortgage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageFindFirstOrThrowArgs} args - Arguments to find a AssumableMortgage
     * @example
     * // Get one AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssumableMortgageFindFirstOrThrowArgs>(args?: SelectSubset<T, AssumableMortgageFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssumableMortgages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssumableMortgages
     * const assumableMortgages = await prisma.assumableMortgage.findMany()
     * 
     * // Get first 10 AssumableMortgages
     * const assumableMortgages = await prisma.assumableMortgage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assumableMortgageWithIdOnly = await prisma.assumableMortgage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssumableMortgageFindManyArgs>(args?: SelectSubset<T, AssumableMortgageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssumableMortgage.
     * @param {AssumableMortgageCreateArgs} args - Arguments to create a AssumableMortgage.
     * @example
     * // Create one AssumableMortgage
     * const AssumableMortgage = await prisma.assumableMortgage.create({
     *   data: {
     *     // ... data to create a AssumableMortgage
     *   }
     * })
     * 
     */
    create<T extends AssumableMortgageCreateArgs>(args: SelectSubset<T, AssumableMortgageCreateArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssumableMortgages.
     * @param {AssumableMortgageCreateManyArgs} args - Arguments to create many AssumableMortgages.
     * @example
     * // Create many AssumableMortgages
     * const assumableMortgage = await prisma.assumableMortgage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssumableMortgageCreateManyArgs>(args?: SelectSubset<T, AssumableMortgageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AssumableMortgages and returns the data saved in the database.
     * @param {AssumableMortgageCreateManyAndReturnArgs} args - Arguments to create many AssumableMortgages.
     * @example
     * // Create many AssumableMortgages
     * const assumableMortgage = await prisma.assumableMortgage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AssumableMortgages and only return the `id`
     * const assumableMortgageWithIdOnly = await prisma.assumableMortgage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssumableMortgageCreateManyAndReturnArgs>(args?: SelectSubset<T, AssumableMortgageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AssumableMortgage.
     * @param {AssumableMortgageDeleteArgs} args - Arguments to delete one AssumableMortgage.
     * @example
     * // Delete one AssumableMortgage
     * const AssumableMortgage = await prisma.assumableMortgage.delete({
     *   where: {
     *     // ... filter to delete one AssumableMortgage
     *   }
     * })
     * 
     */
    delete<T extends AssumableMortgageDeleteArgs>(args: SelectSubset<T, AssumableMortgageDeleteArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssumableMortgage.
     * @param {AssumableMortgageUpdateArgs} args - Arguments to update one AssumableMortgage.
     * @example
     * // Update one AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssumableMortgageUpdateArgs>(args: SelectSubset<T, AssumableMortgageUpdateArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssumableMortgages.
     * @param {AssumableMortgageDeleteManyArgs} args - Arguments to filter AssumableMortgages to delete.
     * @example
     * // Delete a few AssumableMortgages
     * const { count } = await prisma.assumableMortgage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssumableMortgageDeleteManyArgs>(args?: SelectSubset<T, AssumableMortgageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssumableMortgages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssumableMortgages
     * const assumableMortgage = await prisma.assumableMortgage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssumableMortgageUpdateManyArgs>(args: SelectSubset<T, AssumableMortgageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssumableMortgages and returns the data updated in the database.
     * @param {AssumableMortgageUpdateManyAndReturnArgs} args - Arguments to update many AssumableMortgages.
     * @example
     * // Update many AssumableMortgages
     * const assumableMortgage = await prisma.assumableMortgage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AssumableMortgages and only return the `id`
     * const assumableMortgageWithIdOnly = await prisma.assumableMortgage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssumableMortgageUpdateManyAndReturnArgs>(args: SelectSubset<T, AssumableMortgageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AssumableMortgage.
     * @param {AssumableMortgageUpsertArgs} args - Arguments to update or create a AssumableMortgage.
     * @example
     * // Update or create a AssumableMortgage
     * const assumableMortgage = await prisma.assumableMortgage.upsert({
     *   create: {
     *     // ... data to create a AssumableMortgage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssumableMortgage we want to update
     *   }
     * })
     */
    upsert<T extends AssumableMortgageUpsertArgs>(args: SelectSubset<T, AssumableMortgageUpsertArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssumableMortgages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageCountArgs} args - Arguments to filter AssumableMortgages to count.
     * @example
     * // Count the number of AssumableMortgages
     * const count = await prisma.assumableMortgage.count({
     *   where: {
     *     // ... the filter for the AssumableMortgages we want to count
     *   }
     * })
    **/
    count<T extends AssumableMortgageCountArgs>(
      args?: Subset<T, AssumableMortgageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssumableMortgageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssumableMortgage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssumableMortgageAggregateArgs>(args: Subset<T, AssumableMortgageAggregateArgs>): Prisma.PrismaPromise<GetAssumableMortgageAggregateType<T>>

    /**
     * Group by AssumableMortgage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssumableMortgageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssumableMortgageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssumableMortgageGroupByArgs['orderBy'] }
        : { orderBy?: AssumableMortgageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssumableMortgageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssumableMortgageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssumableMortgage model
   */
  readonly fields: AssumableMortgageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssumableMortgage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssumableMortgageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Loan<T extends AssumableMortgage$LoanArgs<ExtArgs> = {}>(args?: Subset<T, AssumableMortgage$LoanArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssumableMortgage model
   */
  interface AssumableMortgageFieldRefs {
    readonly id: FieldRef<"AssumableMortgage", 'String'>
    readonly currentBalance: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly interestRate: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyPayment: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly remainingTerm: FieldRef<"AssumableMortgage", 'Int'>
    readonly qualifyingIncome: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly qualifyingDti: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly assumabilityStatus: FieldRef<"AssumableMortgage", 'String'>
    readonly lastVerifiedDate: FieldRef<"AssumableMortgage", 'DateTime'>
    readonly verificationNotes: FieldRef<"AssumableMortgage", 'String'>
    readonly createdAt: FieldRef<"AssumableMortgage", 'DateTime'>
    readonly updatedAt: FieldRef<"AssumableMortgage", 'DateTime'>
    readonly downPayment: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyAllInPayment: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyHoa: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyInsurance: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyPmi: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly monthlyPropertyTax: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly percentDown: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly tileMonthlyPayment: FieldRef<"AssumableMortgage", 'String'>
    readonly assumableDesirabilityScore: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly isAssumableDesirable: FieldRef<"AssumableMortgage", 'Boolean'>
    readonly maxDownPaymentThreshold: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly maxLoanBalanceRatioThreshold: FieldRef<"AssumableMortgage", 'Decimal'>
    readonly rawListingDataId: FieldRef<"AssumableMortgage", 'String'>
    readonly rawLoanDataId: FieldRef<"AssumableMortgage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AssumableMortgage findUnique
   */
  export type AssumableMortgageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter, which AssumableMortgage to fetch.
     */
    where: AssumableMortgageWhereUniqueInput
  }

  /**
   * AssumableMortgage findUniqueOrThrow
   */
  export type AssumableMortgageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter, which AssumableMortgage to fetch.
     */
    where: AssumableMortgageWhereUniqueInput
  }

  /**
   * AssumableMortgage findFirst
   */
  export type AssumableMortgageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter, which AssumableMortgage to fetch.
     */
    where?: AssumableMortgageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssumableMortgages to fetch.
     */
    orderBy?: AssumableMortgageOrderByWithRelationInput | AssumableMortgageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssumableMortgages.
     */
    cursor?: AssumableMortgageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssumableMortgages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssumableMortgages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssumableMortgages.
     */
    distinct?: AssumableMortgageScalarFieldEnum | AssumableMortgageScalarFieldEnum[]
  }

  /**
   * AssumableMortgage findFirstOrThrow
   */
  export type AssumableMortgageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter, which AssumableMortgage to fetch.
     */
    where?: AssumableMortgageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssumableMortgages to fetch.
     */
    orderBy?: AssumableMortgageOrderByWithRelationInput | AssumableMortgageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssumableMortgages.
     */
    cursor?: AssumableMortgageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssumableMortgages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssumableMortgages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssumableMortgages.
     */
    distinct?: AssumableMortgageScalarFieldEnum | AssumableMortgageScalarFieldEnum[]
  }

  /**
   * AssumableMortgage findMany
   */
  export type AssumableMortgageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter, which AssumableMortgages to fetch.
     */
    where?: AssumableMortgageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssumableMortgages to fetch.
     */
    orderBy?: AssumableMortgageOrderByWithRelationInput | AssumableMortgageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssumableMortgages.
     */
    cursor?: AssumableMortgageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssumableMortgages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssumableMortgages.
     */
    skip?: number
    distinct?: AssumableMortgageScalarFieldEnum | AssumableMortgageScalarFieldEnum[]
  }

  /**
   * AssumableMortgage create
   */
  export type AssumableMortgageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * The data needed to create a AssumableMortgage.
     */
    data: XOR<AssumableMortgageCreateInput, AssumableMortgageUncheckedCreateInput>
  }

  /**
   * AssumableMortgage createMany
   */
  export type AssumableMortgageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssumableMortgages.
     */
    data: AssumableMortgageCreateManyInput | AssumableMortgageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssumableMortgage createManyAndReturn
   */
  export type AssumableMortgageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * The data used to create many AssumableMortgages.
     */
    data: AssumableMortgageCreateManyInput | AssumableMortgageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssumableMortgage update
   */
  export type AssumableMortgageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * The data needed to update a AssumableMortgage.
     */
    data: XOR<AssumableMortgageUpdateInput, AssumableMortgageUncheckedUpdateInput>
    /**
     * Choose, which AssumableMortgage to update.
     */
    where: AssumableMortgageWhereUniqueInput
  }

  /**
   * AssumableMortgage updateMany
   */
  export type AssumableMortgageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssumableMortgages.
     */
    data: XOR<AssumableMortgageUpdateManyMutationInput, AssumableMortgageUncheckedUpdateManyInput>
    /**
     * Filter which AssumableMortgages to update
     */
    where?: AssumableMortgageWhereInput
    /**
     * Limit how many AssumableMortgages to update.
     */
    limit?: number
  }

  /**
   * AssumableMortgage updateManyAndReturn
   */
  export type AssumableMortgageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * The data used to update AssumableMortgages.
     */
    data: XOR<AssumableMortgageUpdateManyMutationInput, AssumableMortgageUncheckedUpdateManyInput>
    /**
     * Filter which AssumableMortgages to update
     */
    where?: AssumableMortgageWhereInput
    /**
     * Limit how many AssumableMortgages to update.
     */
    limit?: number
  }

  /**
   * AssumableMortgage upsert
   */
  export type AssumableMortgageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * The filter to search for the AssumableMortgage to update in case it exists.
     */
    where: AssumableMortgageWhereUniqueInput
    /**
     * In case the AssumableMortgage found by the `where` argument doesn't exist, create a new AssumableMortgage with this data.
     */
    create: XOR<AssumableMortgageCreateInput, AssumableMortgageUncheckedCreateInput>
    /**
     * In case the AssumableMortgage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssumableMortgageUpdateInput, AssumableMortgageUncheckedUpdateInput>
  }

  /**
   * AssumableMortgage delete
   */
  export type AssumableMortgageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    /**
     * Filter which AssumableMortgage to delete.
     */
    where: AssumableMortgageWhereUniqueInput
  }

  /**
   * AssumableMortgage deleteMany
   */
  export type AssumableMortgageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssumableMortgages to delete
     */
    where?: AssumableMortgageWhereInput
    /**
     * Limit how many AssumableMortgages to delete.
     */
    limit?: number
  }

  /**
   * AssumableMortgage.Loan
   */
  export type AssumableMortgage$LoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    where?: LoanWhereInput
  }

  /**
   * AssumableMortgage without action
   */
  export type AssumableMortgageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
  }


  /**
   * Model DataCorrection
   */

  export type AggregateDataCorrection = {
    _count: DataCorrectionCountAggregateOutputType | null
    _min: DataCorrectionMinAggregateOutputType | null
    _max: DataCorrectionMaxAggregateOutputType | null
  }

  export type DataCorrectionMinAggregateOutputType = {
    id: string | null
    entityType: $Enums.EntityType | null
    entityId: string | null
    field: string | null
    reason: string | null
    status: $Enums.CorrectionStatus | null
    appliedAt: Date | null
    createdBy: string | null
    createdByAuditSource: $Enums.AuditSource | null
    createdAt: Date | null
    updatedAt: Date | null
    column: string | null
    isArrayField: boolean | null
    isJsonField: boolean | null
    rawDataId: string | null
  }

  export type DataCorrectionMaxAggregateOutputType = {
    id: string | null
    entityType: $Enums.EntityType | null
    entityId: string | null
    field: string | null
    reason: string | null
    status: $Enums.CorrectionStatus | null
    appliedAt: Date | null
    createdBy: string | null
    createdByAuditSource: $Enums.AuditSource | null
    createdAt: Date | null
    updatedAt: Date | null
    column: string | null
    isArrayField: boolean | null
    isJsonField: boolean | null
    rawDataId: string | null
  }

  export type DataCorrectionCountAggregateOutputType = {
    id: number
    entityType: number
    entityId: number
    field: number
    originalValue: number
    correctedValue: number
    reason: number
    status: number
    appliedAt: number
    createdBy: number
    createdByAuditSource: number
    createdAt: number
    updatedAt: number
    column: number
    fieldPath: number
    isArrayField: number
    isJsonField: number
    rawDataId: number
    _all: number
  }


  export type DataCorrectionMinAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    field?: true
    reason?: true
    status?: true
    appliedAt?: true
    createdBy?: true
    createdByAuditSource?: true
    createdAt?: true
    updatedAt?: true
    column?: true
    isArrayField?: true
    isJsonField?: true
    rawDataId?: true
  }

  export type DataCorrectionMaxAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    field?: true
    reason?: true
    status?: true
    appliedAt?: true
    createdBy?: true
    createdByAuditSource?: true
    createdAt?: true
    updatedAt?: true
    column?: true
    isArrayField?: true
    isJsonField?: true
    rawDataId?: true
  }

  export type DataCorrectionCountAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    field?: true
    originalValue?: true
    correctedValue?: true
    reason?: true
    status?: true
    appliedAt?: true
    createdBy?: true
    createdByAuditSource?: true
    createdAt?: true
    updatedAt?: true
    column?: true
    fieldPath?: true
    isArrayField?: true
    isJsonField?: true
    rawDataId?: true
    _all?: true
  }

  export type DataCorrectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DataCorrection to aggregate.
     */
    where?: DataCorrectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DataCorrections to fetch.
     */
    orderBy?: DataCorrectionOrderByWithRelationInput | DataCorrectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DataCorrectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DataCorrections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DataCorrections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DataCorrections
    **/
    _count?: true | DataCorrectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DataCorrectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DataCorrectionMaxAggregateInputType
  }

  export type GetDataCorrectionAggregateType<T extends DataCorrectionAggregateArgs> = {
        [P in keyof T & keyof AggregateDataCorrection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDataCorrection[P]>
      : GetScalarType<T[P], AggregateDataCorrection[P]>
  }




  export type DataCorrectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DataCorrectionWhereInput
    orderBy?: DataCorrectionOrderByWithAggregationInput | DataCorrectionOrderByWithAggregationInput[]
    by: DataCorrectionScalarFieldEnum[] | DataCorrectionScalarFieldEnum
    having?: DataCorrectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DataCorrectionCountAggregateInputType | true
    _min?: DataCorrectionMinAggregateInputType
    _max?: DataCorrectionMaxAggregateInputType
  }

  export type DataCorrectionGroupByOutputType = {
    id: string
    entityType: $Enums.EntityType
    entityId: string
    field: string
    originalValue: JsonValue | null
    correctedValue: JsonValue
    reason: string | null
    status: $Enums.CorrectionStatus
    appliedAt: Date | null
    createdBy: string
    createdByAuditSource: $Enums.AuditSource
    createdAt: Date
    updatedAt: Date
    column: string
    fieldPath: string[]
    isArrayField: boolean
    isJsonField: boolean
    rawDataId: string | null
    _count: DataCorrectionCountAggregateOutputType | null
    _min: DataCorrectionMinAggregateOutputType | null
    _max: DataCorrectionMaxAggregateOutputType | null
  }

  type GetDataCorrectionGroupByPayload<T extends DataCorrectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DataCorrectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DataCorrectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DataCorrectionGroupByOutputType[P]>
            : GetScalarType<T[P], DataCorrectionGroupByOutputType[P]>
        }
      >
    >


  export type DataCorrectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    field?: boolean
    originalValue?: boolean
    correctedValue?: boolean
    reason?: boolean
    status?: boolean
    appliedAt?: boolean
    createdBy?: boolean
    createdByAuditSource?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    column?: boolean
    fieldPath?: boolean
    isArrayField?: boolean
    isJsonField?: boolean
    rawDataId?: boolean
  }, ExtArgs["result"]["dataCorrection"]>

  export type DataCorrectionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    field?: boolean
    originalValue?: boolean
    correctedValue?: boolean
    reason?: boolean
    status?: boolean
    appliedAt?: boolean
    createdBy?: boolean
    createdByAuditSource?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    column?: boolean
    fieldPath?: boolean
    isArrayField?: boolean
    isJsonField?: boolean
    rawDataId?: boolean
  }, ExtArgs["result"]["dataCorrection"]>

  export type DataCorrectionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    field?: boolean
    originalValue?: boolean
    correctedValue?: boolean
    reason?: boolean
    status?: boolean
    appliedAt?: boolean
    createdBy?: boolean
    createdByAuditSource?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    column?: boolean
    fieldPath?: boolean
    isArrayField?: boolean
    isJsonField?: boolean
    rawDataId?: boolean
  }, ExtArgs["result"]["dataCorrection"]>

  export type DataCorrectionSelectScalar = {
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    field?: boolean
    originalValue?: boolean
    correctedValue?: boolean
    reason?: boolean
    status?: boolean
    appliedAt?: boolean
    createdBy?: boolean
    createdByAuditSource?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    column?: boolean
    fieldPath?: boolean
    isArrayField?: boolean
    isJsonField?: boolean
    rawDataId?: boolean
  }

  export type DataCorrectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "entityType" | "entityId" | "field" | "originalValue" | "correctedValue" | "reason" | "status" | "appliedAt" | "createdBy" | "createdByAuditSource" | "createdAt" | "updatedAt" | "column" | "fieldPath" | "isArrayField" | "isJsonField" | "rawDataId", ExtArgs["result"]["dataCorrection"]>

  export type $DataCorrectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DataCorrection"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      entityType: $Enums.EntityType
      entityId: string
      field: string
      originalValue: Prisma.JsonValue | null
      correctedValue: Prisma.JsonValue
      reason: string | null
      status: $Enums.CorrectionStatus
      appliedAt: Date | null
      createdBy: string
      createdByAuditSource: $Enums.AuditSource
      createdAt: Date
      updatedAt: Date
      column: string
      fieldPath: string[]
      isArrayField: boolean
      isJsonField: boolean
      rawDataId: string | null
    }, ExtArgs["result"]["dataCorrection"]>
    composites: {}
  }

  type DataCorrectionGetPayload<S extends boolean | null | undefined | DataCorrectionDefaultArgs> = $Result.GetResult<Prisma.$DataCorrectionPayload, S>

  type DataCorrectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DataCorrectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DataCorrectionCountAggregateInputType | true
    }

  export interface DataCorrectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DataCorrection'], meta: { name: 'DataCorrection' } }
    /**
     * Find zero or one DataCorrection that matches the filter.
     * @param {DataCorrectionFindUniqueArgs} args - Arguments to find a DataCorrection
     * @example
     * // Get one DataCorrection
     * const dataCorrection = await prisma.dataCorrection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DataCorrectionFindUniqueArgs>(args: SelectSubset<T, DataCorrectionFindUniqueArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DataCorrection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DataCorrectionFindUniqueOrThrowArgs} args - Arguments to find a DataCorrection
     * @example
     * // Get one DataCorrection
     * const dataCorrection = await prisma.dataCorrection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DataCorrectionFindUniqueOrThrowArgs>(args: SelectSubset<T, DataCorrectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DataCorrection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionFindFirstArgs} args - Arguments to find a DataCorrection
     * @example
     * // Get one DataCorrection
     * const dataCorrection = await prisma.dataCorrection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DataCorrectionFindFirstArgs>(args?: SelectSubset<T, DataCorrectionFindFirstArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DataCorrection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionFindFirstOrThrowArgs} args - Arguments to find a DataCorrection
     * @example
     * // Get one DataCorrection
     * const dataCorrection = await prisma.dataCorrection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DataCorrectionFindFirstOrThrowArgs>(args?: SelectSubset<T, DataCorrectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DataCorrections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DataCorrections
     * const dataCorrections = await prisma.dataCorrection.findMany()
     * 
     * // Get first 10 DataCorrections
     * const dataCorrections = await prisma.dataCorrection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dataCorrectionWithIdOnly = await prisma.dataCorrection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DataCorrectionFindManyArgs>(args?: SelectSubset<T, DataCorrectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DataCorrection.
     * @param {DataCorrectionCreateArgs} args - Arguments to create a DataCorrection.
     * @example
     * // Create one DataCorrection
     * const DataCorrection = await prisma.dataCorrection.create({
     *   data: {
     *     // ... data to create a DataCorrection
     *   }
     * })
     * 
     */
    create<T extends DataCorrectionCreateArgs>(args: SelectSubset<T, DataCorrectionCreateArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DataCorrections.
     * @param {DataCorrectionCreateManyArgs} args - Arguments to create many DataCorrections.
     * @example
     * // Create many DataCorrections
     * const dataCorrection = await prisma.dataCorrection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DataCorrectionCreateManyArgs>(args?: SelectSubset<T, DataCorrectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DataCorrections and returns the data saved in the database.
     * @param {DataCorrectionCreateManyAndReturnArgs} args - Arguments to create many DataCorrections.
     * @example
     * // Create many DataCorrections
     * const dataCorrection = await prisma.dataCorrection.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DataCorrections and only return the `id`
     * const dataCorrectionWithIdOnly = await prisma.dataCorrection.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DataCorrectionCreateManyAndReturnArgs>(args?: SelectSubset<T, DataCorrectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DataCorrection.
     * @param {DataCorrectionDeleteArgs} args - Arguments to delete one DataCorrection.
     * @example
     * // Delete one DataCorrection
     * const DataCorrection = await prisma.dataCorrection.delete({
     *   where: {
     *     // ... filter to delete one DataCorrection
     *   }
     * })
     * 
     */
    delete<T extends DataCorrectionDeleteArgs>(args: SelectSubset<T, DataCorrectionDeleteArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DataCorrection.
     * @param {DataCorrectionUpdateArgs} args - Arguments to update one DataCorrection.
     * @example
     * // Update one DataCorrection
     * const dataCorrection = await prisma.dataCorrection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DataCorrectionUpdateArgs>(args: SelectSubset<T, DataCorrectionUpdateArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DataCorrections.
     * @param {DataCorrectionDeleteManyArgs} args - Arguments to filter DataCorrections to delete.
     * @example
     * // Delete a few DataCorrections
     * const { count } = await prisma.dataCorrection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DataCorrectionDeleteManyArgs>(args?: SelectSubset<T, DataCorrectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DataCorrections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DataCorrections
     * const dataCorrection = await prisma.dataCorrection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DataCorrectionUpdateManyArgs>(args: SelectSubset<T, DataCorrectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DataCorrections and returns the data updated in the database.
     * @param {DataCorrectionUpdateManyAndReturnArgs} args - Arguments to update many DataCorrections.
     * @example
     * // Update many DataCorrections
     * const dataCorrection = await prisma.dataCorrection.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DataCorrections and only return the `id`
     * const dataCorrectionWithIdOnly = await prisma.dataCorrection.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DataCorrectionUpdateManyAndReturnArgs>(args: SelectSubset<T, DataCorrectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DataCorrection.
     * @param {DataCorrectionUpsertArgs} args - Arguments to update or create a DataCorrection.
     * @example
     * // Update or create a DataCorrection
     * const dataCorrection = await prisma.dataCorrection.upsert({
     *   create: {
     *     // ... data to create a DataCorrection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DataCorrection we want to update
     *   }
     * })
     */
    upsert<T extends DataCorrectionUpsertArgs>(args: SelectSubset<T, DataCorrectionUpsertArgs<ExtArgs>>): Prisma__DataCorrectionClient<$Result.GetResult<Prisma.$DataCorrectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DataCorrections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionCountArgs} args - Arguments to filter DataCorrections to count.
     * @example
     * // Count the number of DataCorrections
     * const count = await prisma.dataCorrection.count({
     *   where: {
     *     // ... the filter for the DataCorrections we want to count
     *   }
     * })
    **/
    count<T extends DataCorrectionCountArgs>(
      args?: Subset<T, DataCorrectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DataCorrectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DataCorrection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DataCorrectionAggregateArgs>(args: Subset<T, DataCorrectionAggregateArgs>): Prisma.PrismaPromise<GetDataCorrectionAggregateType<T>>

    /**
     * Group by DataCorrection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DataCorrectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DataCorrectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DataCorrectionGroupByArgs['orderBy'] }
        : { orderBy?: DataCorrectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DataCorrectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDataCorrectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DataCorrection model
   */
  readonly fields: DataCorrectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DataCorrection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DataCorrectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DataCorrection model
   */
  interface DataCorrectionFieldRefs {
    readonly id: FieldRef<"DataCorrection", 'String'>
    readonly entityType: FieldRef<"DataCorrection", 'EntityType'>
    readonly entityId: FieldRef<"DataCorrection", 'String'>
    readonly field: FieldRef<"DataCorrection", 'String'>
    readonly originalValue: FieldRef<"DataCorrection", 'Json'>
    readonly correctedValue: FieldRef<"DataCorrection", 'Json'>
    readonly reason: FieldRef<"DataCorrection", 'String'>
    readonly status: FieldRef<"DataCorrection", 'CorrectionStatus'>
    readonly appliedAt: FieldRef<"DataCorrection", 'DateTime'>
    readonly createdBy: FieldRef<"DataCorrection", 'String'>
    readonly createdByAuditSource: FieldRef<"DataCorrection", 'AuditSource'>
    readonly createdAt: FieldRef<"DataCorrection", 'DateTime'>
    readonly updatedAt: FieldRef<"DataCorrection", 'DateTime'>
    readonly column: FieldRef<"DataCorrection", 'String'>
    readonly fieldPath: FieldRef<"DataCorrection", 'String[]'>
    readonly isArrayField: FieldRef<"DataCorrection", 'Boolean'>
    readonly isJsonField: FieldRef<"DataCorrection", 'Boolean'>
    readonly rawDataId: FieldRef<"DataCorrection", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DataCorrection findUnique
   */
  export type DataCorrectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter, which DataCorrection to fetch.
     */
    where: DataCorrectionWhereUniqueInput
  }

  /**
   * DataCorrection findUniqueOrThrow
   */
  export type DataCorrectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter, which DataCorrection to fetch.
     */
    where: DataCorrectionWhereUniqueInput
  }

  /**
   * DataCorrection findFirst
   */
  export type DataCorrectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter, which DataCorrection to fetch.
     */
    where?: DataCorrectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DataCorrections to fetch.
     */
    orderBy?: DataCorrectionOrderByWithRelationInput | DataCorrectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DataCorrections.
     */
    cursor?: DataCorrectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DataCorrections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DataCorrections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DataCorrections.
     */
    distinct?: DataCorrectionScalarFieldEnum | DataCorrectionScalarFieldEnum[]
  }

  /**
   * DataCorrection findFirstOrThrow
   */
  export type DataCorrectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter, which DataCorrection to fetch.
     */
    where?: DataCorrectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DataCorrections to fetch.
     */
    orderBy?: DataCorrectionOrderByWithRelationInput | DataCorrectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DataCorrections.
     */
    cursor?: DataCorrectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DataCorrections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DataCorrections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DataCorrections.
     */
    distinct?: DataCorrectionScalarFieldEnum | DataCorrectionScalarFieldEnum[]
  }

  /**
   * DataCorrection findMany
   */
  export type DataCorrectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter, which DataCorrections to fetch.
     */
    where?: DataCorrectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DataCorrections to fetch.
     */
    orderBy?: DataCorrectionOrderByWithRelationInput | DataCorrectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DataCorrections.
     */
    cursor?: DataCorrectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DataCorrections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DataCorrections.
     */
    skip?: number
    distinct?: DataCorrectionScalarFieldEnum | DataCorrectionScalarFieldEnum[]
  }

  /**
   * DataCorrection create
   */
  export type DataCorrectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * The data needed to create a DataCorrection.
     */
    data: XOR<DataCorrectionCreateInput, DataCorrectionUncheckedCreateInput>
  }

  /**
   * DataCorrection createMany
   */
  export type DataCorrectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DataCorrections.
     */
    data: DataCorrectionCreateManyInput | DataCorrectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DataCorrection createManyAndReturn
   */
  export type DataCorrectionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * The data used to create many DataCorrections.
     */
    data: DataCorrectionCreateManyInput | DataCorrectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DataCorrection update
   */
  export type DataCorrectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * The data needed to update a DataCorrection.
     */
    data: XOR<DataCorrectionUpdateInput, DataCorrectionUncheckedUpdateInput>
    /**
     * Choose, which DataCorrection to update.
     */
    where: DataCorrectionWhereUniqueInput
  }

  /**
   * DataCorrection updateMany
   */
  export type DataCorrectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DataCorrections.
     */
    data: XOR<DataCorrectionUpdateManyMutationInput, DataCorrectionUncheckedUpdateManyInput>
    /**
     * Filter which DataCorrections to update
     */
    where?: DataCorrectionWhereInput
    /**
     * Limit how many DataCorrections to update.
     */
    limit?: number
  }

  /**
   * DataCorrection updateManyAndReturn
   */
  export type DataCorrectionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * The data used to update DataCorrections.
     */
    data: XOR<DataCorrectionUpdateManyMutationInput, DataCorrectionUncheckedUpdateManyInput>
    /**
     * Filter which DataCorrections to update
     */
    where?: DataCorrectionWhereInput
    /**
     * Limit how many DataCorrections to update.
     */
    limit?: number
  }

  /**
   * DataCorrection upsert
   */
  export type DataCorrectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * The filter to search for the DataCorrection to update in case it exists.
     */
    where: DataCorrectionWhereUniqueInput
    /**
     * In case the DataCorrection found by the `where` argument doesn't exist, create a new DataCorrection with this data.
     */
    create: XOR<DataCorrectionCreateInput, DataCorrectionUncheckedCreateInput>
    /**
     * In case the DataCorrection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DataCorrectionUpdateInput, DataCorrectionUncheckedUpdateInput>
  }

  /**
   * DataCorrection delete
   */
  export type DataCorrectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
    /**
     * Filter which DataCorrection to delete.
     */
    where: DataCorrectionWhereUniqueInput
  }

  /**
   * DataCorrection deleteMany
   */
  export type DataCorrectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DataCorrections to delete
     */
    where?: DataCorrectionWhereInput
    /**
     * Limit how many DataCorrections to delete.
     */
    limit?: number
  }

  /**
   * DataCorrection without action
   */
  export type DataCorrectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DataCorrection
     */
    select?: DataCorrectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DataCorrection
     */
    omit?: DataCorrectionOmit<ExtArgs> | null
  }


  /**
   * Model Listing
   */

  export type AggregateListing = {
    _count: ListingCountAggregateOutputType | null
    _avg: ListingAvgAggregateOutputType | null
    _sum: ListingSumAggregateOutputType | null
    _min: ListingMinAggregateOutputType | null
    _max: ListingMaxAggregateOutputType | null
  }

  export type ListingAvgAggregateOutputType = {
    price: Decimal | null
    bedrooms: number | null
    bathrooms: Decimal | null
    squareFeet: number | null
    yearBuilt: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    tileX: number | null
    tileY: number | null
    tileZ: number | null
    denormalizedAssumableMonthlyPayment: Decimal | null
    modifierScore: number | null
    staticPriority: number | null
    tileId10: number | null
    tileId11: number | null
    tileId12: number | null
    tileId13: number | null
    tileId14: number | null
    tileId15: number | null
    tileId16: number | null
    tileId17: number | null
    tileId18: number | null
    tileId19: number | null
    tileId20: number | null
    tileId8: number | null
    tileId9: number | null
    tileId6: number | null
    tileId7: number | null
    denormalizedAssumableDownPayment: Decimal | null
    denormalizedAssumableInterestRate: Decimal | null
    monthlyHoa: Decimal | null
    assumableDesirabilityScore: Decimal | null
    lotSizeAcres: Decimal | null
    lotSizeSquareFeet: number | null
    stories: number | null
  }

  export type ListingSumAggregateOutputType = {
    price: Decimal | null
    bedrooms: number | null
    bathrooms: Decimal | null
    squareFeet: number | null
    yearBuilt: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    tileX: number | null
    tileY: number | null
    tileZ: number | null
    denormalizedAssumableMonthlyPayment: Decimal | null
    modifierScore: number | null
    staticPriority: number | null
    tileId10: bigint | null
    tileId11: bigint | null
    tileId12: bigint | null
    tileId13: bigint | null
    tileId14: bigint | null
    tileId15: bigint | null
    tileId16: bigint | null
    tileId17: bigint | null
    tileId18: bigint | null
    tileId19: bigint | null
    tileId20: bigint | null
    tileId8: bigint | null
    tileId9: bigint | null
    tileId6: bigint | null
    tileId7: bigint | null
    denormalizedAssumableDownPayment: Decimal | null
    denormalizedAssumableInterestRate: Decimal | null
    monthlyHoa: Decimal | null
    assumableDesirabilityScore: Decimal | null
    lotSizeAcres: Decimal | null
    lotSizeSquareFeet: number | null
    stories: number | null
  }

  export type ListingMinAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    parcelNumber: string | null
    zipCode: string | null
    rawDataHash: string | null
    mlsListingId: string | null
    lastMlsUpdate: Date | null
    isAssumable: boolean | null
    processingState: string | null
    deletedAt: Date | null
    status: $Enums.ListingStatus | null
    price: Decimal | null
    propertyType: $Enums.PropertyType | null
    bedrooms: number | null
    bathrooms: Decimal | null
    squareFeet: number | null
    yearBuilt: number | null
    address: string | null
    city: string | null
    state: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    tileX: number | null
    tileY: number | null
    tileZ: number | null
    createdAt: Date | null
    updatedAt: Date | null
    listedAt: Date | null
    lastStatusChange: Date | null
    unitNumber: string | null
    mlsInstanceId: string | null
    propertyRadarId: string | null
    denormalizedAssumableMonthlyPayment: Decimal | null
    rawDataId: string | null
    tilePrice: string | null
    tileDenormalizedAssumableMonthlyPayment: string | null
    isRootsListing: boolean | null
    modifierScore: number | null
    propertySubType: string | null
    staticPriority: number | null
    tileId10: bigint | null
    tileId11: bigint | null
    tileId12: bigint | null
    tileId13: bigint | null
    tileId14: bigint | null
    tileId15: bigint | null
    tileId16: bigint | null
    tileId17: bigint | null
    tileId18: bigint | null
    tileId19: bigint | null
    tileId20: bigint | null
    tileId8: bigint | null
    tileId9: bigint | null
    tileId6: bigint | null
    tileId7: bigint | null
    denormalizedAssumableDownPayment: Decimal | null
    denormalizedAssumableInterestRate: Decimal | null
    denormalizedAssumableLoanType: $Enums.LoanType | null
    hasPool: boolean | null
    is55Plus: boolean | null
    monthlyHoa: Decimal | null
    streetAddress: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean | null
    processingVersion: string | null
    lotSizeAcres: Decimal | null
    lotSizeSquareFeet: number | null
    agentEmail: string | null
    agentName: string | null
    agentOfficeEmail: string | null
    agentOfficeName: string | null
    agentOfficePhone: string | null
    agentPhone: string | null
    denormalizedMlsInstanceLogoUrl: string | null
    denormalizedMlsInstanceName: string | null
    agentMlsId: string | null
    denormalizedMlsInstanceAcronym: string | null
    agentOfficeMlsId: string | null
    hasBasement: boolean | null
    stories: number | null
  }

  export type ListingMaxAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    parcelNumber: string | null
    zipCode: string | null
    rawDataHash: string | null
    mlsListingId: string | null
    lastMlsUpdate: Date | null
    isAssumable: boolean | null
    processingState: string | null
    deletedAt: Date | null
    status: $Enums.ListingStatus | null
    price: Decimal | null
    propertyType: $Enums.PropertyType | null
    bedrooms: number | null
    bathrooms: Decimal | null
    squareFeet: number | null
    yearBuilt: number | null
    address: string | null
    city: string | null
    state: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    tileX: number | null
    tileY: number | null
    tileZ: number | null
    createdAt: Date | null
    updatedAt: Date | null
    listedAt: Date | null
    lastStatusChange: Date | null
    unitNumber: string | null
    mlsInstanceId: string | null
    propertyRadarId: string | null
    denormalizedAssumableMonthlyPayment: Decimal | null
    rawDataId: string | null
    tilePrice: string | null
    tileDenormalizedAssumableMonthlyPayment: string | null
    isRootsListing: boolean | null
    modifierScore: number | null
    propertySubType: string | null
    staticPriority: number | null
    tileId10: bigint | null
    tileId11: bigint | null
    tileId12: bigint | null
    tileId13: bigint | null
    tileId14: bigint | null
    tileId15: bigint | null
    tileId16: bigint | null
    tileId17: bigint | null
    tileId18: bigint | null
    tileId19: bigint | null
    tileId20: bigint | null
    tileId8: bigint | null
    tileId9: bigint | null
    tileId6: bigint | null
    tileId7: bigint | null
    denormalizedAssumableDownPayment: Decimal | null
    denormalizedAssumableInterestRate: Decimal | null
    denormalizedAssumableLoanType: $Enums.LoanType | null
    hasPool: boolean | null
    is55Plus: boolean | null
    monthlyHoa: Decimal | null
    streetAddress: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean | null
    processingVersion: string | null
    lotSizeAcres: Decimal | null
    lotSizeSquareFeet: number | null
    agentEmail: string | null
    agentName: string | null
    agentOfficeEmail: string | null
    agentOfficeName: string | null
    agentOfficePhone: string | null
    agentPhone: string | null
    denormalizedMlsInstanceLogoUrl: string | null
    denormalizedMlsInstanceName: string | null
    agentMlsId: string | null
    denormalizedMlsInstanceAcronym: string | null
    agentOfficeMlsId: string | null
    hasBasement: boolean | null
    stories: number | null
  }

  export type ListingCountAggregateOutputType = {
    id: number
    mlsProviderId: number
    parcelNumber: number
    zipCode: number
    rawDataHash: number
    mlsListingId: number
    lastMlsUpdate: number
    isAssumable: number
    processingState: number
    deletedAt: number
    status: number
    price: number
    propertyType: number
    bedrooms: number
    bathrooms: number
    squareFeet: number
    yearBuilt: number
    address: number
    city: number
    state: number
    latitude: number
    longitude: number
    tileX: number
    tileY: number
    tileZ: number
    amenities: number
    interiorFeatures: number
    exteriorFeatures: number
    parkingDetails: number
    associationDetails: number
    schoolDetails: number
    createdAt: number
    updatedAt: number
    listedAt: number
    lastStatusChange: number
    unitNumber: number
    mlsInstanceId: number
    photoUrls: number
    propertyRadarId: number
    denormalizedAssumableMonthlyPayment: number
    rawDataId: number
    tilePrice: number
    tileDenormalizedAssumableMonthlyPayment: number
    isRootsListing: number
    modifierScore: number
    propertySubType: number
    remarks: number
    documentUrls: number
    videoUrls: number
    staticPriority: number
    tileId10: number
    tileId11: number
    tileId12: number
    tileId13: number
    tileId14: number
    tileId15: number
    tileId16: number
    tileId17: number
    tileId18: number
    tileId19: number
    tileId20: number
    tileId8: number
    tileId9: number
    tileId6: number
    tileId7: number
    denormalizedAssumableDownPayment: number
    denormalizedAssumableInterestRate: number
    denormalizedAssumableLoanType: number
    hasPool: number
    is55Plus: number
    monthlyHoa: number
    streetAddress: number
    assumableDesirabilityScore: number
    isAssumableDesirable: number
    processingVersion: number
    lotSizeAcres: number
    lotSizeSquareFeet: number
    agentDetails: number
    agentEmail: number
    agentName: number
    agentOfficeEmail: number
    agentOfficeName: number
    agentOfficePhone: number
    agentPhone: number
    coListingAgents: number
    denormalizedMlsInstanceLogoUrl: number
    denormalizedMlsInstanceName: number
    agentMlsId: number
    denormalizedMlsInstanceAcronym: number
    agentOfficeMlsId: number
    hasBasement: number
    stories: number
    _all: number
  }


  export type ListingAvgAggregateInputType = {
    price?: true
    bedrooms?: true
    bathrooms?: true
    squareFeet?: true
    yearBuilt?: true
    latitude?: true
    longitude?: true
    tileX?: true
    tileY?: true
    tileZ?: true
    denormalizedAssumableMonthlyPayment?: true
    modifierScore?: true
    staticPriority?: true
    tileId10?: true
    tileId11?: true
    tileId12?: true
    tileId13?: true
    tileId14?: true
    tileId15?: true
    tileId16?: true
    tileId17?: true
    tileId18?: true
    tileId19?: true
    tileId20?: true
    tileId8?: true
    tileId9?: true
    tileId6?: true
    tileId7?: true
    denormalizedAssumableDownPayment?: true
    denormalizedAssumableInterestRate?: true
    monthlyHoa?: true
    assumableDesirabilityScore?: true
    lotSizeAcres?: true
    lotSizeSquareFeet?: true
    stories?: true
  }

  export type ListingSumAggregateInputType = {
    price?: true
    bedrooms?: true
    bathrooms?: true
    squareFeet?: true
    yearBuilt?: true
    latitude?: true
    longitude?: true
    tileX?: true
    tileY?: true
    tileZ?: true
    denormalizedAssumableMonthlyPayment?: true
    modifierScore?: true
    staticPriority?: true
    tileId10?: true
    tileId11?: true
    tileId12?: true
    tileId13?: true
    tileId14?: true
    tileId15?: true
    tileId16?: true
    tileId17?: true
    tileId18?: true
    tileId19?: true
    tileId20?: true
    tileId8?: true
    tileId9?: true
    tileId6?: true
    tileId7?: true
    denormalizedAssumableDownPayment?: true
    denormalizedAssumableInterestRate?: true
    monthlyHoa?: true
    assumableDesirabilityScore?: true
    lotSizeAcres?: true
    lotSizeSquareFeet?: true
    stories?: true
  }

  export type ListingMinAggregateInputType = {
    id?: true
    mlsProviderId?: true
    parcelNumber?: true
    zipCode?: true
    rawDataHash?: true
    mlsListingId?: true
    lastMlsUpdate?: true
    isAssumable?: true
    processingState?: true
    deletedAt?: true
    status?: true
    price?: true
    propertyType?: true
    bedrooms?: true
    bathrooms?: true
    squareFeet?: true
    yearBuilt?: true
    address?: true
    city?: true
    state?: true
    latitude?: true
    longitude?: true
    tileX?: true
    tileY?: true
    tileZ?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    lastStatusChange?: true
    unitNumber?: true
    mlsInstanceId?: true
    propertyRadarId?: true
    denormalizedAssumableMonthlyPayment?: true
    rawDataId?: true
    tilePrice?: true
    tileDenormalizedAssumableMonthlyPayment?: true
    isRootsListing?: true
    modifierScore?: true
    propertySubType?: true
    staticPriority?: true
    tileId10?: true
    tileId11?: true
    tileId12?: true
    tileId13?: true
    tileId14?: true
    tileId15?: true
    tileId16?: true
    tileId17?: true
    tileId18?: true
    tileId19?: true
    tileId20?: true
    tileId8?: true
    tileId9?: true
    tileId6?: true
    tileId7?: true
    denormalizedAssumableDownPayment?: true
    denormalizedAssumableInterestRate?: true
    denormalizedAssumableLoanType?: true
    hasPool?: true
    is55Plus?: true
    monthlyHoa?: true
    streetAddress?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    processingVersion?: true
    lotSizeAcres?: true
    lotSizeSquareFeet?: true
    agentEmail?: true
    agentName?: true
    agentOfficeEmail?: true
    agentOfficeName?: true
    agentOfficePhone?: true
    agentPhone?: true
    denormalizedMlsInstanceLogoUrl?: true
    denormalizedMlsInstanceName?: true
    agentMlsId?: true
    denormalizedMlsInstanceAcronym?: true
    agentOfficeMlsId?: true
    hasBasement?: true
    stories?: true
  }

  export type ListingMaxAggregateInputType = {
    id?: true
    mlsProviderId?: true
    parcelNumber?: true
    zipCode?: true
    rawDataHash?: true
    mlsListingId?: true
    lastMlsUpdate?: true
    isAssumable?: true
    processingState?: true
    deletedAt?: true
    status?: true
    price?: true
    propertyType?: true
    bedrooms?: true
    bathrooms?: true
    squareFeet?: true
    yearBuilt?: true
    address?: true
    city?: true
    state?: true
    latitude?: true
    longitude?: true
    tileX?: true
    tileY?: true
    tileZ?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    lastStatusChange?: true
    unitNumber?: true
    mlsInstanceId?: true
    propertyRadarId?: true
    denormalizedAssumableMonthlyPayment?: true
    rawDataId?: true
    tilePrice?: true
    tileDenormalizedAssumableMonthlyPayment?: true
    isRootsListing?: true
    modifierScore?: true
    propertySubType?: true
    staticPriority?: true
    tileId10?: true
    tileId11?: true
    tileId12?: true
    tileId13?: true
    tileId14?: true
    tileId15?: true
    tileId16?: true
    tileId17?: true
    tileId18?: true
    tileId19?: true
    tileId20?: true
    tileId8?: true
    tileId9?: true
    tileId6?: true
    tileId7?: true
    denormalizedAssumableDownPayment?: true
    denormalizedAssumableInterestRate?: true
    denormalizedAssumableLoanType?: true
    hasPool?: true
    is55Plus?: true
    monthlyHoa?: true
    streetAddress?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    processingVersion?: true
    lotSizeAcres?: true
    lotSizeSquareFeet?: true
    agentEmail?: true
    agentName?: true
    agentOfficeEmail?: true
    agentOfficeName?: true
    agentOfficePhone?: true
    agentPhone?: true
    denormalizedMlsInstanceLogoUrl?: true
    denormalizedMlsInstanceName?: true
    agentMlsId?: true
    denormalizedMlsInstanceAcronym?: true
    agentOfficeMlsId?: true
    hasBasement?: true
    stories?: true
  }

  export type ListingCountAggregateInputType = {
    id?: true
    mlsProviderId?: true
    parcelNumber?: true
    zipCode?: true
    rawDataHash?: true
    mlsListingId?: true
    lastMlsUpdate?: true
    isAssumable?: true
    processingState?: true
    deletedAt?: true
    status?: true
    price?: true
    propertyType?: true
    bedrooms?: true
    bathrooms?: true
    squareFeet?: true
    yearBuilt?: true
    address?: true
    city?: true
    state?: true
    latitude?: true
    longitude?: true
    tileX?: true
    tileY?: true
    tileZ?: true
    amenities?: true
    interiorFeatures?: true
    exteriorFeatures?: true
    parkingDetails?: true
    associationDetails?: true
    schoolDetails?: true
    createdAt?: true
    updatedAt?: true
    listedAt?: true
    lastStatusChange?: true
    unitNumber?: true
    mlsInstanceId?: true
    photoUrls?: true
    propertyRadarId?: true
    denormalizedAssumableMonthlyPayment?: true
    rawDataId?: true
    tilePrice?: true
    tileDenormalizedAssumableMonthlyPayment?: true
    isRootsListing?: true
    modifierScore?: true
    propertySubType?: true
    remarks?: true
    documentUrls?: true
    videoUrls?: true
    staticPriority?: true
    tileId10?: true
    tileId11?: true
    tileId12?: true
    tileId13?: true
    tileId14?: true
    tileId15?: true
    tileId16?: true
    tileId17?: true
    tileId18?: true
    tileId19?: true
    tileId20?: true
    tileId8?: true
    tileId9?: true
    tileId6?: true
    tileId7?: true
    denormalizedAssumableDownPayment?: true
    denormalizedAssumableInterestRate?: true
    denormalizedAssumableLoanType?: true
    hasPool?: true
    is55Plus?: true
    monthlyHoa?: true
    streetAddress?: true
    assumableDesirabilityScore?: true
    isAssumableDesirable?: true
    processingVersion?: true
    lotSizeAcres?: true
    lotSizeSquareFeet?: true
    agentDetails?: true
    agentEmail?: true
    agentName?: true
    agentOfficeEmail?: true
    agentOfficeName?: true
    agentOfficePhone?: true
    agentPhone?: true
    coListingAgents?: true
    denormalizedMlsInstanceLogoUrl?: true
    denormalizedMlsInstanceName?: true
    agentMlsId?: true
    denormalizedMlsInstanceAcronym?: true
    agentOfficeMlsId?: true
    hasBasement?: true
    stories?: true
    _all?: true
  }

  export type ListingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Listing to aggregate.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Listings
    **/
    _count?: true | ListingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingMaxAggregateInputType
  }

  export type GetListingAggregateType<T extends ListingAggregateArgs> = {
        [P in keyof T & keyof AggregateListing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListing[P]>
      : GetScalarType<T[P], AggregateListing[P]>
  }




  export type ListingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingWhereInput
    orderBy?: ListingOrderByWithAggregationInput | ListingOrderByWithAggregationInput[]
    by: ListingScalarFieldEnum[] | ListingScalarFieldEnum
    having?: ListingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingCountAggregateInputType | true
    _avg?: ListingAvgAggregateInputType
    _sum?: ListingSumAggregateInputType
    _min?: ListingMinAggregateInputType
    _max?: ListingMaxAggregateInputType
  }

  export type ListingGroupByOutputType = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate: Date | null
    isAssumable: boolean
    processingState: string | null
    deletedAt: Date | null
    status: $Enums.ListingStatus
    price: Decimal
    propertyType: $Enums.PropertyType
    bedrooms: number | null
    bathrooms: Decimal | null
    squareFeet: number | null
    yearBuilt: number | null
    address: string
    city: string | null
    state: string | null
    latitude: Decimal
    longitude: Decimal
    tileX: number | null
    tileY: number | null
    tileZ: number | null
    amenities: JsonValue | null
    interiorFeatures: JsonValue | null
    exteriorFeatures: JsonValue | null
    parkingDetails: JsonValue | null
    associationDetails: JsonValue | null
    schoolDetails: JsonValue | null
    createdAt: Date
    updatedAt: Date
    listedAt: Date | null
    lastStatusChange: Date | null
    unitNumber: string
    mlsInstanceId: string
    photoUrls: string[]
    propertyRadarId: string | null
    denormalizedAssumableMonthlyPayment: Decimal | null
    rawDataId: string | null
    tilePrice: string | null
    tileDenormalizedAssumableMonthlyPayment: string | null
    isRootsListing: boolean
    modifierScore: number
    propertySubType: string | null
    remarks: JsonValue | null
    documentUrls: string[]
    videoUrls: string[]
    staticPriority: number | null
    tileId10: bigint | null
    tileId11: bigint | null
    tileId12: bigint | null
    tileId13: bigint | null
    tileId14: bigint | null
    tileId15: bigint | null
    tileId16: bigint | null
    tileId17: bigint | null
    tileId18: bigint | null
    tileId19: bigint | null
    tileId20: bigint | null
    tileId8: bigint | null
    tileId9: bigint | null
    tileId6: bigint | null
    tileId7: bigint | null
    denormalizedAssumableDownPayment: Decimal | null
    denormalizedAssumableInterestRate: Decimal | null
    denormalizedAssumableLoanType: $Enums.LoanType | null
    hasPool: boolean | null
    is55Plus: boolean | null
    monthlyHoa: Decimal | null
    streetAddress: string | null
    assumableDesirabilityScore: Decimal | null
    isAssumableDesirable: boolean
    processingVersion: string | null
    lotSizeAcres: Decimal | null
    lotSizeSquareFeet: number | null
    agentDetails: JsonValue | null
    agentEmail: string | null
    agentName: string | null
    agentOfficeEmail: string | null
    agentOfficeName: string | null
    agentOfficePhone: string | null
    agentPhone: string | null
    coListingAgents: JsonValue | null
    denormalizedMlsInstanceLogoUrl: string | null
    denormalizedMlsInstanceName: string | null
    agentMlsId: string | null
    denormalizedMlsInstanceAcronym: string | null
    agentOfficeMlsId: string | null
    hasBasement: boolean | null
    stories: number | null
    _count: ListingCountAggregateOutputType | null
    _avg: ListingAvgAggregateOutputType | null
    _sum: ListingSumAggregateOutputType | null
    _min: ListingMinAggregateOutputType | null
    _max: ListingMaxAggregateOutputType | null
  }

  type GetListingGroupByPayload<T extends ListingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingGroupByOutputType[P]>
            : GetScalarType<T[P], ListingGroupByOutputType[P]>
        }
      >
    >


  export type ListingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    rawDataHash?: boolean
    mlsListingId?: boolean
    lastMlsUpdate?: boolean
    isAssumable?: boolean
    processingState?: boolean
    deletedAt?: boolean
    status?: boolean
    price?: boolean
    propertyType?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    squareFeet?: boolean
    yearBuilt?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    latitude?: boolean
    longitude?: boolean
    tileX?: boolean
    tileY?: boolean
    tileZ?: boolean
    amenities?: boolean
    interiorFeatures?: boolean
    exteriorFeatures?: boolean
    parkingDetails?: boolean
    associationDetails?: boolean
    schoolDetails?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    lastStatusChange?: boolean
    unitNumber?: boolean
    mlsInstanceId?: boolean
    photoUrls?: boolean
    propertyRadarId?: boolean
    denormalizedAssumableMonthlyPayment?: boolean
    rawDataId?: boolean
    tilePrice?: boolean
    tileDenormalizedAssumableMonthlyPayment?: boolean
    isRootsListing?: boolean
    modifierScore?: boolean
    propertySubType?: boolean
    remarks?: boolean
    documentUrls?: boolean
    videoUrls?: boolean
    staticPriority?: boolean
    tileId10?: boolean
    tileId11?: boolean
    tileId12?: boolean
    tileId13?: boolean
    tileId14?: boolean
    tileId15?: boolean
    tileId16?: boolean
    tileId17?: boolean
    tileId18?: boolean
    tileId19?: boolean
    tileId20?: boolean
    tileId8?: boolean
    tileId9?: boolean
    tileId6?: boolean
    tileId7?: boolean
    denormalizedAssumableDownPayment?: boolean
    denormalizedAssumableInterestRate?: boolean
    denormalizedAssumableLoanType?: boolean
    hasPool?: boolean
    is55Plus?: boolean
    monthlyHoa?: boolean
    streetAddress?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    processingVersion?: boolean
    lotSizeAcres?: boolean
    lotSizeSquareFeet?: boolean
    agentDetails?: boolean
    agentEmail?: boolean
    agentName?: boolean
    agentOfficeEmail?: boolean
    agentOfficeName?: boolean
    agentOfficePhone?: boolean
    agentPhone?: boolean
    coListingAgents?: boolean
    denormalizedMlsInstanceLogoUrl?: boolean
    denormalizedMlsInstanceName?: boolean
    agentMlsId?: boolean
    denormalizedMlsInstanceAcronym?: boolean
    agentOfficeMlsId?: boolean
    hasBasement?: boolean
    stories?: boolean
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
    ListingAudit?: boolean | Listing$ListingAuditArgs<ExtArgs>
    ListingHistory?: boolean | Listing$ListingHistoryArgs<ExtArgs>
    ListingLocation?: boolean | Listing$ListingLocationArgs<ExtArgs>
    ListingPhoto?: boolean | Listing$ListingPhotoArgs<ExtArgs>
    ListingReport?: boolean | Listing$ListingReportArgs<ExtArgs>
    _count?: boolean | ListingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    rawDataHash?: boolean
    mlsListingId?: boolean
    lastMlsUpdate?: boolean
    isAssumable?: boolean
    processingState?: boolean
    deletedAt?: boolean
    status?: boolean
    price?: boolean
    propertyType?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    squareFeet?: boolean
    yearBuilt?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    latitude?: boolean
    longitude?: boolean
    tileX?: boolean
    tileY?: boolean
    tileZ?: boolean
    amenities?: boolean
    interiorFeatures?: boolean
    exteriorFeatures?: boolean
    parkingDetails?: boolean
    associationDetails?: boolean
    schoolDetails?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    lastStatusChange?: boolean
    unitNumber?: boolean
    mlsInstanceId?: boolean
    photoUrls?: boolean
    propertyRadarId?: boolean
    denormalizedAssumableMonthlyPayment?: boolean
    rawDataId?: boolean
    tilePrice?: boolean
    tileDenormalizedAssumableMonthlyPayment?: boolean
    isRootsListing?: boolean
    modifierScore?: boolean
    propertySubType?: boolean
    remarks?: boolean
    documentUrls?: boolean
    videoUrls?: boolean
    staticPriority?: boolean
    tileId10?: boolean
    tileId11?: boolean
    tileId12?: boolean
    tileId13?: boolean
    tileId14?: boolean
    tileId15?: boolean
    tileId16?: boolean
    tileId17?: boolean
    tileId18?: boolean
    tileId19?: boolean
    tileId20?: boolean
    tileId8?: boolean
    tileId9?: boolean
    tileId6?: boolean
    tileId7?: boolean
    denormalizedAssumableDownPayment?: boolean
    denormalizedAssumableInterestRate?: boolean
    denormalizedAssumableLoanType?: boolean
    hasPool?: boolean
    is55Plus?: boolean
    monthlyHoa?: boolean
    streetAddress?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    processingVersion?: boolean
    lotSizeAcres?: boolean
    lotSizeSquareFeet?: boolean
    agentDetails?: boolean
    agentEmail?: boolean
    agentName?: boolean
    agentOfficeEmail?: boolean
    agentOfficeName?: boolean
    agentOfficePhone?: boolean
    agentPhone?: boolean
    coListingAgents?: boolean
    denormalizedMlsInstanceLogoUrl?: boolean
    denormalizedMlsInstanceName?: boolean
    agentMlsId?: boolean
    denormalizedMlsInstanceAcronym?: boolean
    agentOfficeMlsId?: boolean
    hasBasement?: boolean
    stories?: boolean
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    rawDataHash?: boolean
    mlsListingId?: boolean
    lastMlsUpdate?: boolean
    isAssumable?: boolean
    processingState?: boolean
    deletedAt?: boolean
    status?: boolean
    price?: boolean
    propertyType?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    squareFeet?: boolean
    yearBuilt?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    latitude?: boolean
    longitude?: boolean
    tileX?: boolean
    tileY?: boolean
    tileZ?: boolean
    amenities?: boolean
    interiorFeatures?: boolean
    exteriorFeatures?: boolean
    parkingDetails?: boolean
    associationDetails?: boolean
    schoolDetails?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    lastStatusChange?: boolean
    unitNumber?: boolean
    mlsInstanceId?: boolean
    photoUrls?: boolean
    propertyRadarId?: boolean
    denormalizedAssumableMonthlyPayment?: boolean
    rawDataId?: boolean
    tilePrice?: boolean
    tileDenormalizedAssumableMonthlyPayment?: boolean
    isRootsListing?: boolean
    modifierScore?: boolean
    propertySubType?: boolean
    remarks?: boolean
    documentUrls?: boolean
    videoUrls?: boolean
    staticPriority?: boolean
    tileId10?: boolean
    tileId11?: boolean
    tileId12?: boolean
    tileId13?: boolean
    tileId14?: boolean
    tileId15?: boolean
    tileId16?: boolean
    tileId17?: boolean
    tileId18?: boolean
    tileId19?: boolean
    tileId20?: boolean
    tileId8?: boolean
    tileId9?: boolean
    tileId6?: boolean
    tileId7?: boolean
    denormalizedAssumableDownPayment?: boolean
    denormalizedAssumableInterestRate?: boolean
    denormalizedAssumableLoanType?: boolean
    hasPool?: boolean
    is55Plus?: boolean
    monthlyHoa?: boolean
    streetAddress?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    processingVersion?: boolean
    lotSizeAcres?: boolean
    lotSizeSquareFeet?: boolean
    agentDetails?: boolean
    agentEmail?: boolean
    agentName?: boolean
    agentOfficeEmail?: boolean
    agentOfficeName?: boolean
    agentOfficePhone?: boolean
    agentPhone?: boolean
    coListingAgents?: boolean
    denormalizedMlsInstanceLogoUrl?: boolean
    denormalizedMlsInstanceName?: boolean
    agentMlsId?: boolean
    denormalizedMlsInstanceAcronym?: boolean
    agentOfficeMlsId?: boolean
    hasBasement?: boolean
    stories?: boolean
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
  }, ExtArgs["result"]["listing"]>

  export type ListingSelectScalar = {
    id?: boolean
    mlsProviderId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    rawDataHash?: boolean
    mlsListingId?: boolean
    lastMlsUpdate?: boolean
    isAssumable?: boolean
    processingState?: boolean
    deletedAt?: boolean
    status?: boolean
    price?: boolean
    propertyType?: boolean
    bedrooms?: boolean
    bathrooms?: boolean
    squareFeet?: boolean
    yearBuilt?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    latitude?: boolean
    longitude?: boolean
    tileX?: boolean
    tileY?: boolean
    tileZ?: boolean
    amenities?: boolean
    interiorFeatures?: boolean
    exteriorFeatures?: boolean
    parkingDetails?: boolean
    associationDetails?: boolean
    schoolDetails?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    listedAt?: boolean
    lastStatusChange?: boolean
    unitNumber?: boolean
    mlsInstanceId?: boolean
    photoUrls?: boolean
    propertyRadarId?: boolean
    denormalizedAssumableMonthlyPayment?: boolean
    rawDataId?: boolean
    tilePrice?: boolean
    tileDenormalizedAssumableMonthlyPayment?: boolean
    isRootsListing?: boolean
    modifierScore?: boolean
    propertySubType?: boolean
    remarks?: boolean
    documentUrls?: boolean
    videoUrls?: boolean
    staticPriority?: boolean
    tileId10?: boolean
    tileId11?: boolean
    tileId12?: boolean
    tileId13?: boolean
    tileId14?: boolean
    tileId15?: boolean
    tileId16?: boolean
    tileId17?: boolean
    tileId18?: boolean
    tileId19?: boolean
    tileId20?: boolean
    tileId8?: boolean
    tileId9?: boolean
    tileId6?: boolean
    tileId7?: boolean
    denormalizedAssumableDownPayment?: boolean
    denormalizedAssumableInterestRate?: boolean
    denormalizedAssumableLoanType?: boolean
    hasPool?: boolean
    is55Plus?: boolean
    monthlyHoa?: boolean
    streetAddress?: boolean
    assumableDesirabilityScore?: boolean
    isAssumableDesirable?: boolean
    processingVersion?: boolean
    lotSizeAcres?: boolean
    lotSizeSquareFeet?: boolean
    agentDetails?: boolean
    agentEmail?: boolean
    agentName?: boolean
    agentOfficeEmail?: boolean
    agentOfficeName?: boolean
    agentOfficePhone?: boolean
    agentPhone?: boolean
    coListingAgents?: boolean
    denormalizedMlsInstanceLogoUrl?: boolean
    denormalizedMlsInstanceName?: boolean
    agentMlsId?: boolean
    denormalizedMlsInstanceAcronym?: boolean
    agentOfficeMlsId?: boolean
    hasBasement?: boolean
    stories?: boolean
  }

  export type ListingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mlsProviderId" | "parcelNumber" | "zipCode" | "rawDataHash" | "mlsListingId" | "lastMlsUpdate" | "isAssumable" | "processingState" | "deletedAt" | "status" | "price" | "propertyType" | "bedrooms" | "bathrooms" | "squareFeet" | "yearBuilt" | "address" | "city" | "state" | "latitude" | "longitude" | "tileX" | "tileY" | "tileZ" | "amenities" | "interiorFeatures" | "exteriorFeatures" | "parkingDetails" | "associationDetails" | "schoolDetails" | "createdAt" | "updatedAt" | "listedAt" | "lastStatusChange" | "unitNumber" | "mlsInstanceId" | "photoUrls" | "propertyRadarId" | "denormalizedAssumableMonthlyPayment" | "rawDataId" | "tilePrice" | "tileDenormalizedAssumableMonthlyPayment" | "isRootsListing" | "modifierScore" | "propertySubType" | "remarks" | "documentUrls" | "videoUrls" | "staticPriority" | "tileId10" | "tileId11" | "tileId12" | "tileId13" | "tileId14" | "tileId15" | "tileId16" | "tileId17" | "tileId18" | "tileId19" | "tileId20" | "tileId8" | "tileId9" | "tileId6" | "tileId7" | "denormalizedAssumableDownPayment" | "denormalizedAssumableInterestRate" | "denormalizedAssumableLoanType" | "hasPool" | "is55Plus" | "monthlyHoa" | "streetAddress" | "assumableDesirabilityScore" | "isAssumableDesirable" | "processingVersion" | "lotSizeAcres" | "lotSizeSquareFeet" | "agentDetails" | "agentEmail" | "agentName" | "agentOfficeEmail" | "agentOfficeName" | "agentOfficePhone" | "agentPhone" | "coListingAgents" | "denormalizedMlsInstanceLogoUrl" | "denormalizedMlsInstanceName" | "agentMlsId" | "denormalizedMlsInstanceAcronym" | "agentOfficeMlsId" | "hasBasement" | "stories", ExtArgs["result"]["listing"]>
  export type ListingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
    ListingAudit?: boolean | Listing$ListingAuditArgs<ExtArgs>
    ListingHistory?: boolean | Listing$ListingHistoryArgs<ExtArgs>
    ListingLocation?: boolean | Listing$ListingLocationArgs<ExtArgs>
    ListingPhoto?: boolean | Listing$ListingPhotoArgs<ExtArgs>
    ListingReport?: boolean | Listing$ListingReportArgs<ExtArgs>
    _count?: boolean | ListingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
  }
  export type ListingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PropertyRadar?: boolean | Listing$PropertyRadarArgs<ExtArgs>
  }

  export type $ListingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Listing"
    objects: {
      PropertyRadar: Prisma.$PropertyRadarPayload<ExtArgs> | null
      ListingAudit: Prisma.$ListingAuditPayload<ExtArgs>[]
      ListingHistory: Prisma.$ListingHistoryPayload<ExtArgs>[]
      ListingLocation: Prisma.$ListingLocationPayload<ExtArgs> | null
      ListingPhoto: Prisma.$ListingPhotoPayload<ExtArgs>[]
      ListingReport: Prisma.$ListingReportPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mlsProviderId: string
      parcelNumber: string
      zipCode: string
      rawDataHash: string
      mlsListingId: string
      lastMlsUpdate: Date | null
      isAssumable: boolean
      processingState: string | null
      deletedAt: Date | null
      status: $Enums.ListingStatus
      price: Prisma.Decimal
      propertyType: $Enums.PropertyType
      bedrooms: number | null
      bathrooms: Prisma.Decimal | null
      squareFeet: number | null
      yearBuilt: number | null
      address: string
      city: string | null
      state: string | null
      latitude: Prisma.Decimal
      longitude: Prisma.Decimal
      tileX: number | null
      tileY: number | null
      tileZ: number | null
      amenities: Prisma.JsonValue | null
      interiorFeatures: Prisma.JsonValue | null
      exteriorFeatures: Prisma.JsonValue | null
      parkingDetails: Prisma.JsonValue | null
      associationDetails: Prisma.JsonValue | null
      schoolDetails: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      listedAt: Date | null
      lastStatusChange: Date | null
      unitNumber: string
      mlsInstanceId: string
      photoUrls: string[]
      propertyRadarId: string | null
      denormalizedAssumableMonthlyPayment: Prisma.Decimal | null
      rawDataId: string | null
      tilePrice: string | null
      tileDenormalizedAssumableMonthlyPayment: string | null
      isRootsListing: boolean
      modifierScore: number
      propertySubType: string | null
      remarks: Prisma.JsonValue | null
      documentUrls: string[]
      videoUrls: string[]
      staticPriority: number | null
      tileId10: bigint | null
      tileId11: bigint | null
      tileId12: bigint | null
      tileId13: bigint | null
      tileId14: bigint | null
      tileId15: bigint | null
      tileId16: bigint | null
      tileId17: bigint | null
      tileId18: bigint | null
      tileId19: bigint | null
      tileId20: bigint | null
      tileId8: bigint | null
      tileId9: bigint | null
      tileId6: bigint | null
      tileId7: bigint | null
      denormalizedAssumableDownPayment: Prisma.Decimal | null
      denormalizedAssumableInterestRate: Prisma.Decimal | null
      denormalizedAssumableLoanType: $Enums.LoanType | null
      hasPool: boolean | null
      is55Plus: boolean | null
      monthlyHoa: Prisma.Decimal | null
      streetAddress: string | null
      assumableDesirabilityScore: Prisma.Decimal | null
      isAssumableDesirable: boolean
      processingVersion: string | null
      lotSizeAcres: Prisma.Decimal | null
      lotSizeSquareFeet: number | null
      agentDetails: Prisma.JsonValue | null
      agentEmail: string | null
      agentName: string | null
      agentOfficeEmail: string | null
      agentOfficeName: string | null
      agentOfficePhone: string | null
      agentPhone: string | null
      coListingAgents: Prisma.JsonValue | null
      denormalizedMlsInstanceLogoUrl: string | null
      denormalizedMlsInstanceName: string | null
      agentMlsId: string | null
      denormalizedMlsInstanceAcronym: string | null
      agentOfficeMlsId: string | null
      hasBasement: boolean | null
      stories: number | null
    }, ExtArgs["result"]["listing"]>
    composites: {}
  }

  type ListingGetPayload<S extends boolean | null | undefined | ListingDefaultArgs> = $Result.GetResult<Prisma.$ListingPayload, S>

  type ListingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingCountAggregateInputType | true
    }

  export interface ListingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Listing'], meta: { name: 'Listing' } }
    /**
     * Find zero or one Listing that matches the filter.
     * @param {ListingFindUniqueArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingFindUniqueArgs>(args: SelectSubset<T, ListingFindUniqueArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Listing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingFindUniqueOrThrowArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindFirstArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingFindFirstArgs>(args?: SelectSubset<T, ListingFindFirstArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Listing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindFirstOrThrowArgs} args - Arguments to find a Listing
     * @example
     * // Get one Listing
     * const listing = await prisma.listing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Listings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Listings
     * const listings = await prisma.listing.findMany()
     * 
     * // Get first 10 Listings
     * const listings = await prisma.listing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingWithIdOnly = await prisma.listing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingFindManyArgs>(args?: SelectSubset<T, ListingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Listing.
     * @param {ListingCreateArgs} args - Arguments to create a Listing.
     * @example
     * // Create one Listing
     * const Listing = await prisma.listing.create({
     *   data: {
     *     // ... data to create a Listing
     *   }
     * })
     * 
     */
    create<T extends ListingCreateArgs>(args: SelectSubset<T, ListingCreateArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Listings.
     * @param {ListingCreateManyArgs} args - Arguments to create many Listings.
     * @example
     * // Create many Listings
     * const listing = await prisma.listing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingCreateManyArgs>(args?: SelectSubset<T, ListingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Listings and returns the data saved in the database.
     * @param {ListingCreateManyAndReturnArgs} args - Arguments to create many Listings.
     * @example
     * // Create many Listings
     * const listing = await prisma.listing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Listings and only return the `id`
     * const listingWithIdOnly = await prisma.listing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Listing.
     * @param {ListingDeleteArgs} args - Arguments to delete one Listing.
     * @example
     * // Delete one Listing
     * const Listing = await prisma.listing.delete({
     *   where: {
     *     // ... filter to delete one Listing
     *   }
     * })
     * 
     */
    delete<T extends ListingDeleteArgs>(args: SelectSubset<T, ListingDeleteArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Listing.
     * @param {ListingUpdateArgs} args - Arguments to update one Listing.
     * @example
     * // Update one Listing
     * const listing = await prisma.listing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingUpdateArgs>(args: SelectSubset<T, ListingUpdateArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Listings.
     * @param {ListingDeleteManyArgs} args - Arguments to filter Listings to delete.
     * @example
     * // Delete a few Listings
     * const { count } = await prisma.listing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingDeleteManyArgs>(args?: SelectSubset<T, ListingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Listings
     * const listing = await prisma.listing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingUpdateManyArgs>(args: SelectSubset<T, ListingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Listings and returns the data updated in the database.
     * @param {ListingUpdateManyAndReturnArgs} args - Arguments to update many Listings.
     * @example
     * // Update many Listings
     * const listing = await prisma.listing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Listings and only return the `id`
     * const listingWithIdOnly = await prisma.listing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Listing.
     * @param {ListingUpsertArgs} args - Arguments to update or create a Listing.
     * @example
     * // Update or create a Listing
     * const listing = await prisma.listing.upsert({
     *   create: {
     *     // ... data to create a Listing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Listing we want to update
     *   }
     * })
     */
    upsert<T extends ListingUpsertArgs>(args: SelectSubset<T, ListingUpsertArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Listings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingCountArgs} args - Arguments to filter Listings to count.
     * @example
     * // Count the number of Listings
     * const count = await prisma.listing.count({
     *   where: {
     *     // ... the filter for the Listings we want to count
     *   }
     * })
    **/
    count<T extends ListingCountArgs>(
      args?: Subset<T, ListingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Listing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingAggregateArgs>(args: Subset<T, ListingAggregateArgs>): Prisma.PrismaPromise<GetListingAggregateType<T>>

    /**
     * Group by Listing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingGroupByArgs['orderBy'] }
        : { orderBy?: ListingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Listing model
   */
  readonly fields: ListingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Listing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    PropertyRadar<T extends Listing$PropertyRadarArgs<ExtArgs> = {}>(args?: Subset<T, Listing$PropertyRadarArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ListingAudit<T extends Listing$ListingAuditArgs<ExtArgs> = {}>(args?: Subset<T, Listing$ListingAuditArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ListingHistory<T extends Listing$ListingHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Listing$ListingHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ListingLocation<T extends Listing$ListingLocationArgs<ExtArgs> = {}>(args?: Subset<T, Listing$ListingLocationArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ListingPhoto<T extends Listing$ListingPhotoArgs<ExtArgs> = {}>(args?: Subset<T, Listing$ListingPhotoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ListingReport<T extends Listing$ListingReportArgs<ExtArgs> = {}>(args?: Subset<T, Listing$ListingReportArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Listing model
   */
  interface ListingFieldRefs {
    readonly id: FieldRef<"Listing", 'String'>
    readonly mlsProviderId: FieldRef<"Listing", 'String'>
    readonly parcelNumber: FieldRef<"Listing", 'String'>
    readonly zipCode: FieldRef<"Listing", 'String'>
    readonly rawDataHash: FieldRef<"Listing", 'String'>
    readonly mlsListingId: FieldRef<"Listing", 'String'>
    readonly lastMlsUpdate: FieldRef<"Listing", 'DateTime'>
    readonly isAssumable: FieldRef<"Listing", 'Boolean'>
    readonly processingState: FieldRef<"Listing", 'String'>
    readonly deletedAt: FieldRef<"Listing", 'DateTime'>
    readonly status: FieldRef<"Listing", 'ListingStatus'>
    readonly price: FieldRef<"Listing", 'Decimal'>
    readonly propertyType: FieldRef<"Listing", 'PropertyType'>
    readonly bedrooms: FieldRef<"Listing", 'Int'>
    readonly bathrooms: FieldRef<"Listing", 'Decimal'>
    readonly squareFeet: FieldRef<"Listing", 'Int'>
    readonly yearBuilt: FieldRef<"Listing", 'Int'>
    readonly address: FieldRef<"Listing", 'String'>
    readonly city: FieldRef<"Listing", 'String'>
    readonly state: FieldRef<"Listing", 'String'>
    readonly latitude: FieldRef<"Listing", 'Decimal'>
    readonly longitude: FieldRef<"Listing", 'Decimal'>
    readonly tileX: FieldRef<"Listing", 'Int'>
    readonly tileY: FieldRef<"Listing", 'Int'>
    readonly tileZ: FieldRef<"Listing", 'Int'>
    readonly amenities: FieldRef<"Listing", 'Json'>
    readonly interiorFeatures: FieldRef<"Listing", 'Json'>
    readonly exteriorFeatures: FieldRef<"Listing", 'Json'>
    readonly parkingDetails: FieldRef<"Listing", 'Json'>
    readonly associationDetails: FieldRef<"Listing", 'Json'>
    readonly schoolDetails: FieldRef<"Listing", 'Json'>
    readonly createdAt: FieldRef<"Listing", 'DateTime'>
    readonly updatedAt: FieldRef<"Listing", 'DateTime'>
    readonly listedAt: FieldRef<"Listing", 'DateTime'>
    readonly lastStatusChange: FieldRef<"Listing", 'DateTime'>
    readonly unitNumber: FieldRef<"Listing", 'String'>
    readonly mlsInstanceId: FieldRef<"Listing", 'String'>
    readonly photoUrls: FieldRef<"Listing", 'String[]'>
    readonly propertyRadarId: FieldRef<"Listing", 'String'>
    readonly denormalizedAssumableMonthlyPayment: FieldRef<"Listing", 'Decimal'>
    readonly rawDataId: FieldRef<"Listing", 'String'>
    readonly tilePrice: FieldRef<"Listing", 'String'>
    readonly tileDenormalizedAssumableMonthlyPayment: FieldRef<"Listing", 'String'>
    readonly isRootsListing: FieldRef<"Listing", 'Boolean'>
    readonly modifierScore: FieldRef<"Listing", 'Int'>
    readonly propertySubType: FieldRef<"Listing", 'String'>
    readonly remarks: FieldRef<"Listing", 'Json'>
    readonly documentUrls: FieldRef<"Listing", 'String[]'>
    readonly videoUrls: FieldRef<"Listing", 'String[]'>
    readonly staticPriority: FieldRef<"Listing", 'Int'>
    readonly tileId10: FieldRef<"Listing", 'BigInt'>
    readonly tileId11: FieldRef<"Listing", 'BigInt'>
    readonly tileId12: FieldRef<"Listing", 'BigInt'>
    readonly tileId13: FieldRef<"Listing", 'BigInt'>
    readonly tileId14: FieldRef<"Listing", 'BigInt'>
    readonly tileId15: FieldRef<"Listing", 'BigInt'>
    readonly tileId16: FieldRef<"Listing", 'BigInt'>
    readonly tileId17: FieldRef<"Listing", 'BigInt'>
    readonly tileId18: FieldRef<"Listing", 'BigInt'>
    readonly tileId19: FieldRef<"Listing", 'BigInt'>
    readonly tileId20: FieldRef<"Listing", 'BigInt'>
    readonly tileId8: FieldRef<"Listing", 'BigInt'>
    readonly tileId9: FieldRef<"Listing", 'BigInt'>
    readonly tileId6: FieldRef<"Listing", 'BigInt'>
    readonly tileId7: FieldRef<"Listing", 'BigInt'>
    readonly denormalizedAssumableDownPayment: FieldRef<"Listing", 'Decimal'>
    readonly denormalizedAssumableInterestRate: FieldRef<"Listing", 'Decimal'>
    readonly denormalizedAssumableLoanType: FieldRef<"Listing", 'LoanType'>
    readonly hasPool: FieldRef<"Listing", 'Boolean'>
    readonly is55Plus: FieldRef<"Listing", 'Boolean'>
    readonly monthlyHoa: FieldRef<"Listing", 'Decimal'>
    readonly streetAddress: FieldRef<"Listing", 'String'>
    readonly assumableDesirabilityScore: FieldRef<"Listing", 'Decimal'>
    readonly isAssumableDesirable: FieldRef<"Listing", 'Boolean'>
    readonly processingVersion: FieldRef<"Listing", 'String'>
    readonly lotSizeAcres: FieldRef<"Listing", 'Decimal'>
    readonly lotSizeSquareFeet: FieldRef<"Listing", 'Int'>
    readonly agentDetails: FieldRef<"Listing", 'Json'>
    readonly agentEmail: FieldRef<"Listing", 'String'>
    readonly agentName: FieldRef<"Listing", 'String'>
    readonly agentOfficeEmail: FieldRef<"Listing", 'String'>
    readonly agentOfficeName: FieldRef<"Listing", 'String'>
    readonly agentOfficePhone: FieldRef<"Listing", 'String'>
    readonly agentPhone: FieldRef<"Listing", 'String'>
    readonly coListingAgents: FieldRef<"Listing", 'Json'>
    readonly denormalizedMlsInstanceLogoUrl: FieldRef<"Listing", 'String'>
    readonly denormalizedMlsInstanceName: FieldRef<"Listing", 'String'>
    readonly agentMlsId: FieldRef<"Listing", 'String'>
    readonly denormalizedMlsInstanceAcronym: FieldRef<"Listing", 'String'>
    readonly agentOfficeMlsId: FieldRef<"Listing", 'String'>
    readonly hasBasement: FieldRef<"Listing", 'Boolean'>
    readonly stories: FieldRef<"Listing", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Listing findUnique
   */
  export type ListingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing findUniqueOrThrow
   */
  export type ListingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing findFirst
   */
  export type ListingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Listings.
     */
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing findFirstOrThrow
   */
  export type ListingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listing to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Listings.
     */
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing findMany
   */
  export type ListingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter, which Listings to fetch.
     */
    where?: ListingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Listings to fetch.
     */
    orderBy?: ListingOrderByWithRelationInput | ListingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Listings.
     */
    cursor?: ListingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Listings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Listings.
     */
    skip?: number
    distinct?: ListingScalarFieldEnum | ListingScalarFieldEnum[]
  }

  /**
   * Listing create
   */
  export type ListingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The data needed to create a Listing.
     */
    data: XOR<ListingCreateInput, ListingUncheckedCreateInput>
  }

  /**
   * Listing createMany
   */
  export type ListingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Listings.
     */
    data: ListingCreateManyInput | ListingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Listing createManyAndReturn
   */
  export type ListingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * The data used to create many Listings.
     */
    data: ListingCreateManyInput | ListingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Listing update
   */
  export type ListingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The data needed to update a Listing.
     */
    data: XOR<ListingUpdateInput, ListingUncheckedUpdateInput>
    /**
     * Choose, which Listing to update.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing updateMany
   */
  export type ListingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Listings.
     */
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyInput>
    /**
     * Filter which Listings to update
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to update.
     */
    limit?: number
  }

  /**
   * Listing updateManyAndReturn
   */
  export type ListingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * The data used to update Listings.
     */
    data: XOR<ListingUpdateManyMutationInput, ListingUncheckedUpdateManyInput>
    /**
     * Filter which Listings to update
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Listing upsert
   */
  export type ListingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * The filter to search for the Listing to update in case it exists.
     */
    where: ListingWhereUniqueInput
    /**
     * In case the Listing found by the `where` argument doesn't exist, create a new Listing with this data.
     */
    create: XOR<ListingCreateInput, ListingUncheckedCreateInput>
    /**
     * In case the Listing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingUpdateInput, ListingUncheckedUpdateInput>
  }

  /**
   * Listing delete
   */
  export type ListingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    /**
     * Filter which Listing to delete.
     */
    where: ListingWhereUniqueInput
  }

  /**
   * Listing deleteMany
   */
  export type ListingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Listings to delete
     */
    where?: ListingWhereInput
    /**
     * Limit how many Listings to delete.
     */
    limit?: number
  }

  /**
   * Listing.PropertyRadar
   */
  export type Listing$PropertyRadarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    where?: PropertyRadarWhereInput
  }

  /**
   * Listing.ListingAudit
   */
  export type Listing$ListingAuditArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    where?: ListingAuditWhereInput
    orderBy?: ListingAuditOrderByWithRelationInput | ListingAuditOrderByWithRelationInput[]
    cursor?: ListingAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingAuditScalarFieldEnum | ListingAuditScalarFieldEnum[]
  }

  /**
   * Listing.ListingHistory
   */
  export type Listing$ListingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    where?: ListingHistoryWhereInput
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    cursor?: ListingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingHistoryScalarFieldEnum | ListingHistoryScalarFieldEnum[]
  }

  /**
   * Listing.ListingLocation
   */
  export type Listing$ListingLocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    where?: ListingLocationWhereInput
  }

  /**
   * Listing.ListingPhoto
   */
  export type Listing$ListingPhotoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    where?: ListingPhotoWhereInput
    orderBy?: ListingPhotoOrderByWithRelationInput | ListingPhotoOrderByWithRelationInput[]
    cursor?: ListingPhotoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingPhotoScalarFieldEnum | ListingPhotoScalarFieldEnum[]
  }

  /**
   * Listing.ListingReport
   */
  export type Listing$ListingReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    where?: ListingReportWhereInput
    orderBy?: ListingReportOrderByWithRelationInput | ListingReportOrderByWithRelationInput[]
    cursor?: ListingReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingReportScalarFieldEnum | ListingReportScalarFieldEnum[]
  }

  /**
   * Listing without action
   */
  export type ListingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
  }


  /**
   * Model ListingAudit
   */

  export type AggregateListingAudit = {
    _count: ListingAuditCountAggregateOutputType | null
    _min: ListingAuditMinAggregateOutputType | null
    _max: ListingAuditMaxAggregateOutputType | null
  }

  export type ListingAuditMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    action: string | null
    source: $Enums.AuditSource | null
    sourceId: string | null
    sourceName: string | null
    createdAt: Date | null
  }

  export type ListingAuditMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    action: string | null
    source: $Enums.AuditSource | null
    sourceId: string | null
    sourceName: string | null
    createdAt: Date | null
  }

  export type ListingAuditCountAggregateOutputType = {
    id: number
    listingId: number
    action: number
    source: number
    sourceId: number
    sourceName: number
    changes: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type ListingAuditMinAggregateInputType = {
    id?: true
    listingId?: true
    action?: true
    source?: true
    sourceId?: true
    sourceName?: true
    createdAt?: true
  }

  export type ListingAuditMaxAggregateInputType = {
    id?: true
    listingId?: true
    action?: true
    source?: true
    sourceId?: true
    sourceName?: true
    createdAt?: true
  }

  export type ListingAuditCountAggregateInputType = {
    id?: true
    listingId?: true
    action?: true
    source?: true
    sourceId?: true
    sourceName?: true
    changes?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type ListingAuditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAudit to aggregate.
     */
    where?: ListingAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAudits to fetch.
     */
    orderBy?: ListingAuditOrderByWithRelationInput | ListingAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingAudits
    **/
    _count?: true | ListingAuditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingAuditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingAuditMaxAggregateInputType
  }

  export type GetListingAuditAggregateType<T extends ListingAuditAggregateArgs> = {
        [P in keyof T & keyof AggregateListingAudit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingAudit[P]>
      : GetScalarType<T[P], AggregateListingAudit[P]>
  }




  export type ListingAuditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingAuditWhereInput
    orderBy?: ListingAuditOrderByWithAggregationInput | ListingAuditOrderByWithAggregationInput[]
    by: ListingAuditScalarFieldEnum[] | ListingAuditScalarFieldEnum
    having?: ListingAuditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingAuditCountAggregateInputType | true
    _min?: ListingAuditMinAggregateInputType
    _max?: ListingAuditMaxAggregateInputType
  }

  export type ListingAuditGroupByOutputType = {
    id: string
    listingId: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes: JsonValue | null
    metadata: JsonValue | null
    createdAt: Date
    _count: ListingAuditCountAggregateOutputType | null
    _min: ListingAuditMinAggregateOutputType | null
    _max: ListingAuditMaxAggregateOutputType | null
  }

  type GetListingAuditGroupByPayload<T extends ListingAuditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingAuditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingAuditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingAuditGroupByOutputType[P]>
            : GetScalarType<T[P], ListingAuditGroupByOutputType[P]>
        }
      >
    >


  export type ListingAuditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    action?: boolean
    source?: boolean
    sourceId?: boolean
    sourceName?: boolean
    changes?: boolean
    metadata?: boolean
    createdAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
    ListingHistory?: boolean | ListingAudit$ListingHistoryArgs<ExtArgs>
    _count?: boolean | ListingAuditCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAudit"]>

  export type ListingAuditSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    action?: boolean
    source?: boolean
    sourceId?: boolean
    sourceName?: boolean
    changes?: boolean
    metadata?: boolean
    createdAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAudit"]>

  export type ListingAuditSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    action?: boolean
    source?: boolean
    sourceId?: boolean
    sourceName?: boolean
    changes?: boolean
    metadata?: boolean
    createdAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingAudit"]>

  export type ListingAuditSelectScalar = {
    id?: boolean
    listingId?: boolean
    action?: boolean
    source?: boolean
    sourceId?: boolean
    sourceName?: boolean
    changes?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type ListingAuditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "action" | "source" | "sourceId" | "sourceName" | "changes" | "metadata" | "createdAt", ExtArgs["result"]["listingAudit"]>
  export type ListingAuditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
    ListingHistory?: boolean | ListingAudit$ListingHistoryArgs<ExtArgs>
    _count?: boolean | ListingAuditCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ListingAuditIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingAuditIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingAuditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingAudit"
    objects: {
      Listing: Prisma.$ListingPayload<ExtArgs>
      ListingHistory: Prisma.$ListingHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      action: string
      source: $Enums.AuditSource
      sourceId: string
      sourceName: string
      changes: Prisma.JsonValue | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
    }, ExtArgs["result"]["listingAudit"]>
    composites: {}
  }

  type ListingAuditGetPayload<S extends boolean | null | undefined | ListingAuditDefaultArgs> = $Result.GetResult<Prisma.$ListingAuditPayload, S>

  type ListingAuditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingAuditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingAuditCountAggregateInputType | true
    }

  export interface ListingAuditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingAudit'], meta: { name: 'ListingAudit' } }
    /**
     * Find zero or one ListingAudit that matches the filter.
     * @param {ListingAuditFindUniqueArgs} args - Arguments to find a ListingAudit
     * @example
     * // Get one ListingAudit
     * const listingAudit = await prisma.listingAudit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingAuditFindUniqueArgs>(args: SelectSubset<T, ListingAuditFindUniqueArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingAudit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingAuditFindUniqueOrThrowArgs} args - Arguments to find a ListingAudit
     * @example
     * // Get one ListingAudit
     * const listingAudit = await prisma.listingAudit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingAuditFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingAuditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAudit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditFindFirstArgs} args - Arguments to find a ListingAudit
     * @example
     * // Get one ListingAudit
     * const listingAudit = await prisma.listingAudit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingAuditFindFirstArgs>(args?: SelectSubset<T, ListingAuditFindFirstArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingAudit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditFindFirstOrThrowArgs} args - Arguments to find a ListingAudit
     * @example
     * // Get one ListingAudit
     * const listingAudit = await prisma.listingAudit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingAuditFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingAuditFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingAudits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingAudits
     * const listingAudits = await prisma.listingAudit.findMany()
     * 
     * // Get first 10 ListingAudits
     * const listingAudits = await prisma.listingAudit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingAuditWithIdOnly = await prisma.listingAudit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingAuditFindManyArgs>(args?: SelectSubset<T, ListingAuditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingAudit.
     * @param {ListingAuditCreateArgs} args - Arguments to create a ListingAudit.
     * @example
     * // Create one ListingAudit
     * const ListingAudit = await prisma.listingAudit.create({
     *   data: {
     *     // ... data to create a ListingAudit
     *   }
     * })
     * 
     */
    create<T extends ListingAuditCreateArgs>(args: SelectSubset<T, ListingAuditCreateArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingAudits.
     * @param {ListingAuditCreateManyArgs} args - Arguments to create many ListingAudits.
     * @example
     * // Create many ListingAudits
     * const listingAudit = await prisma.listingAudit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingAuditCreateManyArgs>(args?: SelectSubset<T, ListingAuditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingAudits and returns the data saved in the database.
     * @param {ListingAuditCreateManyAndReturnArgs} args - Arguments to create many ListingAudits.
     * @example
     * // Create many ListingAudits
     * const listingAudit = await prisma.listingAudit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingAudits and only return the `id`
     * const listingAuditWithIdOnly = await prisma.listingAudit.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingAuditCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingAuditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingAudit.
     * @param {ListingAuditDeleteArgs} args - Arguments to delete one ListingAudit.
     * @example
     * // Delete one ListingAudit
     * const ListingAudit = await prisma.listingAudit.delete({
     *   where: {
     *     // ... filter to delete one ListingAudit
     *   }
     * })
     * 
     */
    delete<T extends ListingAuditDeleteArgs>(args: SelectSubset<T, ListingAuditDeleteArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingAudit.
     * @param {ListingAuditUpdateArgs} args - Arguments to update one ListingAudit.
     * @example
     * // Update one ListingAudit
     * const listingAudit = await prisma.listingAudit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingAuditUpdateArgs>(args: SelectSubset<T, ListingAuditUpdateArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingAudits.
     * @param {ListingAuditDeleteManyArgs} args - Arguments to filter ListingAudits to delete.
     * @example
     * // Delete a few ListingAudits
     * const { count } = await prisma.listingAudit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingAuditDeleteManyArgs>(args?: SelectSubset<T, ListingAuditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingAudits
     * const listingAudit = await prisma.listingAudit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingAuditUpdateManyArgs>(args: SelectSubset<T, ListingAuditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingAudits and returns the data updated in the database.
     * @param {ListingAuditUpdateManyAndReturnArgs} args - Arguments to update many ListingAudits.
     * @example
     * // Update many ListingAudits
     * const listingAudit = await prisma.listingAudit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingAudits and only return the `id`
     * const listingAuditWithIdOnly = await prisma.listingAudit.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingAuditUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingAuditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingAudit.
     * @param {ListingAuditUpsertArgs} args - Arguments to update or create a ListingAudit.
     * @example
     * // Update or create a ListingAudit
     * const listingAudit = await prisma.listingAudit.upsert({
     *   create: {
     *     // ... data to create a ListingAudit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingAudit we want to update
     *   }
     * })
     */
    upsert<T extends ListingAuditUpsertArgs>(args: SelectSubset<T, ListingAuditUpsertArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditCountArgs} args - Arguments to filter ListingAudits to count.
     * @example
     * // Count the number of ListingAudits
     * const count = await prisma.listingAudit.count({
     *   where: {
     *     // ... the filter for the ListingAudits we want to count
     *   }
     * })
    **/
    count<T extends ListingAuditCountArgs>(
      args?: Subset<T, ListingAuditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingAuditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingAuditAggregateArgs>(args: Subset<T, ListingAuditAggregateArgs>): Prisma.PrismaPromise<GetListingAuditAggregateType<T>>

    /**
     * Group by ListingAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingAuditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingAuditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingAuditGroupByArgs['orderBy'] }
        : { orderBy?: ListingAuditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingAudit model
   */
  readonly fields: ListingAuditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingAudit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingAuditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ListingHistory<T extends ListingAudit$ListingHistoryArgs<ExtArgs> = {}>(args?: Subset<T, ListingAudit$ListingHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingAudit model
   */
  interface ListingAuditFieldRefs {
    readonly id: FieldRef<"ListingAudit", 'String'>
    readonly listingId: FieldRef<"ListingAudit", 'String'>
    readonly action: FieldRef<"ListingAudit", 'String'>
    readonly source: FieldRef<"ListingAudit", 'AuditSource'>
    readonly sourceId: FieldRef<"ListingAudit", 'String'>
    readonly sourceName: FieldRef<"ListingAudit", 'String'>
    readonly changes: FieldRef<"ListingAudit", 'Json'>
    readonly metadata: FieldRef<"ListingAudit", 'Json'>
    readonly createdAt: FieldRef<"ListingAudit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListingAudit findUnique
   */
  export type ListingAuditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter, which ListingAudit to fetch.
     */
    where: ListingAuditWhereUniqueInput
  }

  /**
   * ListingAudit findUniqueOrThrow
   */
  export type ListingAuditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter, which ListingAudit to fetch.
     */
    where: ListingAuditWhereUniqueInput
  }

  /**
   * ListingAudit findFirst
   */
  export type ListingAuditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter, which ListingAudit to fetch.
     */
    where?: ListingAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAudits to fetch.
     */
    orderBy?: ListingAuditOrderByWithRelationInput | ListingAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAudits.
     */
    cursor?: ListingAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAudits.
     */
    distinct?: ListingAuditScalarFieldEnum | ListingAuditScalarFieldEnum[]
  }

  /**
   * ListingAudit findFirstOrThrow
   */
  export type ListingAuditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter, which ListingAudit to fetch.
     */
    where?: ListingAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAudits to fetch.
     */
    orderBy?: ListingAuditOrderByWithRelationInput | ListingAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingAudits.
     */
    cursor?: ListingAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingAudits.
     */
    distinct?: ListingAuditScalarFieldEnum | ListingAuditScalarFieldEnum[]
  }

  /**
   * ListingAudit findMany
   */
  export type ListingAuditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter, which ListingAudits to fetch.
     */
    where?: ListingAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingAudits to fetch.
     */
    orderBy?: ListingAuditOrderByWithRelationInput | ListingAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingAudits.
     */
    cursor?: ListingAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingAudits.
     */
    skip?: number
    distinct?: ListingAuditScalarFieldEnum | ListingAuditScalarFieldEnum[]
  }

  /**
   * ListingAudit create
   */
  export type ListingAuditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingAudit.
     */
    data: XOR<ListingAuditCreateInput, ListingAuditUncheckedCreateInput>
  }

  /**
   * ListingAudit createMany
   */
  export type ListingAuditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingAudits.
     */
    data: ListingAuditCreateManyInput | ListingAuditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingAudit createManyAndReturn
   */
  export type ListingAuditCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * The data used to create many ListingAudits.
     */
    data: ListingAuditCreateManyInput | ListingAuditCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAudit update
   */
  export type ListingAuditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingAudit.
     */
    data: XOR<ListingAuditUpdateInput, ListingAuditUncheckedUpdateInput>
    /**
     * Choose, which ListingAudit to update.
     */
    where: ListingAuditWhereUniqueInput
  }

  /**
   * ListingAudit updateMany
   */
  export type ListingAuditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingAudits.
     */
    data: XOR<ListingAuditUpdateManyMutationInput, ListingAuditUncheckedUpdateManyInput>
    /**
     * Filter which ListingAudits to update
     */
    where?: ListingAuditWhereInput
    /**
     * Limit how many ListingAudits to update.
     */
    limit?: number
  }

  /**
   * ListingAudit updateManyAndReturn
   */
  export type ListingAuditUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * The data used to update ListingAudits.
     */
    data: XOR<ListingAuditUpdateManyMutationInput, ListingAuditUncheckedUpdateManyInput>
    /**
     * Filter which ListingAudits to update
     */
    where?: ListingAuditWhereInput
    /**
     * Limit how many ListingAudits to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingAudit upsert
   */
  export type ListingAuditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingAudit to update in case it exists.
     */
    where: ListingAuditWhereUniqueInput
    /**
     * In case the ListingAudit found by the `where` argument doesn't exist, create a new ListingAudit with this data.
     */
    create: XOR<ListingAuditCreateInput, ListingAuditUncheckedCreateInput>
    /**
     * In case the ListingAudit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingAuditUpdateInput, ListingAuditUncheckedUpdateInput>
  }

  /**
   * ListingAudit delete
   */
  export type ListingAuditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    /**
     * Filter which ListingAudit to delete.
     */
    where: ListingAuditWhereUniqueInput
  }

  /**
   * ListingAudit deleteMany
   */
  export type ListingAuditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingAudits to delete
     */
    where?: ListingAuditWhereInput
    /**
     * Limit how many ListingAudits to delete.
     */
    limit?: number
  }

  /**
   * ListingAudit.ListingHistory
   */
  export type ListingAudit$ListingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    where?: ListingHistoryWhereInput
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    cursor?: ListingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ListingHistoryScalarFieldEnum | ListingHistoryScalarFieldEnum[]
  }

  /**
   * ListingAudit without action
   */
  export type ListingAuditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
  }


  /**
   * Model ListingHistory
   */

  export type AggregateListingHistory = {
    _count: ListingHistoryCountAggregateOutputType | null
    _avg: ListingHistoryAvgAggregateOutputType | null
    _sum: ListingHistorySumAggregateOutputType | null
    _min: ListingHistoryMinAggregateOutputType | null
    _max: ListingHistoryMaxAggregateOutputType | null
  }

  export type ListingHistoryAvgAggregateOutputType = {
    price: Decimal | null
  }

  export type ListingHistorySumAggregateOutputType = {
    price: Decimal | null
  }

  export type ListingHistoryMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    price: Decimal | null
    status: $Enums.ListingStatus | null
    effectiveDate: Date | null
    createdAt: Date | null
    auditId: string | null
  }

  export type ListingHistoryMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    price: Decimal | null
    status: $Enums.ListingStatus | null
    effectiveDate: Date | null
    createdAt: Date | null
    auditId: string | null
  }

  export type ListingHistoryCountAggregateOutputType = {
    id: number
    listingId: number
    price: number
    status: number
    rawData: number
    changedFields: number
    effectiveDate: number
    createdAt: number
    auditId: number
    _all: number
  }


  export type ListingHistoryAvgAggregateInputType = {
    price?: true
  }

  export type ListingHistorySumAggregateInputType = {
    price?: true
  }

  export type ListingHistoryMinAggregateInputType = {
    id?: true
    listingId?: true
    price?: true
    status?: true
    effectiveDate?: true
    createdAt?: true
    auditId?: true
  }

  export type ListingHistoryMaxAggregateInputType = {
    id?: true
    listingId?: true
    price?: true
    status?: true
    effectiveDate?: true
    createdAt?: true
    auditId?: true
  }

  export type ListingHistoryCountAggregateInputType = {
    id?: true
    listingId?: true
    price?: true
    status?: true
    rawData?: true
    changedFields?: true
    effectiveDate?: true
    createdAt?: true
    auditId?: true
    _all?: true
  }

  export type ListingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingHistory to aggregate.
     */
    where?: ListingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingHistories to fetch.
     */
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingHistories
    **/
    _count?: true | ListingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingHistoryMaxAggregateInputType
  }

  export type GetListingHistoryAggregateType<T extends ListingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateListingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingHistory[P]>
      : GetScalarType<T[P], AggregateListingHistory[P]>
  }




  export type ListingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingHistoryWhereInput
    orderBy?: ListingHistoryOrderByWithAggregationInput | ListingHistoryOrderByWithAggregationInput[]
    by: ListingHistoryScalarFieldEnum[] | ListingHistoryScalarFieldEnum
    having?: ListingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingHistoryCountAggregateInputType | true
    _avg?: ListingHistoryAvgAggregateInputType
    _sum?: ListingHistorySumAggregateInputType
    _min?: ListingHistoryMinAggregateInputType
    _max?: ListingHistoryMaxAggregateInputType
  }

  export type ListingHistoryGroupByOutputType = {
    id: string
    listingId: string
    price: Decimal
    status: $Enums.ListingStatus
    rawData: JsonValue
    changedFields: JsonValue
    effectiveDate: Date
    createdAt: Date
    auditId: string | null
    _count: ListingHistoryCountAggregateOutputType | null
    _avg: ListingHistoryAvgAggregateOutputType | null
    _sum: ListingHistorySumAggregateOutputType | null
    _min: ListingHistoryMinAggregateOutputType | null
    _max: ListingHistoryMaxAggregateOutputType | null
  }

  type GetListingHistoryGroupByPayload<T extends ListingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], ListingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type ListingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    price?: boolean
    status?: boolean
    rawData?: boolean
    changedFields?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    auditId?: boolean
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingHistory"]>

  export type ListingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    price?: boolean
    status?: boolean
    rawData?: boolean
    changedFields?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    auditId?: boolean
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingHistory"]>

  export type ListingHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    price?: boolean
    status?: boolean
    rawData?: boolean
    changedFields?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    auditId?: boolean
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingHistory"]>

  export type ListingHistorySelectScalar = {
    id?: boolean
    listingId?: boolean
    price?: boolean
    status?: boolean
    rawData?: boolean
    changedFields?: boolean
    effectiveDate?: boolean
    createdAt?: boolean
    auditId?: boolean
  }

  export type ListingHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "price" | "status" | "rawData" | "changedFields" | "effectiveDate" | "createdAt" | "auditId", ExtArgs["result"]["listingHistory"]>
  export type ListingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ListingAudit?: boolean | ListingHistory$ListingAuditArgs<ExtArgs>
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingHistory"
    objects: {
      ListingAudit: Prisma.$ListingAuditPayload<ExtArgs> | null
      Listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      price: Prisma.Decimal
      status: $Enums.ListingStatus
      rawData: Prisma.JsonValue
      changedFields: Prisma.JsonValue
      effectiveDate: Date
      createdAt: Date
      auditId: string | null
    }, ExtArgs["result"]["listingHistory"]>
    composites: {}
  }

  type ListingHistoryGetPayload<S extends boolean | null | undefined | ListingHistoryDefaultArgs> = $Result.GetResult<Prisma.$ListingHistoryPayload, S>

  type ListingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingHistoryCountAggregateInputType | true
    }

  export interface ListingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingHistory'], meta: { name: 'ListingHistory' } }
    /**
     * Find zero or one ListingHistory that matches the filter.
     * @param {ListingHistoryFindUniqueArgs} args - Arguments to find a ListingHistory
     * @example
     * // Get one ListingHistory
     * const listingHistory = await prisma.listingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingHistoryFindUniqueArgs>(args: SelectSubset<T, ListingHistoryFindUniqueArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingHistoryFindUniqueOrThrowArgs} args - Arguments to find a ListingHistory
     * @example
     * // Get one ListingHistory
     * const listingHistory = await prisma.listingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryFindFirstArgs} args - Arguments to find a ListingHistory
     * @example
     * // Get one ListingHistory
     * const listingHistory = await prisma.listingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingHistoryFindFirstArgs>(args?: SelectSubset<T, ListingHistoryFindFirstArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryFindFirstOrThrowArgs} args - Arguments to find a ListingHistory
     * @example
     * // Get one ListingHistory
     * const listingHistory = await prisma.listingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingHistories
     * const listingHistories = await prisma.listingHistory.findMany()
     * 
     * // Get first 10 ListingHistories
     * const listingHistories = await prisma.listingHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingHistoryWithIdOnly = await prisma.listingHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingHistoryFindManyArgs>(args?: SelectSubset<T, ListingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingHistory.
     * @param {ListingHistoryCreateArgs} args - Arguments to create a ListingHistory.
     * @example
     * // Create one ListingHistory
     * const ListingHistory = await prisma.listingHistory.create({
     *   data: {
     *     // ... data to create a ListingHistory
     *   }
     * })
     * 
     */
    create<T extends ListingHistoryCreateArgs>(args: SelectSubset<T, ListingHistoryCreateArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingHistories.
     * @param {ListingHistoryCreateManyArgs} args - Arguments to create many ListingHistories.
     * @example
     * // Create many ListingHistories
     * const listingHistory = await prisma.listingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingHistoryCreateManyArgs>(args?: SelectSubset<T, ListingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingHistories and returns the data saved in the database.
     * @param {ListingHistoryCreateManyAndReturnArgs} args - Arguments to create many ListingHistories.
     * @example
     * // Create many ListingHistories
     * const listingHistory = await prisma.listingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingHistories and only return the `id`
     * const listingHistoryWithIdOnly = await prisma.listingHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingHistory.
     * @param {ListingHistoryDeleteArgs} args - Arguments to delete one ListingHistory.
     * @example
     * // Delete one ListingHistory
     * const ListingHistory = await prisma.listingHistory.delete({
     *   where: {
     *     // ... filter to delete one ListingHistory
     *   }
     * })
     * 
     */
    delete<T extends ListingHistoryDeleteArgs>(args: SelectSubset<T, ListingHistoryDeleteArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingHistory.
     * @param {ListingHistoryUpdateArgs} args - Arguments to update one ListingHistory.
     * @example
     * // Update one ListingHistory
     * const listingHistory = await prisma.listingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingHistoryUpdateArgs>(args: SelectSubset<T, ListingHistoryUpdateArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingHistories.
     * @param {ListingHistoryDeleteManyArgs} args - Arguments to filter ListingHistories to delete.
     * @example
     * // Delete a few ListingHistories
     * const { count } = await prisma.listingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingHistoryDeleteManyArgs>(args?: SelectSubset<T, ListingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingHistories
     * const listingHistory = await prisma.listingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingHistoryUpdateManyArgs>(args: SelectSubset<T, ListingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingHistories and returns the data updated in the database.
     * @param {ListingHistoryUpdateManyAndReturnArgs} args - Arguments to update many ListingHistories.
     * @example
     * // Update many ListingHistories
     * const listingHistory = await prisma.listingHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingHistories and only return the `id`
     * const listingHistoryWithIdOnly = await prisma.listingHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingHistory.
     * @param {ListingHistoryUpsertArgs} args - Arguments to update or create a ListingHistory.
     * @example
     * // Update or create a ListingHistory
     * const listingHistory = await prisma.listingHistory.upsert({
     *   create: {
     *     // ... data to create a ListingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingHistory we want to update
     *   }
     * })
     */
    upsert<T extends ListingHistoryUpsertArgs>(args: SelectSubset<T, ListingHistoryUpsertArgs<ExtArgs>>): Prisma__ListingHistoryClient<$Result.GetResult<Prisma.$ListingHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryCountArgs} args - Arguments to filter ListingHistories to count.
     * @example
     * // Count the number of ListingHistories
     * const count = await prisma.listingHistory.count({
     *   where: {
     *     // ... the filter for the ListingHistories we want to count
     *   }
     * })
    **/
    count<T extends ListingHistoryCountArgs>(
      args?: Subset<T, ListingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingHistoryAggregateArgs>(args: Subset<T, ListingHistoryAggregateArgs>): Prisma.PrismaPromise<GetListingHistoryAggregateType<T>>

    /**
     * Group by ListingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: ListingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingHistory model
   */
  readonly fields: ListingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ListingAudit<T extends ListingHistory$ListingAuditArgs<ExtArgs> = {}>(args?: Subset<T, ListingHistory$ListingAuditArgs<ExtArgs>>): Prisma__ListingAuditClient<$Result.GetResult<Prisma.$ListingAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingHistory model
   */
  interface ListingHistoryFieldRefs {
    readonly id: FieldRef<"ListingHistory", 'String'>
    readonly listingId: FieldRef<"ListingHistory", 'String'>
    readonly price: FieldRef<"ListingHistory", 'Decimal'>
    readonly status: FieldRef<"ListingHistory", 'ListingStatus'>
    readonly rawData: FieldRef<"ListingHistory", 'Json'>
    readonly changedFields: FieldRef<"ListingHistory", 'Json'>
    readonly effectiveDate: FieldRef<"ListingHistory", 'DateTime'>
    readonly createdAt: FieldRef<"ListingHistory", 'DateTime'>
    readonly auditId: FieldRef<"ListingHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ListingHistory findUnique
   */
  export type ListingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ListingHistory to fetch.
     */
    where: ListingHistoryWhereUniqueInput
  }

  /**
   * ListingHistory findUniqueOrThrow
   */
  export type ListingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ListingHistory to fetch.
     */
    where: ListingHistoryWhereUniqueInput
  }

  /**
   * ListingHistory findFirst
   */
  export type ListingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ListingHistory to fetch.
     */
    where?: ListingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingHistories to fetch.
     */
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingHistories.
     */
    cursor?: ListingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingHistories.
     */
    distinct?: ListingHistoryScalarFieldEnum | ListingHistoryScalarFieldEnum[]
  }

  /**
   * ListingHistory findFirstOrThrow
   */
  export type ListingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ListingHistory to fetch.
     */
    where?: ListingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingHistories to fetch.
     */
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingHistories.
     */
    cursor?: ListingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingHistories.
     */
    distinct?: ListingHistoryScalarFieldEnum | ListingHistoryScalarFieldEnum[]
  }

  /**
   * ListingHistory findMany
   */
  export type ListingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which ListingHistories to fetch.
     */
    where?: ListingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingHistories to fetch.
     */
    orderBy?: ListingHistoryOrderByWithRelationInput | ListingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingHistories.
     */
    cursor?: ListingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingHistories.
     */
    skip?: number
    distinct?: ListingHistoryScalarFieldEnum | ListingHistoryScalarFieldEnum[]
  }

  /**
   * ListingHistory create
   */
  export type ListingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingHistory.
     */
    data: XOR<ListingHistoryCreateInput, ListingHistoryUncheckedCreateInput>
  }

  /**
   * ListingHistory createMany
   */
  export type ListingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingHistories.
     */
    data: ListingHistoryCreateManyInput | ListingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingHistory createManyAndReturn
   */
  export type ListingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many ListingHistories.
     */
    data: ListingHistoryCreateManyInput | ListingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingHistory update
   */
  export type ListingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingHistory.
     */
    data: XOR<ListingHistoryUpdateInput, ListingHistoryUncheckedUpdateInput>
    /**
     * Choose, which ListingHistory to update.
     */
    where: ListingHistoryWhereUniqueInput
  }

  /**
   * ListingHistory updateMany
   */
  export type ListingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingHistories.
     */
    data: XOR<ListingHistoryUpdateManyMutationInput, ListingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ListingHistories to update
     */
    where?: ListingHistoryWhereInput
    /**
     * Limit how many ListingHistories to update.
     */
    limit?: number
  }

  /**
   * ListingHistory updateManyAndReturn
   */
  export type ListingHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * The data used to update ListingHistories.
     */
    data: XOR<ListingHistoryUpdateManyMutationInput, ListingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which ListingHistories to update
     */
    where?: ListingHistoryWhereInput
    /**
     * Limit how many ListingHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingHistory upsert
   */
  export type ListingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingHistory to update in case it exists.
     */
    where: ListingHistoryWhereUniqueInput
    /**
     * In case the ListingHistory found by the `where` argument doesn't exist, create a new ListingHistory with this data.
     */
    create: XOR<ListingHistoryCreateInput, ListingHistoryUncheckedCreateInput>
    /**
     * In case the ListingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingHistoryUpdateInput, ListingHistoryUncheckedUpdateInput>
  }

  /**
   * ListingHistory delete
   */
  export type ListingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
    /**
     * Filter which ListingHistory to delete.
     */
    where: ListingHistoryWhereUniqueInput
  }

  /**
   * ListingHistory deleteMany
   */
  export type ListingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingHistories to delete
     */
    where?: ListingHistoryWhereInput
    /**
     * Limit how many ListingHistories to delete.
     */
    limit?: number
  }

  /**
   * ListingHistory.ListingAudit
   */
  export type ListingHistory$ListingAuditArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingAudit
     */
    select?: ListingAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingAudit
     */
    omit?: ListingAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingAuditInclude<ExtArgs> | null
    where?: ListingAuditWhereInput
  }

  /**
   * ListingHistory without action
   */
  export type ListingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingHistory
     */
    select?: ListingHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingHistory
     */
    omit?: ListingHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model ListingLocation
   */

  export type AggregateListingLocation = {
    _count: ListingLocationCountAggregateOutputType | null
    _min: ListingLocationMinAggregateOutputType | null
    _max: ListingLocationMaxAggregateOutputType | null
  }

  export type ListingLocationMinAggregateOutputType = {
    id: string | null
    listingId: string | null
  }

  export type ListingLocationMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
  }

  export type ListingLocationCountAggregateOutputType = {
    id: number
    listingId: number
    _all: number
  }


  export type ListingLocationMinAggregateInputType = {
    id?: true
    listingId?: true
  }

  export type ListingLocationMaxAggregateInputType = {
    id?: true
    listingId?: true
  }

  export type ListingLocationCountAggregateInputType = {
    id?: true
    listingId?: true
    _all?: true
  }

  export type ListingLocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingLocation to aggregate.
     */
    where?: ListingLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingLocations to fetch.
     */
    orderBy?: ListingLocationOrderByWithRelationInput | ListingLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingLocations
    **/
    _count?: true | ListingLocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingLocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingLocationMaxAggregateInputType
  }

  export type GetListingLocationAggregateType<T extends ListingLocationAggregateArgs> = {
        [P in keyof T & keyof AggregateListingLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingLocation[P]>
      : GetScalarType<T[P], AggregateListingLocation[P]>
  }




  export type ListingLocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingLocationWhereInput
    orderBy?: ListingLocationOrderByWithAggregationInput | ListingLocationOrderByWithAggregationInput[]
    by: ListingLocationScalarFieldEnum[] | ListingLocationScalarFieldEnum
    having?: ListingLocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingLocationCountAggregateInputType | true
    _min?: ListingLocationMinAggregateInputType
    _max?: ListingLocationMaxAggregateInputType
  }

  export type ListingLocationGroupByOutputType = {
    id: string
    listingId: string
    _count: ListingLocationCountAggregateOutputType | null
    _min: ListingLocationMinAggregateOutputType | null
    _max: ListingLocationMaxAggregateOutputType | null
  }

  type GetListingLocationGroupByPayload<T extends ListingLocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingLocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingLocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingLocationGroupByOutputType[P]>
            : GetScalarType<T[P], ListingLocationGroupByOutputType[P]>
        }
      >
    >


  export type ListingLocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingLocation"]>

  export type ListingLocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingLocation"]>

  export type ListingLocationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingLocation"]>

  export type ListingLocationSelectScalar = {
    id?: boolean
    listingId?: boolean
  }

  export type ListingLocationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId", ExtArgs["result"]["listingLocation"]>
  export type ListingLocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingLocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingLocationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingLocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingLocation"
    objects: {
      Listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
    }, ExtArgs["result"]["listingLocation"]>
    composites: {}
  }

  type ListingLocationGetPayload<S extends boolean | null | undefined | ListingLocationDefaultArgs> = $Result.GetResult<Prisma.$ListingLocationPayload, S>

  type ListingLocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingLocationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingLocationCountAggregateInputType | true
    }

  export interface ListingLocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingLocation'], meta: { name: 'ListingLocation' } }
    /**
     * Find zero or one ListingLocation that matches the filter.
     * @param {ListingLocationFindUniqueArgs} args - Arguments to find a ListingLocation
     * @example
     * // Get one ListingLocation
     * const listingLocation = await prisma.listingLocation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingLocationFindUniqueArgs>(args: SelectSubset<T, ListingLocationFindUniqueArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingLocation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingLocationFindUniqueOrThrowArgs} args - Arguments to find a ListingLocation
     * @example
     * // Get one ListingLocation
     * const listingLocation = await prisma.listingLocation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingLocationFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingLocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingLocation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationFindFirstArgs} args - Arguments to find a ListingLocation
     * @example
     * // Get one ListingLocation
     * const listingLocation = await prisma.listingLocation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingLocationFindFirstArgs>(args?: SelectSubset<T, ListingLocationFindFirstArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingLocation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationFindFirstOrThrowArgs} args - Arguments to find a ListingLocation
     * @example
     * // Get one ListingLocation
     * const listingLocation = await prisma.listingLocation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingLocationFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingLocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingLocations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingLocations
     * const listingLocations = await prisma.listingLocation.findMany()
     * 
     * // Get first 10 ListingLocations
     * const listingLocations = await prisma.listingLocation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingLocationWithIdOnly = await prisma.listingLocation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingLocationFindManyArgs>(args?: SelectSubset<T, ListingLocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingLocation.
     * @param {ListingLocationCreateArgs} args - Arguments to create a ListingLocation.
     * @example
     * // Create one ListingLocation
     * const ListingLocation = await prisma.listingLocation.create({
     *   data: {
     *     // ... data to create a ListingLocation
     *   }
     * })
     * 
     */
    create<T extends ListingLocationCreateArgs>(args: SelectSubset<T, ListingLocationCreateArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingLocations.
     * @param {ListingLocationCreateManyArgs} args - Arguments to create many ListingLocations.
     * @example
     * // Create many ListingLocations
     * const listingLocation = await prisma.listingLocation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingLocationCreateManyArgs>(args?: SelectSubset<T, ListingLocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingLocations and returns the data saved in the database.
     * @param {ListingLocationCreateManyAndReturnArgs} args - Arguments to create many ListingLocations.
     * @example
     * // Create many ListingLocations
     * const listingLocation = await prisma.listingLocation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingLocations and only return the `id`
     * const listingLocationWithIdOnly = await prisma.listingLocation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingLocationCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingLocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingLocation.
     * @param {ListingLocationDeleteArgs} args - Arguments to delete one ListingLocation.
     * @example
     * // Delete one ListingLocation
     * const ListingLocation = await prisma.listingLocation.delete({
     *   where: {
     *     // ... filter to delete one ListingLocation
     *   }
     * })
     * 
     */
    delete<T extends ListingLocationDeleteArgs>(args: SelectSubset<T, ListingLocationDeleteArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingLocation.
     * @param {ListingLocationUpdateArgs} args - Arguments to update one ListingLocation.
     * @example
     * // Update one ListingLocation
     * const listingLocation = await prisma.listingLocation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingLocationUpdateArgs>(args: SelectSubset<T, ListingLocationUpdateArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingLocations.
     * @param {ListingLocationDeleteManyArgs} args - Arguments to filter ListingLocations to delete.
     * @example
     * // Delete a few ListingLocations
     * const { count } = await prisma.listingLocation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingLocationDeleteManyArgs>(args?: SelectSubset<T, ListingLocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingLocations
     * const listingLocation = await prisma.listingLocation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingLocationUpdateManyArgs>(args: SelectSubset<T, ListingLocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingLocations and returns the data updated in the database.
     * @param {ListingLocationUpdateManyAndReturnArgs} args - Arguments to update many ListingLocations.
     * @example
     * // Update many ListingLocations
     * const listingLocation = await prisma.listingLocation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingLocations and only return the `id`
     * const listingLocationWithIdOnly = await prisma.listingLocation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingLocationUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingLocationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingLocation.
     * @param {ListingLocationUpsertArgs} args - Arguments to update or create a ListingLocation.
     * @example
     * // Update or create a ListingLocation
     * const listingLocation = await prisma.listingLocation.upsert({
     *   create: {
     *     // ... data to create a ListingLocation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingLocation we want to update
     *   }
     * })
     */
    upsert<T extends ListingLocationUpsertArgs>(args: SelectSubset<T, ListingLocationUpsertArgs<ExtArgs>>): Prisma__ListingLocationClient<$Result.GetResult<Prisma.$ListingLocationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingLocations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationCountArgs} args - Arguments to filter ListingLocations to count.
     * @example
     * // Count the number of ListingLocations
     * const count = await prisma.listingLocation.count({
     *   where: {
     *     // ... the filter for the ListingLocations we want to count
     *   }
     * })
    **/
    count<T extends ListingLocationCountArgs>(
      args?: Subset<T, ListingLocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingLocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingLocationAggregateArgs>(args: Subset<T, ListingLocationAggregateArgs>): Prisma.PrismaPromise<GetListingLocationAggregateType<T>>

    /**
     * Group by ListingLocation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingLocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingLocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingLocationGroupByArgs['orderBy'] }
        : { orderBy?: ListingLocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingLocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingLocation model
   */
  readonly fields: ListingLocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingLocation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingLocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingLocation model
   */
  interface ListingLocationFieldRefs {
    readonly id: FieldRef<"ListingLocation", 'String'>
    readonly listingId: FieldRef<"ListingLocation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ListingLocation findUnique
   */
  export type ListingLocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter, which ListingLocation to fetch.
     */
    where: ListingLocationWhereUniqueInput
  }

  /**
   * ListingLocation findUniqueOrThrow
   */
  export type ListingLocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter, which ListingLocation to fetch.
     */
    where: ListingLocationWhereUniqueInput
  }

  /**
   * ListingLocation findFirst
   */
  export type ListingLocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter, which ListingLocation to fetch.
     */
    where?: ListingLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingLocations to fetch.
     */
    orderBy?: ListingLocationOrderByWithRelationInput | ListingLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingLocations.
     */
    cursor?: ListingLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingLocations.
     */
    distinct?: ListingLocationScalarFieldEnum | ListingLocationScalarFieldEnum[]
  }

  /**
   * ListingLocation findFirstOrThrow
   */
  export type ListingLocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter, which ListingLocation to fetch.
     */
    where?: ListingLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingLocations to fetch.
     */
    orderBy?: ListingLocationOrderByWithRelationInput | ListingLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingLocations.
     */
    cursor?: ListingLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingLocations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingLocations.
     */
    distinct?: ListingLocationScalarFieldEnum | ListingLocationScalarFieldEnum[]
  }

  /**
   * ListingLocation findMany
   */
  export type ListingLocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter, which ListingLocations to fetch.
     */
    where?: ListingLocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingLocations to fetch.
     */
    orderBy?: ListingLocationOrderByWithRelationInput | ListingLocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingLocations.
     */
    cursor?: ListingLocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingLocations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingLocations.
     */
    skip?: number
    distinct?: ListingLocationScalarFieldEnum | ListingLocationScalarFieldEnum[]
  }

  /**
   * ListingLocation create
   */
  export type ListingLocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingLocation.
     */
    data: XOR<ListingLocationCreateInput, ListingLocationUncheckedCreateInput>
  }

  /**
   * ListingLocation createMany
   */
  export type ListingLocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingLocations.
     */
    data: ListingLocationCreateManyInput | ListingLocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingLocation createManyAndReturn
   */
  export type ListingLocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * The data used to create many ListingLocations.
     */
    data: ListingLocationCreateManyInput | ListingLocationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingLocation update
   */
  export type ListingLocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingLocation.
     */
    data: XOR<ListingLocationUpdateInput, ListingLocationUncheckedUpdateInput>
    /**
     * Choose, which ListingLocation to update.
     */
    where: ListingLocationWhereUniqueInput
  }

  /**
   * ListingLocation updateMany
   */
  export type ListingLocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingLocations.
     */
    data: XOR<ListingLocationUpdateManyMutationInput, ListingLocationUncheckedUpdateManyInput>
    /**
     * Filter which ListingLocations to update
     */
    where?: ListingLocationWhereInput
    /**
     * Limit how many ListingLocations to update.
     */
    limit?: number
  }

  /**
   * ListingLocation updateManyAndReturn
   */
  export type ListingLocationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * The data used to update ListingLocations.
     */
    data: XOR<ListingLocationUpdateManyMutationInput, ListingLocationUncheckedUpdateManyInput>
    /**
     * Filter which ListingLocations to update
     */
    where?: ListingLocationWhereInput
    /**
     * Limit how many ListingLocations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingLocation upsert
   */
  export type ListingLocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingLocation to update in case it exists.
     */
    where: ListingLocationWhereUniqueInput
    /**
     * In case the ListingLocation found by the `where` argument doesn't exist, create a new ListingLocation with this data.
     */
    create: XOR<ListingLocationCreateInput, ListingLocationUncheckedCreateInput>
    /**
     * In case the ListingLocation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingLocationUpdateInput, ListingLocationUncheckedUpdateInput>
  }

  /**
   * ListingLocation delete
   */
  export type ListingLocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
    /**
     * Filter which ListingLocation to delete.
     */
    where: ListingLocationWhereUniqueInput
  }

  /**
   * ListingLocation deleteMany
   */
  export type ListingLocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingLocations to delete
     */
    where?: ListingLocationWhereInput
    /**
     * Limit how many ListingLocations to delete.
     */
    limit?: number
  }

  /**
   * ListingLocation without action
   */
  export type ListingLocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingLocation
     */
    select?: ListingLocationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingLocation
     */
    omit?: ListingLocationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingLocationInclude<ExtArgs> | null
  }


  /**
   * Model ListingPhoto
   */

  export type AggregateListingPhoto = {
    _count: ListingPhotoCountAggregateOutputType | null
    _avg: ListingPhotoAvgAggregateOutputType | null
    _sum: ListingPhotoSumAggregateOutputType | null
    _min: ListingPhotoMinAggregateOutputType | null
    _max: ListingPhotoMaxAggregateOutputType | null
  }

  export type ListingPhotoAvgAggregateOutputType = {
    order: number | null
  }

  export type ListingPhotoSumAggregateOutputType = {
    order: number | null
  }

  export type ListingPhotoMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    mlsUrl: string | null
    s3Url: string | null
    order: number | null
    lastChecked: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ListingPhotoMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    mlsUrl: string | null
    s3Url: string | null
    order: number | null
    lastChecked: Date | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ListingPhotoCountAggregateOutputType = {
    id: number
    listingId: number
    mlsUrl: number
    s3Url: number
    order: number
    lastChecked: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ListingPhotoAvgAggregateInputType = {
    order?: true
  }

  export type ListingPhotoSumAggregateInputType = {
    order?: true
  }

  export type ListingPhotoMinAggregateInputType = {
    id?: true
    listingId?: true
    mlsUrl?: true
    s3Url?: true
    order?: true
    lastChecked?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ListingPhotoMaxAggregateInputType = {
    id?: true
    listingId?: true
    mlsUrl?: true
    s3Url?: true
    order?: true
    lastChecked?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ListingPhotoCountAggregateInputType = {
    id?: true
    listingId?: true
    mlsUrl?: true
    s3Url?: true
    order?: true
    lastChecked?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ListingPhotoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingPhoto to aggregate.
     */
    where?: ListingPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingPhotos to fetch.
     */
    orderBy?: ListingPhotoOrderByWithRelationInput | ListingPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingPhotos
    **/
    _count?: true | ListingPhotoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ListingPhotoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ListingPhotoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingPhotoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingPhotoMaxAggregateInputType
  }

  export type GetListingPhotoAggregateType<T extends ListingPhotoAggregateArgs> = {
        [P in keyof T & keyof AggregateListingPhoto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingPhoto[P]>
      : GetScalarType<T[P], AggregateListingPhoto[P]>
  }




  export type ListingPhotoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingPhotoWhereInput
    orderBy?: ListingPhotoOrderByWithAggregationInput | ListingPhotoOrderByWithAggregationInput[]
    by: ListingPhotoScalarFieldEnum[] | ListingPhotoScalarFieldEnum
    having?: ListingPhotoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingPhotoCountAggregateInputType | true
    _avg?: ListingPhotoAvgAggregateInputType
    _sum?: ListingPhotoSumAggregateInputType
    _min?: ListingPhotoMinAggregateInputType
    _max?: ListingPhotoMaxAggregateInputType
  }

  export type ListingPhotoGroupByOutputType = {
    id: string
    listingId: string
    mlsUrl: string
    s3Url: string | null
    order: number
    lastChecked: Date
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ListingPhotoCountAggregateOutputType | null
    _avg: ListingPhotoAvgAggregateOutputType | null
    _sum: ListingPhotoSumAggregateOutputType | null
    _min: ListingPhotoMinAggregateOutputType | null
    _max: ListingPhotoMaxAggregateOutputType | null
  }

  type GetListingPhotoGroupByPayload<T extends ListingPhotoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingPhotoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingPhotoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingPhotoGroupByOutputType[P]>
            : GetScalarType<T[P], ListingPhotoGroupByOutputType[P]>
        }
      >
    >


  export type ListingPhotoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    mlsUrl?: boolean
    s3Url?: boolean
    order?: boolean
    lastChecked?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingPhoto"]>

  export type ListingPhotoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    mlsUrl?: boolean
    s3Url?: boolean
    order?: boolean
    lastChecked?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingPhoto"]>

  export type ListingPhotoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    mlsUrl?: boolean
    s3Url?: boolean
    order?: boolean
    lastChecked?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingPhoto"]>

  export type ListingPhotoSelectScalar = {
    id?: boolean
    listingId?: boolean
    mlsUrl?: boolean
    s3Url?: boolean
    order?: boolean
    lastChecked?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ListingPhotoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "mlsUrl" | "s3Url" | "order" | "lastChecked" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["listingPhoto"]>
  export type ListingPhotoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingPhotoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingPhotoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingPhotoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingPhoto"
    objects: {
      Listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      mlsUrl: string
      s3Url: string | null
      order: number
      lastChecked: Date
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["listingPhoto"]>
    composites: {}
  }

  type ListingPhotoGetPayload<S extends boolean | null | undefined | ListingPhotoDefaultArgs> = $Result.GetResult<Prisma.$ListingPhotoPayload, S>

  type ListingPhotoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingPhotoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingPhotoCountAggregateInputType | true
    }

  export interface ListingPhotoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingPhoto'], meta: { name: 'ListingPhoto' } }
    /**
     * Find zero or one ListingPhoto that matches the filter.
     * @param {ListingPhotoFindUniqueArgs} args - Arguments to find a ListingPhoto
     * @example
     * // Get one ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingPhotoFindUniqueArgs>(args: SelectSubset<T, ListingPhotoFindUniqueArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingPhoto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingPhotoFindUniqueOrThrowArgs} args - Arguments to find a ListingPhoto
     * @example
     * // Get one ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingPhotoFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingPhotoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingPhoto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoFindFirstArgs} args - Arguments to find a ListingPhoto
     * @example
     * // Get one ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingPhotoFindFirstArgs>(args?: SelectSubset<T, ListingPhotoFindFirstArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingPhoto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoFindFirstOrThrowArgs} args - Arguments to find a ListingPhoto
     * @example
     * // Get one ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingPhotoFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingPhotoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingPhotos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingPhotos
     * const listingPhotos = await prisma.listingPhoto.findMany()
     * 
     * // Get first 10 ListingPhotos
     * const listingPhotos = await prisma.listingPhoto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingPhotoWithIdOnly = await prisma.listingPhoto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingPhotoFindManyArgs>(args?: SelectSubset<T, ListingPhotoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingPhoto.
     * @param {ListingPhotoCreateArgs} args - Arguments to create a ListingPhoto.
     * @example
     * // Create one ListingPhoto
     * const ListingPhoto = await prisma.listingPhoto.create({
     *   data: {
     *     // ... data to create a ListingPhoto
     *   }
     * })
     * 
     */
    create<T extends ListingPhotoCreateArgs>(args: SelectSubset<T, ListingPhotoCreateArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingPhotos.
     * @param {ListingPhotoCreateManyArgs} args - Arguments to create many ListingPhotos.
     * @example
     * // Create many ListingPhotos
     * const listingPhoto = await prisma.listingPhoto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingPhotoCreateManyArgs>(args?: SelectSubset<T, ListingPhotoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingPhotos and returns the data saved in the database.
     * @param {ListingPhotoCreateManyAndReturnArgs} args - Arguments to create many ListingPhotos.
     * @example
     * // Create many ListingPhotos
     * const listingPhoto = await prisma.listingPhoto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingPhotos and only return the `id`
     * const listingPhotoWithIdOnly = await prisma.listingPhoto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingPhotoCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingPhotoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingPhoto.
     * @param {ListingPhotoDeleteArgs} args - Arguments to delete one ListingPhoto.
     * @example
     * // Delete one ListingPhoto
     * const ListingPhoto = await prisma.listingPhoto.delete({
     *   where: {
     *     // ... filter to delete one ListingPhoto
     *   }
     * })
     * 
     */
    delete<T extends ListingPhotoDeleteArgs>(args: SelectSubset<T, ListingPhotoDeleteArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingPhoto.
     * @param {ListingPhotoUpdateArgs} args - Arguments to update one ListingPhoto.
     * @example
     * // Update one ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingPhotoUpdateArgs>(args: SelectSubset<T, ListingPhotoUpdateArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingPhotos.
     * @param {ListingPhotoDeleteManyArgs} args - Arguments to filter ListingPhotos to delete.
     * @example
     * // Delete a few ListingPhotos
     * const { count } = await prisma.listingPhoto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingPhotoDeleteManyArgs>(args?: SelectSubset<T, ListingPhotoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingPhotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingPhotos
     * const listingPhoto = await prisma.listingPhoto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingPhotoUpdateManyArgs>(args: SelectSubset<T, ListingPhotoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingPhotos and returns the data updated in the database.
     * @param {ListingPhotoUpdateManyAndReturnArgs} args - Arguments to update many ListingPhotos.
     * @example
     * // Update many ListingPhotos
     * const listingPhoto = await prisma.listingPhoto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingPhotos and only return the `id`
     * const listingPhotoWithIdOnly = await prisma.listingPhoto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingPhotoUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingPhotoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingPhoto.
     * @param {ListingPhotoUpsertArgs} args - Arguments to update or create a ListingPhoto.
     * @example
     * // Update or create a ListingPhoto
     * const listingPhoto = await prisma.listingPhoto.upsert({
     *   create: {
     *     // ... data to create a ListingPhoto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingPhoto we want to update
     *   }
     * })
     */
    upsert<T extends ListingPhotoUpsertArgs>(args: SelectSubset<T, ListingPhotoUpsertArgs<ExtArgs>>): Prisma__ListingPhotoClient<$Result.GetResult<Prisma.$ListingPhotoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingPhotos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoCountArgs} args - Arguments to filter ListingPhotos to count.
     * @example
     * // Count the number of ListingPhotos
     * const count = await prisma.listingPhoto.count({
     *   where: {
     *     // ... the filter for the ListingPhotos we want to count
     *   }
     * })
    **/
    count<T extends ListingPhotoCountArgs>(
      args?: Subset<T, ListingPhotoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingPhotoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingPhoto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingPhotoAggregateArgs>(args: Subset<T, ListingPhotoAggregateArgs>): Prisma.PrismaPromise<GetListingPhotoAggregateType<T>>

    /**
     * Group by ListingPhoto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingPhotoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingPhotoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingPhotoGroupByArgs['orderBy'] }
        : { orderBy?: ListingPhotoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingPhotoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingPhotoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingPhoto model
   */
  readonly fields: ListingPhotoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingPhoto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingPhotoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingPhoto model
   */
  interface ListingPhotoFieldRefs {
    readonly id: FieldRef<"ListingPhoto", 'String'>
    readonly listingId: FieldRef<"ListingPhoto", 'String'>
    readonly mlsUrl: FieldRef<"ListingPhoto", 'String'>
    readonly s3Url: FieldRef<"ListingPhoto", 'String'>
    readonly order: FieldRef<"ListingPhoto", 'Int'>
    readonly lastChecked: FieldRef<"ListingPhoto", 'DateTime'>
    readonly isActive: FieldRef<"ListingPhoto", 'Boolean'>
    readonly createdAt: FieldRef<"ListingPhoto", 'DateTime'>
    readonly updatedAt: FieldRef<"ListingPhoto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListingPhoto findUnique
   */
  export type ListingPhotoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter, which ListingPhoto to fetch.
     */
    where: ListingPhotoWhereUniqueInput
  }

  /**
   * ListingPhoto findUniqueOrThrow
   */
  export type ListingPhotoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter, which ListingPhoto to fetch.
     */
    where: ListingPhotoWhereUniqueInput
  }

  /**
   * ListingPhoto findFirst
   */
  export type ListingPhotoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter, which ListingPhoto to fetch.
     */
    where?: ListingPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingPhotos to fetch.
     */
    orderBy?: ListingPhotoOrderByWithRelationInput | ListingPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingPhotos.
     */
    cursor?: ListingPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingPhotos.
     */
    distinct?: ListingPhotoScalarFieldEnum | ListingPhotoScalarFieldEnum[]
  }

  /**
   * ListingPhoto findFirstOrThrow
   */
  export type ListingPhotoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter, which ListingPhoto to fetch.
     */
    where?: ListingPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingPhotos to fetch.
     */
    orderBy?: ListingPhotoOrderByWithRelationInput | ListingPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingPhotos.
     */
    cursor?: ListingPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingPhotos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingPhotos.
     */
    distinct?: ListingPhotoScalarFieldEnum | ListingPhotoScalarFieldEnum[]
  }

  /**
   * ListingPhoto findMany
   */
  export type ListingPhotoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter, which ListingPhotos to fetch.
     */
    where?: ListingPhotoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingPhotos to fetch.
     */
    orderBy?: ListingPhotoOrderByWithRelationInput | ListingPhotoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingPhotos.
     */
    cursor?: ListingPhotoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingPhotos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingPhotos.
     */
    skip?: number
    distinct?: ListingPhotoScalarFieldEnum | ListingPhotoScalarFieldEnum[]
  }

  /**
   * ListingPhoto create
   */
  export type ListingPhotoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingPhoto.
     */
    data: XOR<ListingPhotoCreateInput, ListingPhotoUncheckedCreateInput>
  }

  /**
   * ListingPhoto createMany
   */
  export type ListingPhotoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingPhotos.
     */
    data: ListingPhotoCreateManyInput | ListingPhotoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingPhoto createManyAndReturn
   */
  export type ListingPhotoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * The data used to create many ListingPhotos.
     */
    data: ListingPhotoCreateManyInput | ListingPhotoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingPhoto update
   */
  export type ListingPhotoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingPhoto.
     */
    data: XOR<ListingPhotoUpdateInput, ListingPhotoUncheckedUpdateInput>
    /**
     * Choose, which ListingPhoto to update.
     */
    where: ListingPhotoWhereUniqueInput
  }

  /**
   * ListingPhoto updateMany
   */
  export type ListingPhotoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingPhotos.
     */
    data: XOR<ListingPhotoUpdateManyMutationInput, ListingPhotoUncheckedUpdateManyInput>
    /**
     * Filter which ListingPhotos to update
     */
    where?: ListingPhotoWhereInput
    /**
     * Limit how many ListingPhotos to update.
     */
    limit?: number
  }

  /**
   * ListingPhoto updateManyAndReturn
   */
  export type ListingPhotoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * The data used to update ListingPhotos.
     */
    data: XOR<ListingPhotoUpdateManyMutationInput, ListingPhotoUncheckedUpdateManyInput>
    /**
     * Filter which ListingPhotos to update
     */
    where?: ListingPhotoWhereInput
    /**
     * Limit how many ListingPhotos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingPhoto upsert
   */
  export type ListingPhotoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingPhoto to update in case it exists.
     */
    where: ListingPhotoWhereUniqueInput
    /**
     * In case the ListingPhoto found by the `where` argument doesn't exist, create a new ListingPhoto with this data.
     */
    create: XOR<ListingPhotoCreateInput, ListingPhotoUncheckedCreateInput>
    /**
     * In case the ListingPhoto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingPhotoUpdateInput, ListingPhotoUncheckedUpdateInput>
  }

  /**
   * ListingPhoto delete
   */
  export type ListingPhotoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
    /**
     * Filter which ListingPhoto to delete.
     */
    where: ListingPhotoWhereUniqueInput
  }

  /**
   * ListingPhoto deleteMany
   */
  export type ListingPhotoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingPhotos to delete
     */
    where?: ListingPhotoWhereInput
    /**
     * Limit how many ListingPhotos to delete.
     */
    limit?: number
  }

  /**
   * ListingPhoto without action
   */
  export type ListingPhotoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingPhoto
     */
    select?: ListingPhotoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingPhoto
     */
    omit?: ListingPhotoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingPhotoInclude<ExtArgs> | null
  }


  /**
   * Model ListingReport
   */

  export type AggregateListingReport = {
    _count: ListingReportCountAggregateOutputType | null
    _min: ListingReportMinAggregateOutputType | null
    _max: ListingReportMaxAggregateOutputType | null
  }

  export type ListingReportMinAggregateOutputType = {
    id: string | null
    listingId: string | null
    userId: string | null
    reporterType: $Enums.ReporterType | null
    reason: $Enums.ListingReportReason | null
    details: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ListingReportMaxAggregateOutputType = {
    id: string | null
    listingId: string | null
    userId: string | null
    reporterType: $Enums.ReporterType | null
    reason: $Enums.ListingReportReason | null
    details: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ListingReportCountAggregateOutputType = {
    id: number
    listingId: number
    userId: number
    reporterType: number
    reason: number
    details: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ListingReportMinAggregateInputType = {
    id?: true
    listingId?: true
    userId?: true
    reporterType?: true
    reason?: true
    details?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ListingReportMaxAggregateInputType = {
    id?: true
    listingId?: true
    userId?: true
    reporterType?: true
    reason?: true
    details?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ListingReportCountAggregateInputType = {
    id?: true
    listingId?: true
    userId?: true
    reporterType?: true
    reason?: true
    details?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ListingReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingReport to aggregate.
     */
    where?: ListingReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingReports to fetch.
     */
    orderBy?: ListingReportOrderByWithRelationInput | ListingReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ListingReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ListingReports
    **/
    _count?: true | ListingReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListingReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListingReportMaxAggregateInputType
  }

  export type GetListingReportAggregateType<T extends ListingReportAggregateArgs> = {
        [P in keyof T & keyof AggregateListingReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateListingReport[P]>
      : GetScalarType<T[P], AggregateListingReport[P]>
  }




  export type ListingReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ListingReportWhereInput
    orderBy?: ListingReportOrderByWithAggregationInput | ListingReportOrderByWithAggregationInput[]
    by: ListingReportScalarFieldEnum[] | ListingReportScalarFieldEnum
    having?: ListingReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListingReportCountAggregateInputType | true
    _min?: ListingReportMinAggregateInputType
    _max?: ListingReportMaxAggregateInputType
  }

  export type ListingReportGroupByOutputType = {
    id: string
    listingId: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details: string | null
    status: string
    createdAt: Date
    updatedAt: Date
    _count: ListingReportCountAggregateOutputType | null
    _min: ListingReportMinAggregateOutputType | null
    _max: ListingReportMaxAggregateOutputType | null
  }

  type GetListingReportGroupByPayload<T extends ListingReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ListingReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListingReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListingReportGroupByOutputType[P]>
            : GetScalarType<T[P], ListingReportGroupByOutputType[P]>
        }
      >
    >


  export type ListingReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    userId?: boolean
    reporterType?: boolean
    reason?: boolean
    details?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingReport"]>

  export type ListingReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    userId?: boolean
    reporterType?: boolean
    reason?: boolean
    details?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingReport"]>

  export type ListingReportSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    listingId?: boolean
    userId?: boolean
    reporterType?: boolean
    reason?: boolean
    details?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["listingReport"]>

  export type ListingReportSelectScalar = {
    id?: boolean
    listingId?: boolean
    userId?: boolean
    reporterType?: boolean
    reason?: boolean
    details?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ListingReportOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "listingId" | "userId" | "reporterType" | "reason" | "details" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["listingReport"]>
  export type ListingReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }
  export type ListingReportIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | ListingDefaultArgs<ExtArgs>
  }

  export type $ListingReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ListingReport"
    objects: {
      Listing: Prisma.$ListingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      listingId: string
      userId: string
      reporterType: $Enums.ReporterType
      reason: $Enums.ListingReportReason
      details: string | null
      status: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["listingReport"]>
    composites: {}
  }

  type ListingReportGetPayload<S extends boolean | null | undefined | ListingReportDefaultArgs> = $Result.GetResult<Prisma.$ListingReportPayload, S>

  type ListingReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ListingReportFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ListingReportCountAggregateInputType | true
    }

  export interface ListingReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ListingReport'], meta: { name: 'ListingReport' } }
    /**
     * Find zero or one ListingReport that matches the filter.
     * @param {ListingReportFindUniqueArgs} args - Arguments to find a ListingReport
     * @example
     * // Get one ListingReport
     * const listingReport = await prisma.listingReport.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ListingReportFindUniqueArgs>(args: SelectSubset<T, ListingReportFindUniqueArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ListingReport that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ListingReportFindUniqueOrThrowArgs} args - Arguments to find a ListingReport
     * @example
     * // Get one ListingReport
     * const listingReport = await prisma.listingReport.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ListingReportFindUniqueOrThrowArgs>(args: SelectSubset<T, ListingReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingReport that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportFindFirstArgs} args - Arguments to find a ListingReport
     * @example
     * // Get one ListingReport
     * const listingReport = await prisma.listingReport.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ListingReportFindFirstArgs>(args?: SelectSubset<T, ListingReportFindFirstArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ListingReport that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportFindFirstOrThrowArgs} args - Arguments to find a ListingReport
     * @example
     * // Get one ListingReport
     * const listingReport = await prisma.listingReport.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ListingReportFindFirstOrThrowArgs>(args?: SelectSubset<T, ListingReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ListingReports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ListingReports
     * const listingReports = await prisma.listingReport.findMany()
     * 
     * // Get first 10 ListingReports
     * const listingReports = await prisma.listingReport.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const listingReportWithIdOnly = await prisma.listingReport.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ListingReportFindManyArgs>(args?: SelectSubset<T, ListingReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ListingReport.
     * @param {ListingReportCreateArgs} args - Arguments to create a ListingReport.
     * @example
     * // Create one ListingReport
     * const ListingReport = await prisma.listingReport.create({
     *   data: {
     *     // ... data to create a ListingReport
     *   }
     * })
     * 
     */
    create<T extends ListingReportCreateArgs>(args: SelectSubset<T, ListingReportCreateArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ListingReports.
     * @param {ListingReportCreateManyArgs} args - Arguments to create many ListingReports.
     * @example
     * // Create many ListingReports
     * const listingReport = await prisma.listingReport.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ListingReportCreateManyArgs>(args?: SelectSubset<T, ListingReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ListingReports and returns the data saved in the database.
     * @param {ListingReportCreateManyAndReturnArgs} args - Arguments to create many ListingReports.
     * @example
     * // Create many ListingReports
     * const listingReport = await prisma.listingReport.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ListingReports and only return the `id`
     * const listingReportWithIdOnly = await prisma.listingReport.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ListingReportCreateManyAndReturnArgs>(args?: SelectSubset<T, ListingReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ListingReport.
     * @param {ListingReportDeleteArgs} args - Arguments to delete one ListingReport.
     * @example
     * // Delete one ListingReport
     * const ListingReport = await prisma.listingReport.delete({
     *   where: {
     *     // ... filter to delete one ListingReport
     *   }
     * })
     * 
     */
    delete<T extends ListingReportDeleteArgs>(args: SelectSubset<T, ListingReportDeleteArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ListingReport.
     * @param {ListingReportUpdateArgs} args - Arguments to update one ListingReport.
     * @example
     * // Update one ListingReport
     * const listingReport = await prisma.listingReport.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ListingReportUpdateArgs>(args: SelectSubset<T, ListingReportUpdateArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ListingReports.
     * @param {ListingReportDeleteManyArgs} args - Arguments to filter ListingReports to delete.
     * @example
     * // Delete a few ListingReports
     * const { count } = await prisma.listingReport.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ListingReportDeleteManyArgs>(args?: SelectSubset<T, ListingReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ListingReports
     * const listingReport = await prisma.listingReport.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ListingReportUpdateManyArgs>(args: SelectSubset<T, ListingReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ListingReports and returns the data updated in the database.
     * @param {ListingReportUpdateManyAndReturnArgs} args - Arguments to update many ListingReports.
     * @example
     * // Update many ListingReports
     * const listingReport = await prisma.listingReport.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ListingReports and only return the `id`
     * const listingReportWithIdOnly = await prisma.listingReport.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ListingReportUpdateManyAndReturnArgs>(args: SelectSubset<T, ListingReportUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ListingReport.
     * @param {ListingReportUpsertArgs} args - Arguments to update or create a ListingReport.
     * @example
     * // Update or create a ListingReport
     * const listingReport = await prisma.listingReport.upsert({
     *   create: {
     *     // ... data to create a ListingReport
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ListingReport we want to update
     *   }
     * })
     */
    upsert<T extends ListingReportUpsertArgs>(args: SelectSubset<T, ListingReportUpsertArgs<ExtArgs>>): Prisma__ListingReportClient<$Result.GetResult<Prisma.$ListingReportPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ListingReports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportCountArgs} args - Arguments to filter ListingReports to count.
     * @example
     * // Count the number of ListingReports
     * const count = await prisma.listingReport.count({
     *   where: {
     *     // ... the filter for the ListingReports we want to count
     *   }
     * })
    **/
    count<T extends ListingReportCountArgs>(
      args?: Subset<T, ListingReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListingReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ListingReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListingReportAggregateArgs>(args: Subset<T, ListingReportAggregateArgs>): Prisma.PrismaPromise<GetListingReportAggregateType<T>>

    /**
     * Group by ListingReport.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListingReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListingReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListingReportGroupByArgs['orderBy'] }
        : { orderBy?: ListingReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListingReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListingReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ListingReport model
   */
  readonly fields: ListingReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ListingReport.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ListingReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Listing<T extends ListingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ListingDefaultArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ListingReport model
   */
  interface ListingReportFieldRefs {
    readonly id: FieldRef<"ListingReport", 'String'>
    readonly listingId: FieldRef<"ListingReport", 'String'>
    readonly userId: FieldRef<"ListingReport", 'String'>
    readonly reporterType: FieldRef<"ListingReport", 'ReporterType'>
    readonly reason: FieldRef<"ListingReport", 'ListingReportReason'>
    readonly details: FieldRef<"ListingReport", 'String'>
    readonly status: FieldRef<"ListingReport", 'String'>
    readonly createdAt: FieldRef<"ListingReport", 'DateTime'>
    readonly updatedAt: FieldRef<"ListingReport", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ListingReport findUnique
   */
  export type ListingReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter, which ListingReport to fetch.
     */
    where: ListingReportWhereUniqueInput
  }

  /**
   * ListingReport findUniqueOrThrow
   */
  export type ListingReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter, which ListingReport to fetch.
     */
    where: ListingReportWhereUniqueInput
  }

  /**
   * ListingReport findFirst
   */
  export type ListingReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter, which ListingReport to fetch.
     */
    where?: ListingReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingReports to fetch.
     */
    orderBy?: ListingReportOrderByWithRelationInput | ListingReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingReports.
     */
    cursor?: ListingReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingReports.
     */
    distinct?: ListingReportScalarFieldEnum | ListingReportScalarFieldEnum[]
  }

  /**
   * ListingReport findFirstOrThrow
   */
  export type ListingReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter, which ListingReport to fetch.
     */
    where?: ListingReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingReports to fetch.
     */
    orderBy?: ListingReportOrderByWithRelationInput | ListingReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ListingReports.
     */
    cursor?: ListingReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingReports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ListingReports.
     */
    distinct?: ListingReportScalarFieldEnum | ListingReportScalarFieldEnum[]
  }

  /**
   * ListingReport findMany
   */
  export type ListingReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter, which ListingReports to fetch.
     */
    where?: ListingReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ListingReports to fetch.
     */
    orderBy?: ListingReportOrderByWithRelationInput | ListingReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ListingReports.
     */
    cursor?: ListingReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ListingReports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ListingReports.
     */
    skip?: number
    distinct?: ListingReportScalarFieldEnum | ListingReportScalarFieldEnum[]
  }

  /**
   * ListingReport create
   */
  export type ListingReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * The data needed to create a ListingReport.
     */
    data: XOR<ListingReportCreateInput, ListingReportUncheckedCreateInput>
  }

  /**
   * ListingReport createMany
   */
  export type ListingReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ListingReports.
     */
    data: ListingReportCreateManyInput | ListingReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ListingReport createManyAndReturn
   */
  export type ListingReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * The data used to create many ListingReports.
     */
    data: ListingReportCreateManyInput | ListingReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingReport update
   */
  export type ListingReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * The data needed to update a ListingReport.
     */
    data: XOR<ListingReportUpdateInput, ListingReportUncheckedUpdateInput>
    /**
     * Choose, which ListingReport to update.
     */
    where: ListingReportWhereUniqueInput
  }

  /**
   * ListingReport updateMany
   */
  export type ListingReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ListingReports.
     */
    data: XOR<ListingReportUpdateManyMutationInput, ListingReportUncheckedUpdateManyInput>
    /**
     * Filter which ListingReports to update
     */
    where?: ListingReportWhereInput
    /**
     * Limit how many ListingReports to update.
     */
    limit?: number
  }

  /**
   * ListingReport updateManyAndReturn
   */
  export type ListingReportUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * The data used to update ListingReports.
     */
    data: XOR<ListingReportUpdateManyMutationInput, ListingReportUncheckedUpdateManyInput>
    /**
     * Filter which ListingReports to update
     */
    where?: ListingReportWhereInput
    /**
     * Limit how many ListingReports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ListingReport upsert
   */
  export type ListingReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * The filter to search for the ListingReport to update in case it exists.
     */
    where: ListingReportWhereUniqueInput
    /**
     * In case the ListingReport found by the `where` argument doesn't exist, create a new ListingReport with this data.
     */
    create: XOR<ListingReportCreateInput, ListingReportUncheckedCreateInput>
    /**
     * In case the ListingReport was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ListingReportUpdateInput, ListingReportUncheckedUpdateInput>
  }

  /**
   * ListingReport delete
   */
  export type ListingReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
    /**
     * Filter which ListingReport to delete.
     */
    where: ListingReportWhereUniqueInput
  }

  /**
   * ListingReport deleteMany
   */
  export type ListingReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ListingReports to delete
     */
    where?: ListingReportWhereInput
    /**
     * Limit how many ListingReports to delete.
     */
    limit?: number
  }

  /**
   * ListingReport without action
   */
  export type ListingReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ListingReport
     */
    select?: ListingReportSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ListingReport
     */
    omit?: ListingReportOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingReportInclude<ExtArgs> | null
  }


  /**
   * Model Loan
   */

  export type AggregateLoan = {
    _count: LoanCountAggregateOutputType | null
    _avg: LoanAvgAggregateOutputType | null
    _sum: LoanSumAggregateOutputType | null
    _min: LoanMinAggregateOutputType | null
    _max: LoanMaxAggregateOutputType | null
  }

  export type LoanAvgAggregateOutputType = {
    loanPosition: number | null
    initialAmount: Decimal | null
    remainingBalance: Decimal | null
    termYears: number | null
    interestRate: Decimal | null
    currentPeriod: number | null
    startingPeriod: number | null
    totalPayments: number | null
    monthlyPayment: Decimal | null
  }

  export type LoanSumAggregateOutputType = {
    loanPosition: number | null
    initialAmount: Decimal | null
    remainingBalance: Decimal | null
    termYears: number | null
    interestRate: Decimal | null
    currentPeriod: number | null
    startingPeriod: number | null
    totalPayments: number | null
    monthlyPayment: Decimal | null
  }

  export type LoanMinAggregateOutputType = {
    id: string | null
    propertyId: string | null
    loanPosition: number | null
    purpose: string | null
    loanType: $Enums.LoanType | null
    recordingDate: Date | null
    concurrent: boolean | null
    initialAmount: Decimal | null
    remainingBalance: Decimal | null
    termYears: number | null
    lenderName: string | null
    rateType: string | null
    interestRate: Decimal | null
    currentPeriod: number | null
    startingPeriod: number | null
    totalPayments: number | null
    maturityDate: Date | null
    monthlyPayment: Decimal | null
    ownerOccupied: boolean | null
    assumableMortgageId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    mlsInstanceId: string | null
    deletedAt: Date | null
    rawLoanDataId: string | null
    interestRateEstimated: boolean | null
    isAssumable: boolean | null
  }

  export type LoanMaxAggregateOutputType = {
    id: string | null
    propertyId: string | null
    loanPosition: number | null
    purpose: string | null
    loanType: $Enums.LoanType | null
    recordingDate: Date | null
    concurrent: boolean | null
    initialAmount: Decimal | null
    remainingBalance: Decimal | null
    termYears: number | null
    lenderName: string | null
    rateType: string | null
    interestRate: Decimal | null
    currentPeriod: number | null
    startingPeriod: number | null
    totalPayments: number | null
    maturityDate: Date | null
    monthlyPayment: Decimal | null
    ownerOccupied: boolean | null
    assumableMortgageId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    mlsInstanceId: string | null
    deletedAt: Date | null
    rawLoanDataId: string | null
    interestRateEstimated: boolean | null
    isAssumable: boolean | null
  }

  export type LoanCountAggregateOutputType = {
    id: number
    propertyId: number
    loanPosition: number
    purpose: number
    loanType: number
    recordingDate: number
    concurrent: number
    initialAmount: number
    remainingBalance: number
    termYears: number
    lenderName: number
    rateType: number
    interestRate: number
    currentPeriod: number
    startingPeriod: number
    totalPayments: number
    maturityDate: number
    monthlyPayment: number
    ownerOccupied: number
    assumableMortgageId: number
    createdAt: number
    updatedAt: number
    mlsInstanceId: number
    deletedAt: number
    rawLoanDataId: number
    interestRateEstimated: number
    isAssumable: number
    _all: number
  }


  export type LoanAvgAggregateInputType = {
    loanPosition?: true
    initialAmount?: true
    remainingBalance?: true
    termYears?: true
    interestRate?: true
    currentPeriod?: true
    startingPeriod?: true
    totalPayments?: true
    monthlyPayment?: true
  }

  export type LoanSumAggregateInputType = {
    loanPosition?: true
    initialAmount?: true
    remainingBalance?: true
    termYears?: true
    interestRate?: true
    currentPeriod?: true
    startingPeriod?: true
    totalPayments?: true
    monthlyPayment?: true
  }

  export type LoanMinAggregateInputType = {
    id?: true
    propertyId?: true
    loanPosition?: true
    purpose?: true
    loanType?: true
    recordingDate?: true
    concurrent?: true
    initialAmount?: true
    remainingBalance?: true
    termYears?: true
    lenderName?: true
    rateType?: true
    interestRate?: true
    currentPeriod?: true
    startingPeriod?: true
    totalPayments?: true
    maturityDate?: true
    monthlyPayment?: true
    ownerOccupied?: true
    assumableMortgageId?: true
    createdAt?: true
    updatedAt?: true
    mlsInstanceId?: true
    deletedAt?: true
    rawLoanDataId?: true
    interestRateEstimated?: true
    isAssumable?: true
  }

  export type LoanMaxAggregateInputType = {
    id?: true
    propertyId?: true
    loanPosition?: true
    purpose?: true
    loanType?: true
    recordingDate?: true
    concurrent?: true
    initialAmount?: true
    remainingBalance?: true
    termYears?: true
    lenderName?: true
    rateType?: true
    interestRate?: true
    currentPeriod?: true
    startingPeriod?: true
    totalPayments?: true
    maturityDate?: true
    monthlyPayment?: true
    ownerOccupied?: true
    assumableMortgageId?: true
    createdAt?: true
    updatedAt?: true
    mlsInstanceId?: true
    deletedAt?: true
    rawLoanDataId?: true
    interestRateEstimated?: true
    isAssumable?: true
  }

  export type LoanCountAggregateInputType = {
    id?: true
    propertyId?: true
    loanPosition?: true
    purpose?: true
    loanType?: true
    recordingDate?: true
    concurrent?: true
    initialAmount?: true
    remainingBalance?: true
    termYears?: true
    lenderName?: true
    rateType?: true
    interestRate?: true
    currentPeriod?: true
    startingPeriod?: true
    totalPayments?: true
    maturityDate?: true
    monthlyPayment?: true
    ownerOccupied?: true
    assumableMortgageId?: true
    createdAt?: true
    updatedAt?: true
    mlsInstanceId?: true
    deletedAt?: true
    rawLoanDataId?: true
    interestRateEstimated?: true
    isAssumable?: true
    _all?: true
  }

  export type LoanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Loan to aggregate.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Loans
    **/
    _count?: true | LoanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LoanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LoanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LoanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LoanMaxAggregateInputType
  }

  export type GetLoanAggregateType<T extends LoanAggregateArgs> = {
        [P in keyof T & keyof AggregateLoan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLoan[P]>
      : GetScalarType<T[P], AggregateLoan[P]>
  }




  export type LoanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithAggregationInput | LoanOrderByWithAggregationInput[]
    by: LoanScalarFieldEnum[] | LoanScalarFieldEnum
    having?: LoanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LoanCountAggregateInputType | true
    _avg?: LoanAvgAggregateInputType
    _sum?: LoanSumAggregateInputType
    _min?: LoanMinAggregateInputType
    _max?: LoanMaxAggregateInputType
  }

  export type LoanGroupByOutputType = {
    id: string
    propertyId: string
    loanPosition: number
    purpose: string | null
    loanType: $Enums.LoanType
    recordingDate: Date
    concurrent: boolean
    initialAmount: Decimal
    remainingBalance: Decimal | null
    termYears: number | null
    lenderName: string
    rateType: string | null
    interestRate: Decimal | null
    currentPeriod: number | null
    startingPeriod: number | null
    totalPayments: number | null
    maturityDate: Date | null
    monthlyPayment: Decimal | null
    ownerOccupied: boolean | null
    assumableMortgageId: string | null
    createdAt: Date
    updatedAt: Date
    mlsInstanceId: string | null
    deletedAt: Date | null
    rawLoanDataId: string | null
    interestRateEstimated: boolean | null
    isAssumable: boolean | null
    _count: LoanCountAggregateOutputType | null
    _avg: LoanAvgAggregateOutputType | null
    _sum: LoanSumAggregateOutputType | null
    _min: LoanMinAggregateOutputType | null
    _max: LoanMaxAggregateOutputType | null
  }

  type GetLoanGroupByPayload<T extends LoanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LoanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LoanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LoanGroupByOutputType[P]>
            : GetScalarType<T[P], LoanGroupByOutputType[P]>
        }
      >
    >


  export type LoanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    loanPosition?: boolean
    purpose?: boolean
    loanType?: boolean
    recordingDate?: boolean
    concurrent?: boolean
    initialAmount?: boolean
    remainingBalance?: boolean
    termYears?: boolean
    lenderName?: boolean
    rateType?: boolean
    interestRate?: boolean
    currentPeriod?: boolean
    startingPeriod?: boolean
    totalPayments?: boolean
    maturityDate?: boolean
    monthlyPayment?: boolean
    ownerOccupied?: boolean
    assumableMortgageId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    mlsInstanceId?: boolean
    deletedAt?: boolean
    rawLoanDataId?: boolean
    interestRateEstimated?: boolean
    isAssumable?: boolean
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["loan"]>

  export type LoanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    loanPosition?: boolean
    purpose?: boolean
    loanType?: boolean
    recordingDate?: boolean
    concurrent?: boolean
    initialAmount?: boolean
    remainingBalance?: boolean
    termYears?: boolean
    lenderName?: boolean
    rateType?: boolean
    interestRate?: boolean
    currentPeriod?: boolean
    startingPeriod?: boolean
    totalPayments?: boolean
    maturityDate?: boolean
    monthlyPayment?: boolean
    ownerOccupied?: boolean
    assumableMortgageId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    mlsInstanceId?: boolean
    deletedAt?: boolean
    rawLoanDataId?: boolean
    interestRateEstimated?: boolean
    isAssumable?: boolean
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["loan"]>

  export type LoanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    propertyId?: boolean
    loanPosition?: boolean
    purpose?: boolean
    loanType?: boolean
    recordingDate?: boolean
    concurrent?: boolean
    initialAmount?: boolean
    remainingBalance?: boolean
    termYears?: boolean
    lenderName?: boolean
    rateType?: boolean
    interestRate?: boolean
    currentPeriod?: boolean
    startingPeriod?: boolean
    totalPayments?: boolean
    maturityDate?: boolean
    monthlyPayment?: boolean
    ownerOccupied?: boolean
    assumableMortgageId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    mlsInstanceId?: boolean
    deletedAt?: boolean
    rawLoanDataId?: boolean
    interestRateEstimated?: boolean
    isAssumable?: boolean
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["loan"]>

  export type LoanSelectScalar = {
    id?: boolean
    propertyId?: boolean
    loanPosition?: boolean
    purpose?: boolean
    loanType?: boolean
    recordingDate?: boolean
    concurrent?: boolean
    initialAmount?: boolean
    remainingBalance?: boolean
    termYears?: boolean
    lenderName?: boolean
    rateType?: boolean
    interestRate?: boolean
    currentPeriod?: boolean
    startingPeriod?: boolean
    totalPayments?: boolean
    maturityDate?: boolean
    monthlyPayment?: boolean
    ownerOccupied?: boolean
    assumableMortgageId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    mlsInstanceId?: boolean
    deletedAt?: boolean
    rawLoanDataId?: boolean
    interestRateEstimated?: boolean
    isAssumable?: boolean
  }

  export type LoanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "propertyId" | "loanPosition" | "purpose" | "loanType" | "recordingDate" | "concurrent" | "initialAmount" | "remainingBalance" | "termYears" | "lenderName" | "rateType" | "interestRate" | "currentPeriod" | "startingPeriod" | "totalPayments" | "maturityDate" | "monthlyPayment" | "ownerOccupied" | "assumableMortgageId" | "createdAt" | "updatedAt" | "mlsInstanceId" | "deletedAt" | "rawLoanDataId" | "interestRateEstimated" | "isAssumable", ExtArgs["result"]["loan"]>
  export type LoanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }
  export type LoanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }
  export type LoanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    AssumableMortgage?: boolean | Loan$AssumableMortgageArgs<ExtArgs>
    PropertyRadar?: boolean | PropertyRadarDefaultArgs<ExtArgs>
  }

  export type $LoanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Loan"
    objects: {
      AssumableMortgage: Prisma.$AssumableMortgagePayload<ExtArgs> | null
      PropertyRadar: Prisma.$PropertyRadarPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      propertyId: string
      loanPosition: number
      purpose: string | null
      loanType: $Enums.LoanType
      recordingDate: Date
      concurrent: boolean
      initialAmount: Prisma.Decimal
      remainingBalance: Prisma.Decimal | null
      termYears: number | null
      lenderName: string
      rateType: string | null
      interestRate: Prisma.Decimal | null
      currentPeriod: number | null
      startingPeriod: number | null
      totalPayments: number | null
      maturityDate: Date | null
      monthlyPayment: Prisma.Decimal | null
      ownerOccupied: boolean | null
      assumableMortgageId: string | null
      createdAt: Date
      updatedAt: Date
      mlsInstanceId: string | null
      deletedAt: Date | null
      rawLoanDataId: string | null
      interestRateEstimated: boolean | null
      isAssumable: boolean | null
    }, ExtArgs["result"]["loan"]>
    composites: {}
  }

  type LoanGetPayload<S extends boolean | null | undefined | LoanDefaultArgs> = $Result.GetResult<Prisma.$LoanPayload, S>

  type LoanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LoanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LoanCountAggregateInputType | true
    }

  export interface LoanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Loan'], meta: { name: 'Loan' } }
    /**
     * Find zero or one Loan that matches the filter.
     * @param {LoanFindUniqueArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LoanFindUniqueArgs>(args: SelectSubset<T, LoanFindUniqueArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Loan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LoanFindUniqueOrThrowArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LoanFindUniqueOrThrowArgs>(args: SelectSubset<T, LoanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Loan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindFirstArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LoanFindFirstArgs>(args?: SelectSubset<T, LoanFindFirstArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Loan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindFirstOrThrowArgs} args - Arguments to find a Loan
     * @example
     * // Get one Loan
     * const loan = await prisma.loan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LoanFindFirstOrThrowArgs>(args?: SelectSubset<T, LoanFindFirstOrThrowArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Loans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Loans
     * const loans = await prisma.loan.findMany()
     * 
     * // Get first 10 Loans
     * const loans = await prisma.loan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const loanWithIdOnly = await prisma.loan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LoanFindManyArgs>(args?: SelectSubset<T, LoanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Loan.
     * @param {LoanCreateArgs} args - Arguments to create a Loan.
     * @example
     * // Create one Loan
     * const Loan = await prisma.loan.create({
     *   data: {
     *     // ... data to create a Loan
     *   }
     * })
     * 
     */
    create<T extends LoanCreateArgs>(args: SelectSubset<T, LoanCreateArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Loans.
     * @param {LoanCreateManyArgs} args - Arguments to create many Loans.
     * @example
     * // Create many Loans
     * const loan = await prisma.loan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LoanCreateManyArgs>(args?: SelectSubset<T, LoanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Loans and returns the data saved in the database.
     * @param {LoanCreateManyAndReturnArgs} args - Arguments to create many Loans.
     * @example
     * // Create many Loans
     * const loan = await prisma.loan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Loans and only return the `id`
     * const loanWithIdOnly = await prisma.loan.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LoanCreateManyAndReturnArgs>(args?: SelectSubset<T, LoanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Loan.
     * @param {LoanDeleteArgs} args - Arguments to delete one Loan.
     * @example
     * // Delete one Loan
     * const Loan = await prisma.loan.delete({
     *   where: {
     *     // ... filter to delete one Loan
     *   }
     * })
     * 
     */
    delete<T extends LoanDeleteArgs>(args: SelectSubset<T, LoanDeleteArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Loan.
     * @param {LoanUpdateArgs} args - Arguments to update one Loan.
     * @example
     * // Update one Loan
     * const loan = await prisma.loan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LoanUpdateArgs>(args: SelectSubset<T, LoanUpdateArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Loans.
     * @param {LoanDeleteManyArgs} args - Arguments to filter Loans to delete.
     * @example
     * // Delete a few Loans
     * const { count } = await prisma.loan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LoanDeleteManyArgs>(args?: SelectSubset<T, LoanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Loans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Loans
     * const loan = await prisma.loan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LoanUpdateManyArgs>(args: SelectSubset<T, LoanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Loans and returns the data updated in the database.
     * @param {LoanUpdateManyAndReturnArgs} args - Arguments to update many Loans.
     * @example
     * // Update many Loans
     * const loan = await prisma.loan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Loans and only return the `id`
     * const loanWithIdOnly = await prisma.loan.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LoanUpdateManyAndReturnArgs>(args: SelectSubset<T, LoanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Loan.
     * @param {LoanUpsertArgs} args - Arguments to update or create a Loan.
     * @example
     * // Update or create a Loan
     * const loan = await prisma.loan.upsert({
     *   create: {
     *     // ... data to create a Loan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Loan we want to update
     *   }
     * })
     */
    upsert<T extends LoanUpsertArgs>(args: SelectSubset<T, LoanUpsertArgs<ExtArgs>>): Prisma__LoanClient<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Loans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanCountArgs} args - Arguments to filter Loans to count.
     * @example
     * // Count the number of Loans
     * const count = await prisma.loan.count({
     *   where: {
     *     // ... the filter for the Loans we want to count
     *   }
     * })
    **/
    count<T extends LoanCountArgs>(
      args?: Subset<T, LoanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LoanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Loan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LoanAggregateArgs>(args: Subset<T, LoanAggregateArgs>): Prisma.PrismaPromise<GetLoanAggregateType<T>>

    /**
     * Group by Loan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LoanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LoanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LoanGroupByArgs['orderBy'] }
        : { orderBy?: LoanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LoanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLoanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Loan model
   */
  readonly fields: LoanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Loan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LoanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    AssumableMortgage<T extends Loan$AssumableMortgageArgs<ExtArgs> = {}>(args?: Subset<T, Loan$AssumableMortgageArgs<ExtArgs>>): Prisma__AssumableMortgageClient<$Result.GetResult<Prisma.$AssumableMortgagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    PropertyRadar<T extends PropertyRadarDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PropertyRadarDefaultArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Loan model
   */
  interface LoanFieldRefs {
    readonly id: FieldRef<"Loan", 'String'>
    readonly propertyId: FieldRef<"Loan", 'String'>
    readonly loanPosition: FieldRef<"Loan", 'Int'>
    readonly purpose: FieldRef<"Loan", 'String'>
    readonly loanType: FieldRef<"Loan", 'LoanType'>
    readonly recordingDate: FieldRef<"Loan", 'DateTime'>
    readonly concurrent: FieldRef<"Loan", 'Boolean'>
    readonly initialAmount: FieldRef<"Loan", 'Decimal'>
    readonly remainingBalance: FieldRef<"Loan", 'Decimal'>
    readonly termYears: FieldRef<"Loan", 'Int'>
    readonly lenderName: FieldRef<"Loan", 'String'>
    readonly rateType: FieldRef<"Loan", 'String'>
    readonly interestRate: FieldRef<"Loan", 'Decimal'>
    readonly currentPeriod: FieldRef<"Loan", 'Int'>
    readonly startingPeriod: FieldRef<"Loan", 'Int'>
    readonly totalPayments: FieldRef<"Loan", 'Int'>
    readonly maturityDate: FieldRef<"Loan", 'DateTime'>
    readonly monthlyPayment: FieldRef<"Loan", 'Decimal'>
    readonly ownerOccupied: FieldRef<"Loan", 'Boolean'>
    readonly assumableMortgageId: FieldRef<"Loan", 'String'>
    readonly createdAt: FieldRef<"Loan", 'DateTime'>
    readonly updatedAt: FieldRef<"Loan", 'DateTime'>
    readonly mlsInstanceId: FieldRef<"Loan", 'String'>
    readonly deletedAt: FieldRef<"Loan", 'DateTime'>
    readonly rawLoanDataId: FieldRef<"Loan", 'String'>
    readonly interestRateEstimated: FieldRef<"Loan", 'Boolean'>
    readonly isAssumable: FieldRef<"Loan", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Loan findUnique
   */
  export type LoanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where: LoanWhereUniqueInput
  }

  /**
   * Loan findUniqueOrThrow
   */
  export type LoanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where: LoanWhereUniqueInput
  }

  /**
   * Loan findFirst
   */
  export type LoanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loans.
     */
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }

  /**
   * Loan findFirstOrThrow
   */
  export type LoanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loan to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Loans.
     */
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }

  /**
   * Loan findMany
   */
  export type LoanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter, which Loans to fetch.
     */
    where?: LoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Loans to fetch.
     */
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Loans.
     */
    cursor?: LoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Loans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Loans.
     */
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }

  /**
   * Loan create
   */
  export type LoanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The data needed to create a Loan.
     */
    data: XOR<LoanCreateInput, LoanUncheckedCreateInput>
  }

  /**
   * Loan createMany
   */
  export type LoanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Loans.
     */
    data: LoanCreateManyInput | LoanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Loan createManyAndReturn
   */
  export type LoanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * The data used to create many Loans.
     */
    data: LoanCreateManyInput | LoanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Loan update
   */
  export type LoanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The data needed to update a Loan.
     */
    data: XOR<LoanUpdateInput, LoanUncheckedUpdateInput>
    /**
     * Choose, which Loan to update.
     */
    where: LoanWhereUniqueInput
  }

  /**
   * Loan updateMany
   */
  export type LoanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Loans.
     */
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyInput>
    /**
     * Filter which Loans to update
     */
    where?: LoanWhereInput
    /**
     * Limit how many Loans to update.
     */
    limit?: number
  }

  /**
   * Loan updateManyAndReturn
   */
  export type LoanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * The data used to update Loans.
     */
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyInput>
    /**
     * Filter which Loans to update
     */
    where?: LoanWhereInput
    /**
     * Limit how many Loans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Loan upsert
   */
  export type LoanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * The filter to search for the Loan to update in case it exists.
     */
    where: LoanWhereUniqueInput
    /**
     * In case the Loan found by the `where` argument doesn't exist, create a new Loan with this data.
     */
    create: XOR<LoanCreateInput, LoanUncheckedCreateInput>
    /**
     * In case the Loan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LoanUpdateInput, LoanUncheckedUpdateInput>
  }

  /**
   * Loan delete
   */
  export type LoanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    /**
     * Filter which Loan to delete.
     */
    where: LoanWhereUniqueInput
  }

  /**
   * Loan deleteMany
   */
  export type LoanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Loans to delete
     */
    where?: LoanWhereInput
    /**
     * Limit how many Loans to delete.
     */
    limit?: number
  }

  /**
   * Loan.AssumableMortgage
   */
  export type Loan$AssumableMortgageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssumableMortgage
     */
    select?: AssumableMortgageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssumableMortgage
     */
    omit?: AssumableMortgageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssumableMortgageInclude<ExtArgs> | null
    where?: AssumableMortgageWhereInput
  }

  /**
   * Loan without action
   */
  export type LoanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
  }


  /**
   * Model MlsInstanceDetails
   */

  export type AggregateMlsInstanceDetails = {
    _count: MlsInstanceDetailsCountAggregateOutputType | null
    _min: MlsInstanceDetailsMinAggregateOutputType | null
    _max: MlsInstanceDetailsMaxAggregateOutputType | null
  }

  export type MlsInstanceDetailsMinAggregateOutputType = {
    id: string | null
    instanceId: string | null
    acronym: string | null
    name: string | null
    mlsNumber: string | null
    logoUrl: string | null
    region: string | null
    state: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MlsInstanceDetailsMaxAggregateOutputType = {
    id: string | null
    instanceId: string | null
    acronym: string | null
    name: string | null
    mlsNumber: string | null
    logoUrl: string | null
    region: string | null
    state: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MlsInstanceDetailsCountAggregateOutputType = {
    id: number
    instanceId: number
    acronym: number
    name: number
    mlsNumber: number
    logoUrl: number
    region: number
    state: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MlsInstanceDetailsMinAggregateInputType = {
    id?: true
    instanceId?: true
    acronym?: true
    name?: true
    mlsNumber?: true
    logoUrl?: true
    region?: true
    state?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MlsInstanceDetailsMaxAggregateInputType = {
    id?: true
    instanceId?: true
    acronym?: true
    name?: true
    mlsNumber?: true
    logoUrl?: true
    region?: true
    state?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MlsInstanceDetailsCountAggregateInputType = {
    id?: true
    instanceId?: true
    acronym?: true
    name?: true
    mlsNumber?: true
    logoUrl?: true
    region?: true
    state?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MlsInstanceDetailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MlsInstanceDetails to aggregate.
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceDetails to fetch.
     */
    orderBy?: MlsInstanceDetailsOrderByWithRelationInput | MlsInstanceDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MlsInstanceDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MlsInstanceDetails
    **/
    _count?: true | MlsInstanceDetailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MlsInstanceDetailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MlsInstanceDetailsMaxAggregateInputType
  }

  export type GetMlsInstanceDetailsAggregateType<T extends MlsInstanceDetailsAggregateArgs> = {
        [P in keyof T & keyof AggregateMlsInstanceDetails]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMlsInstanceDetails[P]>
      : GetScalarType<T[P], AggregateMlsInstanceDetails[P]>
  }




  export type MlsInstanceDetailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MlsInstanceDetailsWhereInput
    orderBy?: MlsInstanceDetailsOrderByWithAggregationInput | MlsInstanceDetailsOrderByWithAggregationInput[]
    by: MlsInstanceDetailsScalarFieldEnum[] | MlsInstanceDetailsScalarFieldEnum
    having?: MlsInstanceDetailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MlsInstanceDetailsCountAggregateInputType | true
    _min?: MlsInstanceDetailsMinAggregateInputType
    _max?: MlsInstanceDetailsMaxAggregateInputType
  }

  export type MlsInstanceDetailsGroupByOutputType = {
    id: string
    instanceId: string
    acronym: string | null
    name: string
    mlsNumber: string | null
    logoUrl: string | null
    region: string | null
    state: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: MlsInstanceDetailsCountAggregateOutputType | null
    _min: MlsInstanceDetailsMinAggregateOutputType | null
    _max: MlsInstanceDetailsMaxAggregateOutputType | null
  }

  type GetMlsInstanceDetailsGroupByPayload<T extends MlsInstanceDetailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MlsInstanceDetailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MlsInstanceDetailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MlsInstanceDetailsGroupByOutputType[P]>
            : GetScalarType<T[P], MlsInstanceDetailsGroupByOutputType[P]>
        }
      >
    >


  export type MlsInstanceDetailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    instanceId?: boolean
    acronym?: boolean
    name?: boolean
    mlsNumber?: boolean
    logoUrl?: boolean
    region?: boolean
    state?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceDetails"]>

  export type MlsInstanceDetailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    instanceId?: boolean
    acronym?: boolean
    name?: boolean
    mlsNumber?: boolean
    logoUrl?: boolean
    region?: boolean
    state?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceDetails"]>

  export type MlsInstanceDetailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    instanceId?: boolean
    acronym?: boolean
    name?: boolean
    mlsNumber?: boolean
    logoUrl?: boolean
    region?: boolean
    state?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceDetails"]>

  export type MlsInstanceDetailsSelectScalar = {
    id?: boolean
    instanceId?: boolean
    acronym?: boolean
    name?: boolean
    mlsNumber?: boolean
    logoUrl?: boolean
    region?: boolean
    state?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MlsInstanceDetailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "instanceId" | "acronym" | "name" | "mlsNumber" | "logoUrl" | "region" | "state" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["mlsInstanceDetails"]>

  export type $MlsInstanceDetailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MlsInstanceDetails"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      instanceId: string
      acronym: string | null
      name: string
      mlsNumber: string | null
      logoUrl: string | null
      region: string | null
      state: string | null
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["mlsInstanceDetails"]>
    composites: {}
  }

  type MlsInstanceDetailsGetPayload<S extends boolean | null | undefined | MlsInstanceDetailsDefaultArgs> = $Result.GetResult<Prisma.$MlsInstanceDetailsPayload, S>

  type MlsInstanceDetailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MlsInstanceDetailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MlsInstanceDetailsCountAggregateInputType | true
    }

  export interface MlsInstanceDetailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MlsInstanceDetails'], meta: { name: 'MlsInstanceDetails' } }
    /**
     * Find zero or one MlsInstanceDetails that matches the filter.
     * @param {MlsInstanceDetailsFindUniqueArgs} args - Arguments to find a MlsInstanceDetails
     * @example
     * // Get one MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MlsInstanceDetailsFindUniqueArgs>(args: SelectSubset<T, MlsInstanceDetailsFindUniqueArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MlsInstanceDetails that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MlsInstanceDetailsFindUniqueOrThrowArgs} args - Arguments to find a MlsInstanceDetails
     * @example
     * // Get one MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MlsInstanceDetailsFindUniqueOrThrowArgs>(args: SelectSubset<T, MlsInstanceDetailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MlsInstanceDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsFindFirstArgs} args - Arguments to find a MlsInstanceDetails
     * @example
     * // Get one MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MlsInstanceDetailsFindFirstArgs>(args?: SelectSubset<T, MlsInstanceDetailsFindFirstArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MlsInstanceDetails that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsFindFirstOrThrowArgs} args - Arguments to find a MlsInstanceDetails
     * @example
     * // Get one MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MlsInstanceDetailsFindFirstOrThrowArgs>(args?: SelectSubset<T, MlsInstanceDetailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MlsInstanceDetails that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findMany()
     * 
     * // Get first 10 MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mlsInstanceDetailsWithIdOnly = await prisma.mlsInstanceDetails.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MlsInstanceDetailsFindManyArgs>(args?: SelectSubset<T, MlsInstanceDetailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MlsInstanceDetails.
     * @param {MlsInstanceDetailsCreateArgs} args - Arguments to create a MlsInstanceDetails.
     * @example
     * // Create one MlsInstanceDetails
     * const MlsInstanceDetails = await prisma.mlsInstanceDetails.create({
     *   data: {
     *     // ... data to create a MlsInstanceDetails
     *   }
     * })
     * 
     */
    create<T extends MlsInstanceDetailsCreateArgs>(args: SelectSubset<T, MlsInstanceDetailsCreateArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MlsInstanceDetails.
     * @param {MlsInstanceDetailsCreateManyArgs} args - Arguments to create many MlsInstanceDetails.
     * @example
     * // Create many MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MlsInstanceDetailsCreateManyArgs>(args?: SelectSubset<T, MlsInstanceDetailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MlsInstanceDetails and returns the data saved in the database.
     * @param {MlsInstanceDetailsCreateManyAndReturnArgs} args - Arguments to create many MlsInstanceDetails.
     * @example
     * // Create many MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MlsInstanceDetails and only return the `id`
     * const mlsInstanceDetailsWithIdOnly = await prisma.mlsInstanceDetails.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MlsInstanceDetailsCreateManyAndReturnArgs>(args?: SelectSubset<T, MlsInstanceDetailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MlsInstanceDetails.
     * @param {MlsInstanceDetailsDeleteArgs} args - Arguments to delete one MlsInstanceDetails.
     * @example
     * // Delete one MlsInstanceDetails
     * const MlsInstanceDetails = await prisma.mlsInstanceDetails.delete({
     *   where: {
     *     // ... filter to delete one MlsInstanceDetails
     *   }
     * })
     * 
     */
    delete<T extends MlsInstanceDetailsDeleteArgs>(args: SelectSubset<T, MlsInstanceDetailsDeleteArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MlsInstanceDetails.
     * @param {MlsInstanceDetailsUpdateArgs} args - Arguments to update one MlsInstanceDetails.
     * @example
     * // Update one MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MlsInstanceDetailsUpdateArgs>(args: SelectSubset<T, MlsInstanceDetailsUpdateArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MlsInstanceDetails.
     * @param {MlsInstanceDetailsDeleteManyArgs} args - Arguments to filter MlsInstanceDetails to delete.
     * @example
     * // Delete a few MlsInstanceDetails
     * const { count } = await prisma.mlsInstanceDetails.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MlsInstanceDetailsDeleteManyArgs>(args?: SelectSubset<T, MlsInstanceDetailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MlsInstanceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MlsInstanceDetailsUpdateManyArgs>(args: SelectSubset<T, MlsInstanceDetailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MlsInstanceDetails and returns the data updated in the database.
     * @param {MlsInstanceDetailsUpdateManyAndReturnArgs} args - Arguments to update many MlsInstanceDetails.
     * @example
     * // Update many MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MlsInstanceDetails and only return the `id`
     * const mlsInstanceDetailsWithIdOnly = await prisma.mlsInstanceDetails.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MlsInstanceDetailsUpdateManyAndReturnArgs>(args: SelectSubset<T, MlsInstanceDetailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MlsInstanceDetails.
     * @param {MlsInstanceDetailsUpsertArgs} args - Arguments to update or create a MlsInstanceDetails.
     * @example
     * // Update or create a MlsInstanceDetails
     * const mlsInstanceDetails = await prisma.mlsInstanceDetails.upsert({
     *   create: {
     *     // ... data to create a MlsInstanceDetails
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MlsInstanceDetails we want to update
     *   }
     * })
     */
    upsert<T extends MlsInstanceDetailsUpsertArgs>(args: SelectSubset<T, MlsInstanceDetailsUpsertArgs<ExtArgs>>): Prisma__MlsInstanceDetailsClient<$Result.GetResult<Prisma.$MlsInstanceDetailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MlsInstanceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsCountArgs} args - Arguments to filter MlsInstanceDetails to count.
     * @example
     * // Count the number of MlsInstanceDetails
     * const count = await prisma.mlsInstanceDetails.count({
     *   where: {
     *     // ... the filter for the MlsInstanceDetails we want to count
     *   }
     * })
    **/
    count<T extends MlsInstanceDetailsCountArgs>(
      args?: Subset<T, MlsInstanceDetailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MlsInstanceDetailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MlsInstanceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MlsInstanceDetailsAggregateArgs>(args: Subset<T, MlsInstanceDetailsAggregateArgs>): Prisma.PrismaPromise<GetMlsInstanceDetailsAggregateType<T>>

    /**
     * Group by MlsInstanceDetails.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceDetailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MlsInstanceDetailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MlsInstanceDetailsGroupByArgs['orderBy'] }
        : { orderBy?: MlsInstanceDetailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MlsInstanceDetailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMlsInstanceDetailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MlsInstanceDetails model
   */
  readonly fields: MlsInstanceDetailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MlsInstanceDetails.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MlsInstanceDetailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MlsInstanceDetails model
   */
  interface MlsInstanceDetailsFieldRefs {
    readonly id: FieldRef<"MlsInstanceDetails", 'String'>
    readonly instanceId: FieldRef<"MlsInstanceDetails", 'String'>
    readonly acronym: FieldRef<"MlsInstanceDetails", 'String'>
    readonly name: FieldRef<"MlsInstanceDetails", 'String'>
    readonly mlsNumber: FieldRef<"MlsInstanceDetails", 'String'>
    readonly logoUrl: FieldRef<"MlsInstanceDetails", 'String'>
    readonly region: FieldRef<"MlsInstanceDetails", 'String'>
    readonly state: FieldRef<"MlsInstanceDetails", 'String'>
    readonly description: FieldRef<"MlsInstanceDetails", 'String'>
    readonly createdAt: FieldRef<"MlsInstanceDetails", 'DateTime'>
    readonly updatedAt: FieldRef<"MlsInstanceDetails", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MlsInstanceDetails findUnique
   */
  export type MlsInstanceDetailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceDetails to fetch.
     */
    where: MlsInstanceDetailsWhereUniqueInput
  }

  /**
   * MlsInstanceDetails findUniqueOrThrow
   */
  export type MlsInstanceDetailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceDetails to fetch.
     */
    where: MlsInstanceDetailsWhereUniqueInput
  }

  /**
   * MlsInstanceDetails findFirst
   */
  export type MlsInstanceDetailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceDetails to fetch.
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceDetails to fetch.
     */
    orderBy?: MlsInstanceDetailsOrderByWithRelationInput | MlsInstanceDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MlsInstanceDetails.
     */
    cursor?: MlsInstanceDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MlsInstanceDetails.
     */
    distinct?: MlsInstanceDetailsScalarFieldEnum | MlsInstanceDetailsScalarFieldEnum[]
  }

  /**
   * MlsInstanceDetails findFirstOrThrow
   */
  export type MlsInstanceDetailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceDetails to fetch.
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceDetails to fetch.
     */
    orderBy?: MlsInstanceDetailsOrderByWithRelationInput | MlsInstanceDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MlsInstanceDetails.
     */
    cursor?: MlsInstanceDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceDetails.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MlsInstanceDetails.
     */
    distinct?: MlsInstanceDetailsScalarFieldEnum | MlsInstanceDetailsScalarFieldEnum[]
  }

  /**
   * MlsInstanceDetails findMany
   */
  export type MlsInstanceDetailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceDetails to fetch.
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceDetails to fetch.
     */
    orderBy?: MlsInstanceDetailsOrderByWithRelationInput | MlsInstanceDetailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MlsInstanceDetails.
     */
    cursor?: MlsInstanceDetailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceDetails from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceDetails.
     */
    skip?: number
    distinct?: MlsInstanceDetailsScalarFieldEnum | MlsInstanceDetailsScalarFieldEnum[]
  }

  /**
   * MlsInstanceDetails create
   */
  export type MlsInstanceDetailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * The data needed to create a MlsInstanceDetails.
     */
    data: XOR<MlsInstanceDetailsCreateInput, MlsInstanceDetailsUncheckedCreateInput>
  }

  /**
   * MlsInstanceDetails createMany
   */
  export type MlsInstanceDetailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MlsInstanceDetails.
     */
    data: MlsInstanceDetailsCreateManyInput | MlsInstanceDetailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MlsInstanceDetails createManyAndReturn
   */
  export type MlsInstanceDetailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * The data used to create many MlsInstanceDetails.
     */
    data: MlsInstanceDetailsCreateManyInput | MlsInstanceDetailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MlsInstanceDetails update
   */
  export type MlsInstanceDetailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * The data needed to update a MlsInstanceDetails.
     */
    data: XOR<MlsInstanceDetailsUpdateInput, MlsInstanceDetailsUncheckedUpdateInput>
    /**
     * Choose, which MlsInstanceDetails to update.
     */
    where: MlsInstanceDetailsWhereUniqueInput
  }

  /**
   * MlsInstanceDetails updateMany
   */
  export type MlsInstanceDetailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MlsInstanceDetails.
     */
    data: XOR<MlsInstanceDetailsUpdateManyMutationInput, MlsInstanceDetailsUncheckedUpdateManyInput>
    /**
     * Filter which MlsInstanceDetails to update
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * Limit how many MlsInstanceDetails to update.
     */
    limit?: number
  }

  /**
   * MlsInstanceDetails updateManyAndReturn
   */
  export type MlsInstanceDetailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * The data used to update MlsInstanceDetails.
     */
    data: XOR<MlsInstanceDetailsUpdateManyMutationInput, MlsInstanceDetailsUncheckedUpdateManyInput>
    /**
     * Filter which MlsInstanceDetails to update
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * Limit how many MlsInstanceDetails to update.
     */
    limit?: number
  }

  /**
   * MlsInstanceDetails upsert
   */
  export type MlsInstanceDetailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * The filter to search for the MlsInstanceDetails to update in case it exists.
     */
    where: MlsInstanceDetailsWhereUniqueInput
    /**
     * In case the MlsInstanceDetails found by the `where` argument doesn't exist, create a new MlsInstanceDetails with this data.
     */
    create: XOR<MlsInstanceDetailsCreateInput, MlsInstanceDetailsUncheckedCreateInput>
    /**
     * In case the MlsInstanceDetails was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MlsInstanceDetailsUpdateInput, MlsInstanceDetailsUncheckedUpdateInput>
  }

  /**
   * MlsInstanceDetails delete
   */
  export type MlsInstanceDetailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
    /**
     * Filter which MlsInstanceDetails to delete.
     */
    where: MlsInstanceDetailsWhereUniqueInput
  }

  /**
   * MlsInstanceDetails deleteMany
   */
  export type MlsInstanceDetailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MlsInstanceDetails to delete
     */
    where?: MlsInstanceDetailsWhereInput
    /**
     * Limit how many MlsInstanceDetails to delete.
     */
    limit?: number
  }

  /**
   * MlsInstanceDetails without action
   */
  export type MlsInstanceDetailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceDetails
     */
    select?: MlsInstanceDetailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceDetails
     */
    omit?: MlsInstanceDetailsOmit<ExtArgs> | null
  }


  /**
   * Model MlsInstanceVisibility
   */

  export type AggregateMlsInstanceVisibility = {
    _count: MlsInstanceVisibilityCountAggregateOutputType | null
    _min: MlsInstanceVisibilityMinAggregateOutputType | null
    _max: MlsInstanceVisibilityMaxAggregateOutputType | null
  }

  export type MlsInstanceVisibilityMinAggregateOutputType = {
    id: string | null
    mlsInstanceId: string | null
    isHidden: boolean | null
    reason: string | null
    hiddenAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MlsInstanceVisibilityMaxAggregateOutputType = {
    id: string | null
    mlsInstanceId: string | null
    isHidden: boolean | null
    reason: string | null
    hiddenAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MlsInstanceVisibilityCountAggregateOutputType = {
    id: number
    mlsInstanceId: number
    isHidden: number
    reason: number
    hiddenAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MlsInstanceVisibilityMinAggregateInputType = {
    id?: true
    mlsInstanceId?: true
    isHidden?: true
    reason?: true
    hiddenAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MlsInstanceVisibilityMaxAggregateInputType = {
    id?: true
    mlsInstanceId?: true
    isHidden?: true
    reason?: true
    hiddenAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MlsInstanceVisibilityCountAggregateInputType = {
    id?: true
    mlsInstanceId?: true
    isHidden?: true
    reason?: true
    hiddenAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MlsInstanceVisibilityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MlsInstanceVisibility to aggregate.
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceVisibilities to fetch.
     */
    orderBy?: MlsInstanceVisibilityOrderByWithRelationInput | MlsInstanceVisibilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MlsInstanceVisibilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceVisibilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceVisibilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MlsInstanceVisibilities
    **/
    _count?: true | MlsInstanceVisibilityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MlsInstanceVisibilityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MlsInstanceVisibilityMaxAggregateInputType
  }

  export type GetMlsInstanceVisibilityAggregateType<T extends MlsInstanceVisibilityAggregateArgs> = {
        [P in keyof T & keyof AggregateMlsInstanceVisibility]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMlsInstanceVisibility[P]>
      : GetScalarType<T[P], AggregateMlsInstanceVisibility[P]>
  }




  export type MlsInstanceVisibilityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MlsInstanceVisibilityWhereInput
    orderBy?: MlsInstanceVisibilityOrderByWithAggregationInput | MlsInstanceVisibilityOrderByWithAggregationInput[]
    by: MlsInstanceVisibilityScalarFieldEnum[] | MlsInstanceVisibilityScalarFieldEnum
    having?: MlsInstanceVisibilityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MlsInstanceVisibilityCountAggregateInputType | true
    _min?: MlsInstanceVisibilityMinAggregateInputType
    _max?: MlsInstanceVisibilityMaxAggregateInputType
  }

  export type MlsInstanceVisibilityGroupByOutputType = {
    id: string
    mlsInstanceId: string
    isHidden: boolean
    reason: string | null
    hiddenAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: MlsInstanceVisibilityCountAggregateOutputType | null
    _min: MlsInstanceVisibilityMinAggregateOutputType | null
    _max: MlsInstanceVisibilityMaxAggregateOutputType | null
  }

  type GetMlsInstanceVisibilityGroupByPayload<T extends MlsInstanceVisibilityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MlsInstanceVisibilityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MlsInstanceVisibilityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MlsInstanceVisibilityGroupByOutputType[P]>
            : GetScalarType<T[P], MlsInstanceVisibilityGroupByOutputType[P]>
        }
      >
    >


  export type MlsInstanceVisibilitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsInstanceId?: boolean
    isHidden?: boolean
    reason?: boolean
    hiddenAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceVisibility"]>

  export type MlsInstanceVisibilitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsInstanceId?: boolean
    isHidden?: boolean
    reason?: boolean
    hiddenAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceVisibility"]>

  export type MlsInstanceVisibilitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsInstanceId?: boolean
    isHidden?: boolean
    reason?: boolean
    hiddenAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["mlsInstanceVisibility"]>

  export type MlsInstanceVisibilitySelectScalar = {
    id?: boolean
    mlsInstanceId?: boolean
    isHidden?: boolean
    reason?: boolean
    hiddenAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MlsInstanceVisibilityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mlsInstanceId" | "isHidden" | "reason" | "hiddenAt" | "createdAt" | "updatedAt", ExtArgs["result"]["mlsInstanceVisibility"]>

  export type $MlsInstanceVisibilityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MlsInstanceVisibility"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mlsInstanceId: string
      isHidden: boolean
      reason: string | null
      hiddenAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["mlsInstanceVisibility"]>
    composites: {}
  }

  type MlsInstanceVisibilityGetPayload<S extends boolean | null | undefined | MlsInstanceVisibilityDefaultArgs> = $Result.GetResult<Prisma.$MlsInstanceVisibilityPayload, S>

  type MlsInstanceVisibilityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MlsInstanceVisibilityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MlsInstanceVisibilityCountAggregateInputType | true
    }

  export interface MlsInstanceVisibilityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MlsInstanceVisibility'], meta: { name: 'MlsInstanceVisibility' } }
    /**
     * Find zero or one MlsInstanceVisibility that matches the filter.
     * @param {MlsInstanceVisibilityFindUniqueArgs} args - Arguments to find a MlsInstanceVisibility
     * @example
     * // Get one MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MlsInstanceVisibilityFindUniqueArgs>(args: SelectSubset<T, MlsInstanceVisibilityFindUniqueArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MlsInstanceVisibility that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MlsInstanceVisibilityFindUniqueOrThrowArgs} args - Arguments to find a MlsInstanceVisibility
     * @example
     * // Get one MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MlsInstanceVisibilityFindUniqueOrThrowArgs>(args: SelectSubset<T, MlsInstanceVisibilityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MlsInstanceVisibility that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityFindFirstArgs} args - Arguments to find a MlsInstanceVisibility
     * @example
     * // Get one MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MlsInstanceVisibilityFindFirstArgs>(args?: SelectSubset<T, MlsInstanceVisibilityFindFirstArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MlsInstanceVisibility that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityFindFirstOrThrowArgs} args - Arguments to find a MlsInstanceVisibility
     * @example
     * // Get one MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MlsInstanceVisibilityFindFirstOrThrowArgs>(args?: SelectSubset<T, MlsInstanceVisibilityFindFirstOrThrowArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MlsInstanceVisibilities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MlsInstanceVisibilities
     * const mlsInstanceVisibilities = await prisma.mlsInstanceVisibility.findMany()
     * 
     * // Get first 10 MlsInstanceVisibilities
     * const mlsInstanceVisibilities = await prisma.mlsInstanceVisibility.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mlsInstanceVisibilityWithIdOnly = await prisma.mlsInstanceVisibility.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MlsInstanceVisibilityFindManyArgs>(args?: SelectSubset<T, MlsInstanceVisibilityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MlsInstanceVisibility.
     * @param {MlsInstanceVisibilityCreateArgs} args - Arguments to create a MlsInstanceVisibility.
     * @example
     * // Create one MlsInstanceVisibility
     * const MlsInstanceVisibility = await prisma.mlsInstanceVisibility.create({
     *   data: {
     *     // ... data to create a MlsInstanceVisibility
     *   }
     * })
     * 
     */
    create<T extends MlsInstanceVisibilityCreateArgs>(args: SelectSubset<T, MlsInstanceVisibilityCreateArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MlsInstanceVisibilities.
     * @param {MlsInstanceVisibilityCreateManyArgs} args - Arguments to create many MlsInstanceVisibilities.
     * @example
     * // Create many MlsInstanceVisibilities
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MlsInstanceVisibilityCreateManyArgs>(args?: SelectSubset<T, MlsInstanceVisibilityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MlsInstanceVisibilities and returns the data saved in the database.
     * @param {MlsInstanceVisibilityCreateManyAndReturnArgs} args - Arguments to create many MlsInstanceVisibilities.
     * @example
     * // Create many MlsInstanceVisibilities
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MlsInstanceVisibilities and only return the `id`
     * const mlsInstanceVisibilityWithIdOnly = await prisma.mlsInstanceVisibility.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MlsInstanceVisibilityCreateManyAndReturnArgs>(args?: SelectSubset<T, MlsInstanceVisibilityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MlsInstanceVisibility.
     * @param {MlsInstanceVisibilityDeleteArgs} args - Arguments to delete one MlsInstanceVisibility.
     * @example
     * // Delete one MlsInstanceVisibility
     * const MlsInstanceVisibility = await prisma.mlsInstanceVisibility.delete({
     *   where: {
     *     // ... filter to delete one MlsInstanceVisibility
     *   }
     * })
     * 
     */
    delete<T extends MlsInstanceVisibilityDeleteArgs>(args: SelectSubset<T, MlsInstanceVisibilityDeleteArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MlsInstanceVisibility.
     * @param {MlsInstanceVisibilityUpdateArgs} args - Arguments to update one MlsInstanceVisibility.
     * @example
     * // Update one MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MlsInstanceVisibilityUpdateArgs>(args: SelectSubset<T, MlsInstanceVisibilityUpdateArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MlsInstanceVisibilities.
     * @param {MlsInstanceVisibilityDeleteManyArgs} args - Arguments to filter MlsInstanceVisibilities to delete.
     * @example
     * // Delete a few MlsInstanceVisibilities
     * const { count } = await prisma.mlsInstanceVisibility.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MlsInstanceVisibilityDeleteManyArgs>(args?: SelectSubset<T, MlsInstanceVisibilityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MlsInstanceVisibilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MlsInstanceVisibilities
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MlsInstanceVisibilityUpdateManyArgs>(args: SelectSubset<T, MlsInstanceVisibilityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MlsInstanceVisibilities and returns the data updated in the database.
     * @param {MlsInstanceVisibilityUpdateManyAndReturnArgs} args - Arguments to update many MlsInstanceVisibilities.
     * @example
     * // Update many MlsInstanceVisibilities
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MlsInstanceVisibilities and only return the `id`
     * const mlsInstanceVisibilityWithIdOnly = await prisma.mlsInstanceVisibility.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MlsInstanceVisibilityUpdateManyAndReturnArgs>(args: SelectSubset<T, MlsInstanceVisibilityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MlsInstanceVisibility.
     * @param {MlsInstanceVisibilityUpsertArgs} args - Arguments to update or create a MlsInstanceVisibility.
     * @example
     * // Update or create a MlsInstanceVisibility
     * const mlsInstanceVisibility = await prisma.mlsInstanceVisibility.upsert({
     *   create: {
     *     // ... data to create a MlsInstanceVisibility
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MlsInstanceVisibility we want to update
     *   }
     * })
     */
    upsert<T extends MlsInstanceVisibilityUpsertArgs>(args: SelectSubset<T, MlsInstanceVisibilityUpsertArgs<ExtArgs>>): Prisma__MlsInstanceVisibilityClient<$Result.GetResult<Prisma.$MlsInstanceVisibilityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MlsInstanceVisibilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityCountArgs} args - Arguments to filter MlsInstanceVisibilities to count.
     * @example
     * // Count the number of MlsInstanceVisibilities
     * const count = await prisma.mlsInstanceVisibility.count({
     *   where: {
     *     // ... the filter for the MlsInstanceVisibilities we want to count
     *   }
     * })
    **/
    count<T extends MlsInstanceVisibilityCountArgs>(
      args?: Subset<T, MlsInstanceVisibilityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MlsInstanceVisibilityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MlsInstanceVisibility.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MlsInstanceVisibilityAggregateArgs>(args: Subset<T, MlsInstanceVisibilityAggregateArgs>): Prisma.PrismaPromise<GetMlsInstanceVisibilityAggregateType<T>>

    /**
     * Group by MlsInstanceVisibility.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MlsInstanceVisibilityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MlsInstanceVisibilityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MlsInstanceVisibilityGroupByArgs['orderBy'] }
        : { orderBy?: MlsInstanceVisibilityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MlsInstanceVisibilityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMlsInstanceVisibilityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MlsInstanceVisibility model
   */
  readonly fields: MlsInstanceVisibilityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MlsInstanceVisibility.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MlsInstanceVisibilityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MlsInstanceVisibility model
   */
  interface MlsInstanceVisibilityFieldRefs {
    readonly id: FieldRef<"MlsInstanceVisibility", 'String'>
    readonly mlsInstanceId: FieldRef<"MlsInstanceVisibility", 'String'>
    readonly isHidden: FieldRef<"MlsInstanceVisibility", 'Boolean'>
    readonly reason: FieldRef<"MlsInstanceVisibility", 'String'>
    readonly hiddenAt: FieldRef<"MlsInstanceVisibility", 'DateTime'>
    readonly createdAt: FieldRef<"MlsInstanceVisibility", 'DateTime'>
    readonly updatedAt: FieldRef<"MlsInstanceVisibility", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MlsInstanceVisibility findUnique
   */
  export type MlsInstanceVisibilityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceVisibility to fetch.
     */
    where: MlsInstanceVisibilityWhereUniqueInput
  }

  /**
   * MlsInstanceVisibility findUniqueOrThrow
   */
  export type MlsInstanceVisibilityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceVisibility to fetch.
     */
    where: MlsInstanceVisibilityWhereUniqueInput
  }

  /**
   * MlsInstanceVisibility findFirst
   */
  export type MlsInstanceVisibilityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceVisibility to fetch.
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceVisibilities to fetch.
     */
    orderBy?: MlsInstanceVisibilityOrderByWithRelationInput | MlsInstanceVisibilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MlsInstanceVisibilities.
     */
    cursor?: MlsInstanceVisibilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceVisibilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceVisibilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MlsInstanceVisibilities.
     */
    distinct?: MlsInstanceVisibilityScalarFieldEnum | MlsInstanceVisibilityScalarFieldEnum[]
  }

  /**
   * MlsInstanceVisibility findFirstOrThrow
   */
  export type MlsInstanceVisibilityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceVisibility to fetch.
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceVisibilities to fetch.
     */
    orderBy?: MlsInstanceVisibilityOrderByWithRelationInput | MlsInstanceVisibilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MlsInstanceVisibilities.
     */
    cursor?: MlsInstanceVisibilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceVisibilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceVisibilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MlsInstanceVisibilities.
     */
    distinct?: MlsInstanceVisibilityScalarFieldEnum | MlsInstanceVisibilityScalarFieldEnum[]
  }

  /**
   * MlsInstanceVisibility findMany
   */
  export type MlsInstanceVisibilityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter, which MlsInstanceVisibilities to fetch.
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MlsInstanceVisibilities to fetch.
     */
    orderBy?: MlsInstanceVisibilityOrderByWithRelationInput | MlsInstanceVisibilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MlsInstanceVisibilities.
     */
    cursor?: MlsInstanceVisibilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MlsInstanceVisibilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MlsInstanceVisibilities.
     */
    skip?: number
    distinct?: MlsInstanceVisibilityScalarFieldEnum | MlsInstanceVisibilityScalarFieldEnum[]
  }

  /**
   * MlsInstanceVisibility create
   */
  export type MlsInstanceVisibilityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * The data needed to create a MlsInstanceVisibility.
     */
    data: XOR<MlsInstanceVisibilityCreateInput, MlsInstanceVisibilityUncheckedCreateInput>
  }

  /**
   * MlsInstanceVisibility createMany
   */
  export type MlsInstanceVisibilityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MlsInstanceVisibilities.
     */
    data: MlsInstanceVisibilityCreateManyInput | MlsInstanceVisibilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MlsInstanceVisibility createManyAndReturn
   */
  export type MlsInstanceVisibilityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * The data used to create many MlsInstanceVisibilities.
     */
    data: MlsInstanceVisibilityCreateManyInput | MlsInstanceVisibilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MlsInstanceVisibility update
   */
  export type MlsInstanceVisibilityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * The data needed to update a MlsInstanceVisibility.
     */
    data: XOR<MlsInstanceVisibilityUpdateInput, MlsInstanceVisibilityUncheckedUpdateInput>
    /**
     * Choose, which MlsInstanceVisibility to update.
     */
    where: MlsInstanceVisibilityWhereUniqueInput
  }

  /**
   * MlsInstanceVisibility updateMany
   */
  export type MlsInstanceVisibilityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MlsInstanceVisibilities.
     */
    data: XOR<MlsInstanceVisibilityUpdateManyMutationInput, MlsInstanceVisibilityUncheckedUpdateManyInput>
    /**
     * Filter which MlsInstanceVisibilities to update
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * Limit how many MlsInstanceVisibilities to update.
     */
    limit?: number
  }

  /**
   * MlsInstanceVisibility updateManyAndReturn
   */
  export type MlsInstanceVisibilityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * The data used to update MlsInstanceVisibilities.
     */
    data: XOR<MlsInstanceVisibilityUpdateManyMutationInput, MlsInstanceVisibilityUncheckedUpdateManyInput>
    /**
     * Filter which MlsInstanceVisibilities to update
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * Limit how many MlsInstanceVisibilities to update.
     */
    limit?: number
  }

  /**
   * MlsInstanceVisibility upsert
   */
  export type MlsInstanceVisibilityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * The filter to search for the MlsInstanceVisibility to update in case it exists.
     */
    where: MlsInstanceVisibilityWhereUniqueInput
    /**
     * In case the MlsInstanceVisibility found by the `where` argument doesn't exist, create a new MlsInstanceVisibility with this data.
     */
    create: XOR<MlsInstanceVisibilityCreateInput, MlsInstanceVisibilityUncheckedCreateInput>
    /**
     * In case the MlsInstanceVisibility was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MlsInstanceVisibilityUpdateInput, MlsInstanceVisibilityUncheckedUpdateInput>
  }

  /**
   * MlsInstanceVisibility delete
   */
  export type MlsInstanceVisibilityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
    /**
     * Filter which MlsInstanceVisibility to delete.
     */
    where: MlsInstanceVisibilityWhereUniqueInput
  }

  /**
   * MlsInstanceVisibility deleteMany
   */
  export type MlsInstanceVisibilityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MlsInstanceVisibilities to delete
     */
    where?: MlsInstanceVisibilityWhereInput
    /**
     * Limit how many MlsInstanceVisibilities to delete.
     */
    limit?: number
  }

  /**
   * MlsInstanceVisibility without action
   */
  export type MlsInstanceVisibilityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MlsInstanceVisibility
     */
    select?: MlsInstanceVisibilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the MlsInstanceVisibility
     */
    omit?: MlsInstanceVisibilityOmit<ExtArgs> | null
  }


  /**
   * Model PropertyRadar
   */

  export type AggregatePropertyRadar = {
    _count: PropertyRadarCountAggregateOutputType | null
    _avg: PropertyRadarAvgAggregateOutputType | null
    _sum: PropertyRadarSumAggregateOutputType | null
    _min: PropertyRadarMinAggregateOutputType | null
    _max: PropertyRadarMaxAggregateOutputType | null
  }

  export type PropertyRadarAvgAggregateOutputType = {
    yearBuilt: number | null
    units: number | null
    annualTaxes: Decimal | null
    avm: Decimal | null
    availableEquity: Decimal | null
    cltv: number | null
    equityPercent: number | null
    lastTransferValue: Decimal | null
    lastTransferDownPayment: Decimal | null
    lastTransferDownPaymentPercent: number | null
  }

  export type PropertyRadarSumAggregateOutputType = {
    yearBuilt: number | null
    units: number | null
    annualTaxes: Decimal | null
    avm: Decimal | null
    availableEquity: Decimal | null
    cltv: number | null
    equityPercent: number | null
    lastTransferValue: Decimal | null
    lastTransferDownPayment: Decimal | null
    lastTransferDownPaymentPercent: number | null
  }

  export type PropertyRadarMinAggregateOutputType = {
    id: string | null
    parcelNumber: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    county: string | null
    propertyType: string | null
    yearBuilt: number | null
    units: number | null
    squareFeet: string | null
    annualTaxes: Decimal | null
    avm: Decimal | null
    availableEquity: Decimal | null
    cltv: number | null
    equityPercent: number | null
    ownerName1: string | null
    ownerName2: string | null
    ownerAddress: string | null
    ownerCity: string | null
    ownerState: string | null
    ownerZip: string | null
    lastTransferDate: Date | null
    lastTransferValue: Decimal | null
    lastTransferType: string | null
    lastTransferDownPayment: Decimal | null
    lastTransferDownPaymentPercent: number | null
    deletedAt: Date | null
    loanDataFetchedAt: Date | null
    denormalizedListingUnitNumber: string | null
    needsReview: boolean | null
    reviewReason: string | null
    unitNumber: string | null
    listingId: string | null
    rawLoanDataId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PropertyRadarMaxAggregateOutputType = {
    id: string | null
    parcelNumber: string | null
    address: string | null
    city: string | null
    state: string | null
    zipCode: string | null
    county: string | null
    propertyType: string | null
    yearBuilt: number | null
    units: number | null
    squareFeet: string | null
    annualTaxes: Decimal | null
    avm: Decimal | null
    availableEquity: Decimal | null
    cltv: number | null
    equityPercent: number | null
    ownerName1: string | null
    ownerName2: string | null
    ownerAddress: string | null
    ownerCity: string | null
    ownerState: string | null
    ownerZip: string | null
    lastTransferDate: Date | null
    lastTransferValue: Decimal | null
    lastTransferType: string | null
    lastTransferDownPayment: Decimal | null
    lastTransferDownPaymentPercent: number | null
    deletedAt: Date | null
    loanDataFetchedAt: Date | null
    denormalizedListingUnitNumber: string | null
    needsReview: boolean | null
    reviewReason: string | null
    unitNumber: string | null
    listingId: string | null
    rawLoanDataId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PropertyRadarCountAggregateOutputType = {
    id: number
    parcelNumber: number
    address: number
    city: number
    state: number
    zipCode: number
    county: number
    propertyType: number
    yearBuilt: number
    units: number
    squareFeet: number
    annualTaxes: number
    avm: number
    availableEquity: number
    cltv: number
    equityPercent: number
    ownerName1: number
    ownerName2: number
    ownerAddress: number
    ownerCity: number
    ownerState: number
    ownerZip: number
    lastTransferDate: number
    lastTransferValue: number
    lastTransferType: number
    lastTransferDownPayment: number
    lastTransferDownPaymentPercent: number
    deletedAt: number
    loanDataFetchedAt: number
    denormalizedListingUnitNumber: number
    needsReview: number
    reviewReason: number
    unitNumber: number
    listingId: number
    rawLoanDataId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PropertyRadarAvgAggregateInputType = {
    yearBuilt?: true
    units?: true
    annualTaxes?: true
    avm?: true
    availableEquity?: true
    cltv?: true
    equityPercent?: true
    lastTransferValue?: true
    lastTransferDownPayment?: true
    lastTransferDownPaymentPercent?: true
  }

  export type PropertyRadarSumAggregateInputType = {
    yearBuilt?: true
    units?: true
    annualTaxes?: true
    avm?: true
    availableEquity?: true
    cltv?: true
    equityPercent?: true
    lastTransferValue?: true
    lastTransferDownPayment?: true
    lastTransferDownPaymentPercent?: true
  }

  export type PropertyRadarMinAggregateInputType = {
    id?: true
    parcelNumber?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    county?: true
    propertyType?: true
    yearBuilt?: true
    units?: true
    squareFeet?: true
    annualTaxes?: true
    avm?: true
    availableEquity?: true
    cltv?: true
    equityPercent?: true
    ownerName1?: true
    ownerName2?: true
    ownerAddress?: true
    ownerCity?: true
    ownerState?: true
    ownerZip?: true
    lastTransferDate?: true
    lastTransferValue?: true
    lastTransferType?: true
    lastTransferDownPayment?: true
    lastTransferDownPaymentPercent?: true
    deletedAt?: true
    loanDataFetchedAt?: true
    denormalizedListingUnitNumber?: true
    needsReview?: true
    reviewReason?: true
    unitNumber?: true
    listingId?: true
    rawLoanDataId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PropertyRadarMaxAggregateInputType = {
    id?: true
    parcelNumber?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    county?: true
    propertyType?: true
    yearBuilt?: true
    units?: true
    squareFeet?: true
    annualTaxes?: true
    avm?: true
    availableEquity?: true
    cltv?: true
    equityPercent?: true
    ownerName1?: true
    ownerName2?: true
    ownerAddress?: true
    ownerCity?: true
    ownerState?: true
    ownerZip?: true
    lastTransferDate?: true
    lastTransferValue?: true
    lastTransferType?: true
    lastTransferDownPayment?: true
    lastTransferDownPaymentPercent?: true
    deletedAt?: true
    loanDataFetchedAt?: true
    denormalizedListingUnitNumber?: true
    needsReview?: true
    reviewReason?: true
    unitNumber?: true
    listingId?: true
    rawLoanDataId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PropertyRadarCountAggregateInputType = {
    id?: true
    parcelNumber?: true
    address?: true
    city?: true
    state?: true
    zipCode?: true
    county?: true
    propertyType?: true
    yearBuilt?: true
    units?: true
    squareFeet?: true
    annualTaxes?: true
    avm?: true
    availableEquity?: true
    cltv?: true
    equityPercent?: true
    ownerName1?: true
    ownerName2?: true
    ownerAddress?: true
    ownerCity?: true
    ownerState?: true
    ownerZip?: true
    lastTransferDate?: true
    lastTransferValue?: true
    lastTransferType?: true
    lastTransferDownPayment?: true
    lastTransferDownPaymentPercent?: true
    deletedAt?: true
    loanDataFetchedAt?: true
    denormalizedListingUnitNumber?: true
    needsReview?: true
    reviewReason?: true
    unitNumber?: true
    listingId?: true
    rawLoanDataId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PropertyRadarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyRadar to aggregate.
     */
    where?: PropertyRadarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRadars to fetch.
     */
    orderBy?: PropertyRadarOrderByWithRelationInput | PropertyRadarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PropertyRadarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRadars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRadars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PropertyRadars
    **/
    _count?: true | PropertyRadarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PropertyRadarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PropertyRadarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PropertyRadarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PropertyRadarMaxAggregateInputType
  }

  export type GetPropertyRadarAggregateType<T extends PropertyRadarAggregateArgs> = {
        [P in keyof T & keyof AggregatePropertyRadar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePropertyRadar[P]>
      : GetScalarType<T[P], AggregatePropertyRadar[P]>
  }




  export type PropertyRadarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PropertyRadarWhereInput
    orderBy?: PropertyRadarOrderByWithAggregationInput | PropertyRadarOrderByWithAggregationInput[]
    by: PropertyRadarScalarFieldEnum[] | PropertyRadarScalarFieldEnum
    having?: PropertyRadarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PropertyRadarCountAggregateInputType | true
    _avg?: PropertyRadarAvgAggregateInputType
    _sum?: PropertyRadarSumAggregateInputType
    _min?: PropertyRadarMinAggregateInputType
    _max?: PropertyRadarMaxAggregateInputType
  }

  export type PropertyRadarGroupByOutputType = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt: number | null
    units: number | null
    squareFeet: string | null
    annualTaxes: Decimal | null
    avm: Decimal | null
    availableEquity: Decimal | null
    cltv: number | null
    equityPercent: number | null
    ownerName1: string | null
    ownerName2: string | null
    ownerAddress: string | null
    ownerCity: string | null
    ownerState: string | null
    ownerZip: string | null
    lastTransferDate: Date | null
    lastTransferValue: Decimal | null
    lastTransferType: string | null
    lastTransferDownPayment: Decimal | null
    lastTransferDownPaymentPercent: number | null
    deletedAt: Date | null
    loanDataFetchedAt: Date | null
    denormalizedListingUnitNumber: string
    needsReview: boolean
    reviewReason: string | null
    unitNumber: string
    listingId: string | null
    rawLoanDataId: string | null
    createdAt: Date
    updatedAt: Date
    _count: PropertyRadarCountAggregateOutputType | null
    _avg: PropertyRadarAvgAggregateOutputType | null
    _sum: PropertyRadarSumAggregateOutputType | null
    _min: PropertyRadarMinAggregateOutputType | null
    _max: PropertyRadarMaxAggregateOutputType | null
  }

  type GetPropertyRadarGroupByPayload<T extends PropertyRadarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PropertyRadarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PropertyRadarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PropertyRadarGroupByOutputType[P]>
            : GetScalarType<T[P], PropertyRadarGroupByOutputType[P]>
        }
      >
    >


  export type PropertyRadarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parcelNumber?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    county?: boolean
    propertyType?: boolean
    yearBuilt?: boolean
    units?: boolean
    squareFeet?: boolean
    annualTaxes?: boolean
    avm?: boolean
    availableEquity?: boolean
    cltv?: boolean
    equityPercent?: boolean
    ownerName1?: boolean
    ownerName2?: boolean
    ownerAddress?: boolean
    ownerCity?: boolean
    ownerState?: boolean
    ownerZip?: boolean
    lastTransferDate?: boolean
    lastTransferValue?: boolean
    lastTransferType?: boolean
    lastTransferDownPayment?: boolean
    lastTransferDownPaymentPercent?: boolean
    deletedAt?: boolean
    loanDataFetchedAt?: boolean
    denormalizedListingUnitNumber?: boolean
    needsReview?: boolean
    reviewReason?: boolean
    unitNumber?: boolean
    listingId?: boolean
    rawLoanDataId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Listing?: boolean | PropertyRadar$ListingArgs<ExtArgs>
    Loan?: boolean | PropertyRadar$LoanArgs<ExtArgs>
    _count?: boolean | PropertyRadarCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["propertyRadar"]>

  export type PropertyRadarSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parcelNumber?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    county?: boolean
    propertyType?: boolean
    yearBuilt?: boolean
    units?: boolean
    squareFeet?: boolean
    annualTaxes?: boolean
    avm?: boolean
    availableEquity?: boolean
    cltv?: boolean
    equityPercent?: boolean
    ownerName1?: boolean
    ownerName2?: boolean
    ownerAddress?: boolean
    ownerCity?: boolean
    ownerState?: boolean
    ownerZip?: boolean
    lastTransferDate?: boolean
    lastTransferValue?: boolean
    lastTransferType?: boolean
    lastTransferDownPayment?: boolean
    lastTransferDownPaymentPercent?: boolean
    deletedAt?: boolean
    loanDataFetchedAt?: boolean
    denormalizedListingUnitNumber?: boolean
    needsReview?: boolean
    reviewReason?: boolean
    unitNumber?: boolean
    listingId?: boolean
    rawLoanDataId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["propertyRadar"]>

  export type PropertyRadarSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parcelNumber?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    county?: boolean
    propertyType?: boolean
    yearBuilt?: boolean
    units?: boolean
    squareFeet?: boolean
    annualTaxes?: boolean
    avm?: boolean
    availableEquity?: boolean
    cltv?: boolean
    equityPercent?: boolean
    ownerName1?: boolean
    ownerName2?: boolean
    ownerAddress?: boolean
    ownerCity?: boolean
    ownerState?: boolean
    ownerZip?: boolean
    lastTransferDate?: boolean
    lastTransferValue?: boolean
    lastTransferType?: boolean
    lastTransferDownPayment?: boolean
    lastTransferDownPaymentPercent?: boolean
    deletedAt?: boolean
    loanDataFetchedAt?: boolean
    denormalizedListingUnitNumber?: boolean
    needsReview?: boolean
    reviewReason?: boolean
    unitNumber?: boolean
    listingId?: boolean
    rawLoanDataId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["propertyRadar"]>

  export type PropertyRadarSelectScalar = {
    id?: boolean
    parcelNumber?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    zipCode?: boolean
    county?: boolean
    propertyType?: boolean
    yearBuilt?: boolean
    units?: boolean
    squareFeet?: boolean
    annualTaxes?: boolean
    avm?: boolean
    availableEquity?: boolean
    cltv?: boolean
    equityPercent?: boolean
    ownerName1?: boolean
    ownerName2?: boolean
    ownerAddress?: boolean
    ownerCity?: boolean
    ownerState?: boolean
    ownerZip?: boolean
    lastTransferDate?: boolean
    lastTransferValue?: boolean
    lastTransferType?: boolean
    lastTransferDownPayment?: boolean
    lastTransferDownPaymentPercent?: boolean
    deletedAt?: boolean
    loanDataFetchedAt?: boolean
    denormalizedListingUnitNumber?: boolean
    needsReview?: boolean
    reviewReason?: boolean
    unitNumber?: boolean
    listingId?: boolean
    rawLoanDataId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PropertyRadarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "parcelNumber" | "address" | "city" | "state" | "zipCode" | "county" | "propertyType" | "yearBuilt" | "units" | "squareFeet" | "annualTaxes" | "avm" | "availableEquity" | "cltv" | "equityPercent" | "ownerName1" | "ownerName2" | "ownerAddress" | "ownerCity" | "ownerState" | "ownerZip" | "lastTransferDate" | "lastTransferValue" | "lastTransferType" | "lastTransferDownPayment" | "lastTransferDownPaymentPercent" | "deletedAt" | "loanDataFetchedAt" | "denormalizedListingUnitNumber" | "needsReview" | "reviewReason" | "unitNumber" | "listingId" | "rawLoanDataId" | "createdAt" | "updatedAt", ExtArgs["result"]["propertyRadar"]>
  export type PropertyRadarInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Listing?: boolean | PropertyRadar$ListingArgs<ExtArgs>
    Loan?: boolean | PropertyRadar$LoanArgs<ExtArgs>
    _count?: boolean | PropertyRadarCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PropertyRadarIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PropertyRadarIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PropertyRadarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PropertyRadar"
    objects: {
      Listing: Prisma.$ListingPayload<ExtArgs> | null
      Loan: Prisma.$LoanPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      parcelNumber: string
      address: string
      city: string
      state: string
      zipCode: string
      county: string
      propertyType: string
      yearBuilt: number | null
      units: number | null
      squareFeet: string | null
      annualTaxes: Prisma.Decimal | null
      avm: Prisma.Decimal | null
      availableEquity: Prisma.Decimal | null
      cltv: number | null
      equityPercent: number | null
      ownerName1: string | null
      ownerName2: string | null
      ownerAddress: string | null
      ownerCity: string | null
      ownerState: string | null
      ownerZip: string | null
      lastTransferDate: Date | null
      lastTransferValue: Prisma.Decimal | null
      lastTransferType: string | null
      lastTransferDownPayment: Prisma.Decimal | null
      lastTransferDownPaymentPercent: number | null
      deletedAt: Date | null
      loanDataFetchedAt: Date | null
      denormalizedListingUnitNumber: string
      needsReview: boolean
      reviewReason: string | null
      unitNumber: string
      listingId: string | null
      rawLoanDataId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["propertyRadar"]>
    composites: {}
  }

  type PropertyRadarGetPayload<S extends boolean | null | undefined | PropertyRadarDefaultArgs> = $Result.GetResult<Prisma.$PropertyRadarPayload, S>

  type PropertyRadarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PropertyRadarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PropertyRadarCountAggregateInputType | true
    }

  export interface PropertyRadarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PropertyRadar'], meta: { name: 'PropertyRadar' } }
    /**
     * Find zero or one PropertyRadar that matches the filter.
     * @param {PropertyRadarFindUniqueArgs} args - Arguments to find a PropertyRadar
     * @example
     * // Get one PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PropertyRadarFindUniqueArgs>(args: SelectSubset<T, PropertyRadarFindUniqueArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PropertyRadar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PropertyRadarFindUniqueOrThrowArgs} args - Arguments to find a PropertyRadar
     * @example
     * // Get one PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PropertyRadarFindUniqueOrThrowArgs>(args: SelectSubset<T, PropertyRadarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyRadar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarFindFirstArgs} args - Arguments to find a PropertyRadar
     * @example
     * // Get one PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PropertyRadarFindFirstArgs>(args?: SelectSubset<T, PropertyRadarFindFirstArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PropertyRadar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarFindFirstOrThrowArgs} args - Arguments to find a PropertyRadar
     * @example
     * // Get one PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PropertyRadarFindFirstOrThrowArgs>(args?: SelectSubset<T, PropertyRadarFindFirstOrThrowArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PropertyRadars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PropertyRadars
     * const propertyRadars = await prisma.propertyRadar.findMany()
     * 
     * // Get first 10 PropertyRadars
     * const propertyRadars = await prisma.propertyRadar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const propertyRadarWithIdOnly = await prisma.propertyRadar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PropertyRadarFindManyArgs>(args?: SelectSubset<T, PropertyRadarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PropertyRadar.
     * @param {PropertyRadarCreateArgs} args - Arguments to create a PropertyRadar.
     * @example
     * // Create one PropertyRadar
     * const PropertyRadar = await prisma.propertyRadar.create({
     *   data: {
     *     // ... data to create a PropertyRadar
     *   }
     * })
     * 
     */
    create<T extends PropertyRadarCreateArgs>(args: SelectSubset<T, PropertyRadarCreateArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PropertyRadars.
     * @param {PropertyRadarCreateManyArgs} args - Arguments to create many PropertyRadars.
     * @example
     * // Create many PropertyRadars
     * const propertyRadar = await prisma.propertyRadar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PropertyRadarCreateManyArgs>(args?: SelectSubset<T, PropertyRadarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PropertyRadars and returns the data saved in the database.
     * @param {PropertyRadarCreateManyAndReturnArgs} args - Arguments to create many PropertyRadars.
     * @example
     * // Create many PropertyRadars
     * const propertyRadar = await prisma.propertyRadar.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PropertyRadars and only return the `id`
     * const propertyRadarWithIdOnly = await prisma.propertyRadar.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PropertyRadarCreateManyAndReturnArgs>(args?: SelectSubset<T, PropertyRadarCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PropertyRadar.
     * @param {PropertyRadarDeleteArgs} args - Arguments to delete one PropertyRadar.
     * @example
     * // Delete one PropertyRadar
     * const PropertyRadar = await prisma.propertyRadar.delete({
     *   where: {
     *     // ... filter to delete one PropertyRadar
     *   }
     * })
     * 
     */
    delete<T extends PropertyRadarDeleteArgs>(args: SelectSubset<T, PropertyRadarDeleteArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PropertyRadar.
     * @param {PropertyRadarUpdateArgs} args - Arguments to update one PropertyRadar.
     * @example
     * // Update one PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PropertyRadarUpdateArgs>(args: SelectSubset<T, PropertyRadarUpdateArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PropertyRadars.
     * @param {PropertyRadarDeleteManyArgs} args - Arguments to filter PropertyRadars to delete.
     * @example
     * // Delete a few PropertyRadars
     * const { count } = await prisma.propertyRadar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PropertyRadarDeleteManyArgs>(args?: SelectSubset<T, PropertyRadarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyRadars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PropertyRadars
     * const propertyRadar = await prisma.propertyRadar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PropertyRadarUpdateManyArgs>(args: SelectSubset<T, PropertyRadarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PropertyRadars and returns the data updated in the database.
     * @param {PropertyRadarUpdateManyAndReturnArgs} args - Arguments to update many PropertyRadars.
     * @example
     * // Update many PropertyRadars
     * const propertyRadar = await prisma.propertyRadar.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PropertyRadars and only return the `id`
     * const propertyRadarWithIdOnly = await prisma.propertyRadar.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PropertyRadarUpdateManyAndReturnArgs>(args: SelectSubset<T, PropertyRadarUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PropertyRadar.
     * @param {PropertyRadarUpsertArgs} args - Arguments to update or create a PropertyRadar.
     * @example
     * // Update or create a PropertyRadar
     * const propertyRadar = await prisma.propertyRadar.upsert({
     *   create: {
     *     // ... data to create a PropertyRadar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PropertyRadar we want to update
     *   }
     * })
     */
    upsert<T extends PropertyRadarUpsertArgs>(args: SelectSubset<T, PropertyRadarUpsertArgs<ExtArgs>>): Prisma__PropertyRadarClient<$Result.GetResult<Prisma.$PropertyRadarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PropertyRadars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarCountArgs} args - Arguments to filter PropertyRadars to count.
     * @example
     * // Count the number of PropertyRadars
     * const count = await prisma.propertyRadar.count({
     *   where: {
     *     // ... the filter for the PropertyRadars we want to count
     *   }
     * })
    **/
    count<T extends PropertyRadarCountArgs>(
      args?: Subset<T, PropertyRadarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PropertyRadarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PropertyRadar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PropertyRadarAggregateArgs>(args: Subset<T, PropertyRadarAggregateArgs>): Prisma.PrismaPromise<GetPropertyRadarAggregateType<T>>

    /**
     * Group by PropertyRadar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PropertyRadarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PropertyRadarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PropertyRadarGroupByArgs['orderBy'] }
        : { orderBy?: PropertyRadarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PropertyRadarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPropertyRadarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PropertyRadar model
   */
  readonly fields: PropertyRadarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PropertyRadar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PropertyRadarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Listing<T extends PropertyRadar$ListingArgs<ExtArgs> = {}>(args?: Subset<T, PropertyRadar$ListingArgs<ExtArgs>>): Prisma__ListingClient<$Result.GetResult<Prisma.$ListingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Loan<T extends PropertyRadar$LoanArgs<ExtArgs> = {}>(args?: Subset<T, PropertyRadar$LoanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LoanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PropertyRadar model
   */
  interface PropertyRadarFieldRefs {
    readonly id: FieldRef<"PropertyRadar", 'String'>
    readonly parcelNumber: FieldRef<"PropertyRadar", 'String'>
    readonly address: FieldRef<"PropertyRadar", 'String'>
    readonly city: FieldRef<"PropertyRadar", 'String'>
    readonly state: FieldRef<"PropertyRadar", 'String'>
    readonly zipCode: FieldRef<"PropertyRadar", 'String'>
    readonly county: FieldRef<"PropertyRadar", 'String'>
    readonly propertyType: FieldRef<"PropertyRadar", 'String'>
    readonly yearBuilt: FieldRef<"PropertyRadar", 'Int'>
    readonly units: FieldRef<"PropertyRadar", 'Int'>
    readonly squareFeet: FieldRef<"PropertyRadar", 'String'>
    readonly annualTaxes: FieldRef<"PropertyRadar", 'Decimal'>
    readonly avm: FieldRef<"PropertyRadar", 'Decimal'>
    readonly availableEquity: FieldRef<"PropertyRadar", 'Decimal'>
    readonly cltv: FieldRef<"PropertyRadar", 'Int'>
    readonly equityPercent: FieldRef<"PropertyRadar", 'Int'>
    readonly ownerName1: FieldRef<"PropertyRadar", 'String'>
    readonly ownerName2: FieldRef<"PropertyRadar", 'String'>
    readonly ownerAddress: FieldRef<"PropertyRadar", 'String'>
    readonly ownerCity: FieldRef<"PropertyRadar", 'String'>
    readonly ownerState: FieldRef<"PropertyRadar", 'String'>
    readonly ownerZip: FieldRef<"PropertyRadar", 'String'>
    readonly lastTransferDate: FieldRef<"PropertyRadar", 'DateTime'>
    readonly lastTransferValue: FieldRef<"PropertyRadar", 'Decimal'>
    readonly lastTransferType: FieldRef<"PropertyRadar", 'String'>
    readonly lastTransferDownPayment: FieldRef<"PropertyRadar", 'Decimal'>
    readonly lastTransferDownPaymentPercent: FieldRef<"PropertyRadar", 'Int'>
    readonly deletedAt: FieldRef<"PropertyRadar", 'DateTime'>
    readonly loanDataFetchedAt: FieldRef<"PropertyRadar", 'DateTime'>
    readonly denormalizedListingUnitNumber: FieldRef<"PropertyRadar", 'String'>
    readonly needsReview: FieldRef<"PropertyRadar", 'Boolean'>
    readonly reviewReason: FieldRef<"PropertyRadar", 'String'>
    readonly unitNumber: FieldRef<"PropertyRadar", 'String'>
    readonly listingId: FieldRef<"PropertyRadar", 'String'>
    readonly rawLoanDataId: FieldRef<"PropertyRadar", 'String'>
    readonly createdAt: FieldRef<"PropertyRadar", 'DateTime'>
    readonly updatedAt: FieldRef<"PropertyRadar", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PropertyRadar findUnique
   */
  export type PropertyRadarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRadar to fetch.
     */
    where: PropertyRadarWhereUniqueInput
  }

  /**
   * PropertyRadar findUniqueOrThrow
   */
  export type PropertyRadarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRadar to fetch.
     */
    where: PropertyRadarWhereUniqueInput
  }

  /**
   * PropertyRadar findFirst
   */
  export type PropertyRadarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRadar to fetch.
     */
    where?: PropertyRadarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRadars to fetch.
     */
    orderBy?: PropertyRadarOrderByWithRelationInput | PropertyRadarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyRadars.
     */
    cursor?: PropertyRadarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRadars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRadars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyRadars.
     */
    distinct?: PropertyRadarScalarFieldEnum | PropertyRadarScalarFieldEnum[]
  }

  /**
   * PropertyRadar findFirstOrThrow
   */
  export type PropertyRadarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRadar to fetch.
     */
    where?: PropertyRadarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRadars to fetch.
     */
    orderBy?: PropertyRadarOrderByWithRelationInput | PropertyRadarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PropertyRadars.
     */
    cursor?: PropertyRadarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRadars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRadars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PropertyRadars.
     */
    distinct?: PropertyRadarScalarFieldEnum | PropertyRadarScalarFieldEnum[]
  }

  /**
   * PropertyRadar findMany
   */
  export type PropertyRadarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter, which PropertyRadars to fetch.
     */
    where?: PropertyRadarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PropertyRadars to fetch.
     */
    orderBy?: PropertyRadarOrderByWithRelationInput | PropertyRadarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PropertyRadars.
     */
    cursor?: PropertyRadarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PropertyRadars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PropertyRadars.
     */
    skip?: number
    distinct?: PropertyRadarScalarFieldEnum | PropertyRadarScalarFieldEnum[]
  }

  /**
   * PropertyRadar create
   */
  export type PropertyRadarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * The data needed to create a PropertyRadar.
     */
    data: XOR<PropertyRadarCreateInput, PropertyRadarUncheckedCreateInput>
  }

  /**
   * PropertyRadar createMany
   */
  export type PropertyRadarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PropertyRadars.
     */
    data: PropertyRadarCreateManyInput | PropertyRadarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyRadar createManyAndReturn
   */
  export type PropertyRadarCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * The data used to create many PropertyRadars.
     */
    data: PropertyRadarCreateManyInput | PropertyRadarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PropertyRadar update
   */
  export type PropertyRadarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * The data needed to update a PropertyRadar.
     */
    data: XOR<PropertyRadarUpdateInput, PropertyRadarUncheckedUpdateInput>
    /**
     * Choose, which PropertyRadar to update.
     */
    where: PropertyRadarWhereUniqueInput
  }

  /**
   * PropertyRadar updateMany
   */
  export type PropertyRadarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PropertyRadars.
     */
    data: XOR<PropertyRadarUpdateManyMutationInput, PropertyRadarUncheckedUpdateManyInput>
    /**
     * Filter which PropertyRadars to update
     */
    where?: PropertyRadarWhereInput
    /**
     * Limit how many PropertyRadars to update.
     */
    limit?: number
  }

  /**
   * PropertyRadar updateManyAndReturn
   */
  export type PropertyRadarUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * The data used to update PropertyRadars.
     */
    data: XOR<PropertyRadarUpdateManyMutationInput, PropertyRadarUncheckedUpdateManyInput>
    /**
     * Filter which PropertyRadars to update
     */
    where?: PropertyRadarWhereInput
    /**
     * Limit how many PropertyRadars to update.
     */
    limit?: number
  }

  /**
   * PropertyRadar upsert
   */
  export type PropertyRadarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * The filter to search for the PropertyRadar to update in case it exists.
     */
    where: PropertyRadarWhereUniqueInput
    /**
     * In case the PropertyRadar found by the `where` argument doesn't exist, create a new PropertyRadar with this data.
     */
    create: XOR<PropertyRadarCreateInput, PropertyRadarUncheckedCreateInput>
    /**
     * In case the PropertyRadar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PropertyRadarUpdateInput, PropertyRadarUncheckedUpdateInput>
  }

  /**
   * PropertyRadar delete
   */
  export type PropertyRadarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
    /**
     * Filter which PropertyRadar to delete.
     */
    where: PropertyRadarWhereUniqueInput
  }

  /**
   * PropertyRadar deleteMany
   */
  export type PropertyRadarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PropertyRadars to delete
     */
    where?: PropertyRadarWhereInput
    /**
     * Limit how many PropertyRadars to delete.
     */
    limit?: number
  }

  /**
   * PropertyRadar.Listing
   */
  export type PropertyRadar$ListingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Listing
     */
    select?: ListingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Listing
     */
    omit?: ListingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ListingInclude<ExtArgs> | null
    where?: ListingWhereInput
  }

  /**
   * PropertyRadar.Loan
   */
  export type PropertyRadar$LoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Loan
     */
    select?: LoanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Loan
     */
    omit?: LoanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LoanInclude<ExtArgs> | null
    where?: LoanWhereInput
    orderBy?: LoanOrderByWithRelationInput | LoanOrderByWithRelationInput[]
    cursor?: LoanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LoanScalarFieldEnum | LoanScalarFieldEnum[]
  }

  /**
   * PropertyRadar without action
   */
  export type PropertyRadarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PropertyRadar
     */
    select?: PropertyRadarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PropertyRadar
     */
    omit?: PropertyRadarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PropertyRadarInclude<ExtArgs> | null
  }


  /**
   * Model RawListingData
   */

  export type AggregateRawListingData = {
    _count: RawListingDataCountAggregateOutputType | null
    _avg: RawListingDataAvgAggregateOutputType | null
    _sum: RawListingDataSumAggregateOutputType | null
    _min: RawListingDataMinAggregateOutputType | null
    _max: RawListingDataMaxAggregateOutputType | null
  }

  export type RawListingDataAvgAggregateOutputType = {
    photosCount: number | null
    photosPullAttempts: number | null
  }

  export type RawListingDataSumAggregateOutputType = {
    photosCount: number | null
    photosPullAttempts: number | null
  }

  export type RawListingDataMinAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    rawDataHash: string | null
    status: string | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
    processedAt: Date | null
    parcelNumber: string | null
    zipCode: string | null
    mlsStatus: string | null
    modificationTimestamp: Date | null
    mlsInstanceId: string | null
    propertyType: string | null
    statusChangeTimestamp: Date | null
    unitNumber: string | null
    unparsedAddress: string | null
    loanDataError: string | null
    loanDataPullStatus: $Enums.DataPullStatus | null
    photosPullError: string | null
    photosPullStatus: $Enums.DataPullStatus | null
    rawLoanDataId: string | null
    rawPhotoDataId: string | null
    processingVersion: string | null
    lastPhotosPullAt: Date | null
    photosCount: number | null
    photosPullAttempts: number | null
    pullerVersion: string | null
  }

  export type RawListingDataMaxAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    rawDataHash: string | null
    status: string | null
    errorMessage: string | null
    createdAt: Date | null
    updatedAt: Date | null
    processedAt: Date | null
    parcelNumber: string | null
    zipCode: string | null
    mlsStatus: string | null
    modificationTimestamp: Date | null
    mlsInstanceId: string | null
    propertyType: string | null
    statusChangeTimestamp: Date | null
    unitNumber: string | null
    unparsedAddress: string | null
    loanDataError: string | null
    loanDataPullStatus: $Enums.DataPullStatus | null
    photosPullError: string | null
    photosPullStatus: $Enums.DataPullStatus | null
    rawLoanDataId: string | null
    rawPhotoDataId: string | null
    processingVersion: string | null
    lastPhotosPullAt: Date | null
    photosCount: number | null
    photosPullAttempts: number | null
    pullerVersion: string | null
  }

  export type RawListingDataCountAggregateOutputType = {
    id: number
    mlsProviderId: number
    rawData: number
    rawDataHash: number
    status: number
    errorMessage: number
    createdAt: number
    updatedAt: number
    processedAt: number
    parcelNumber: number
    zipCode: number
    mlsStatus: number
    modificationTimestamp: number
    mlsInstanceId: number
    propertyType: number
    statusChangeTimestamp: number
    unitNumber: number
    unparsedAddress: number
    loanDataError: number
    loanDataPullStatus: number
    photosPullError: number
    photosPullStatus: number
    rawLoanDataId: number
    rawPhotoDataId: number
    processingVersion: number
    lastPhotosPullAt: number
    photosCount: number
    photosPullAttempts: number
    pullerVersion: number
    _all: number
  }


  export type RawListingDataAvgAggregateInputType = {
    photosCount?: true
    photosPullAttempts?: true
  }

  export type RawListingDataSumAggregateInputType = {
    photosCount?: true
    photosPullAttempts?: true
  }

  export type RawListingDataMinAggregateInputType = {
    id?: true
    mlsProviderId?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
    processedAt?: true
    parcelNumber?: true
    zipCode?: true
    mlsStatus?: true
    modificationTimestamp?: true
    mlsInstanceId?: true
    propertyType?: true
    statusChangeTimestamp?: true
    unitNumber?: true
    unparsedAddress?: true
    loanDataError?: true
    loanDataPullStatus?: true
    photosPullError?: true
    photosPullStatus?: true
    rawLoanDataId?: true
    rawPhotoDataId?: true
    processingVersion?: true
    lastPhotosPullAt?: true
    photosCount?: true
    photosPullAttempts?: true
    pullerVersion?: true
  }

  export type RawListingDataMaxAggregateInputType = {
    id?: true
    mlsProviderId?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
    processedAt?: true
    parcelNumber?: true
    zipCode?: true
    mlsStatus?: true
    modificationTimestamp?: true
    mlsInstanceId?: true
    propertyType?: true
    statusChangeTimestamp?: true
    unitNumber?: true
    unparsedAddress?: true
    loanDataError?: true
    loanDataPullStatus?: true
    photosPullError?: true
    photosPullStatus?: true
    rawLoanDataId?: true
    rawPhotoDataId?: true
    processingVersion?: true
    lastPhotosPullAt?: true
    photosCount?: true
    photosPullAttempts?: true
    pullerVersion?: true
  }

  export type RawListingDataCountAggregateInputType = {
    id?: true
    mlsProviderId?: true
    rawData?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    createdAt?: true
    updatedAt?: true
    processedAt?: true
    parcelNumber?: true
    zipCode?: true
    mlsStatus?: true
    modificationTimestamp?: true
    mlsInstanceId?: true
    propertyType?: true
    statusChangeTimestamp?: true
    unitNumber?: true
    unparsedAddress?: true
    loanDataError?: true
    loanDataPullStatus?: true
    photosPullError?: true
    photosPullStatus?: true
    rawLoanDataId?: true
    rawPhotoDataId?: true
    processingVersion?: true
    lastPhotosPullAt?: true
    photosCount?: true
    photosPullAttempts?: true
    pullerVersion?: true
    _all?: true
  }

  export type RawListingDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawListingData to aggregate.
     */
    where?: RawListingDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawListingData to fetch.
     */
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RawListingDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawListingData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawListingData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RawListingData
    **/
    _count?: true | RawListingDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RawListingDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RawListingDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RawListingDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RawListingDataMaxAggregateInputType
  }

  export type GetRawListingDataAggregateType<T extends RawListingDataAggregateArgs> = {
        [P in keyof T & keyof AggregateRawListingData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRawListingData[P]>
      : GetScalarType<T[P], AggregateRawListingData[P]>
  }




  export type RawListingDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RawListingDataWhereInput
    orderBy?: RawListingDataOrderByWithAggregationInput | RawListingDataOrderByWithAggregationInput[]
    by: RawListingDataScalarFieldEnum[] | RawListingDataScalarFieldEnum
    having?: RawListingDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RawListingDataCountAggregateInputType | true
    _avg?: RawListingDataAvgAggregateInputType
    _sum?: RawListingDataSumAggregateInputType
    _min?: RawListingDataMinAggregateInputType
    _max?: RawListingDataMaxAggregateInputType
  }

  export type RawListingDataGroupByOutputType = {
    id: string
    mlsProviderId: string
    rawData: JsonValue
    rawDataHash: string
    status: string
    errorMessage: string | null
    createdAt: Date
    updatedAt: Date
    processedAt: Date | null
    parcelNumber: string | null
    zipCode: string | null
    mlsStatus: string | null
    modificationTimestamp: Date | null
    mlsInstanceId: string | null
    propertyType: string | null
    statusChangeTimestamp: Date | null
    unitNumber: string
    unparsedAddress: string | null
    loanDataError: string | null
    loanDataPullStatus: $Enums.DataPullStatus
    photosPullError: string | null
    photosPullStatus: $Enums.DataPullStatus
    rawLoanDataId: string | null
    rawPhotoDataId: string | null
    processingVersion: string | null
    lastPhotosPullAt: Date | null
    photosCount: number | null
    photosPullAttempts: number
    pullerVersion: string | null
    _count: RawListingDataCountAggregateOutputType | null
    _avg: RawListingDataAvgAggregateOutputType | null
    _sum: RawListingDataSumAggregateOutputType | null
    _min: RawListingDataMinAggregateOutputType | null
    _max: RawListingDataMaxAggregateOutputType | null
  }

  type GetRawListingDataGroupByPayload<T extends RawListingDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RawListingDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RawListingDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RawListingDataGroupByOutputType[P]>
            : GetScalarType<T[P], RawListingDataGroupByOutputType[P]>
        }
      >
    >


  export type RawListingDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    processedAt?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    mlsStatus?: boolean
    modificationTimestamp?: boolean
    mlsInstanceId?: boolean
    propertyType?: boolean
    statusChangeTimestamp?: boolean
    unitNumber?: boolean
    unparsedAddress?: boolean
    loanDataError?: boolean
    loanDataPullStatus?: boolean
    photosPullError?: boolean
    photosPullStatus?: boolean
    rawLoanDataId?: boolean
    rawPhotoDataId?: boolean
    processingVersion?: boolean
    lastPhotosPullAt?: boolean
    photosCount?: boolean
    photosPullAttempts?: boolean
    pullerVersion?: boolean
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }, ExtArgs["result"]["rawListingData"]>

  export type RawListingDataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    processedAt?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    mlsStatus?: boolean
    modificationTimestamp?: boolean
    mlsInstanceId?: boolean
    propertyType?: boolean
    statusChangeTimestamp?: boolean
    unitNumber?: boolean
    unparsedAddress?: boolean
    loanDataError?: boolean
    loanDataPullStatus?: boolean
    photosPullError?: boolean
    photosPullStatus?: boolean
    rawLoanDataId?: boolean
    rawPhotoDataId?: boolean
    processingVersion?: boolean
    lastPhotosPullAt?: boolean
    photosCount?: boolean
    photosPullAttempts?: boolean
    pullerVersion?: boolean
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }, ExtArgs["result"]["rawListingData"]>

  export type RawListingDataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    processedAt?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    mlsStatus?: boolean
    modificationTimestamp?: boolean
    mlsInstanceId?: boolean
    propertyType?: boolean
    statusChangeTimestamp?: boolean
    unitNumber?: boolean
    unparsedAddress?: boolean
    loanDataError?: boolean
    loanDataPullStatus?: boolean
    photosPullError?: boolean
    photosPullStatus?: boolean
    rawLoanDataId?: boolean
    rawPhotoDataId?: boolean
    processingVersion?: boolean
    lastPhotosPullAt?: boolean
    photosCount?: boolean
    photosPullAttempts?: boolean
    pullerVersion?: boolean
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }, ExtArgs["result"]["rawListingData"]>

  export type RawListingDataSelectScalar = {
    id?: boolean
    mlsProviderId?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    processedAt?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    mlsStatus?: boolean
    modificationTimestamp?: boolean
    mlsInstanceId?: boolean
    propertyType?: boolean
    statusChangeTimestamp?: boolean
    unitNumber?: boolean
    unparsedAddress?: boolean
    loanDataError?: boolean
    loanDataPullStatus?: boolean
    photosPullError?: boolean
    photosPullStatus?: boolean
    rawLoanDataId?: boolean
    rawPhotoDataId?: boolean
    processingVersion?: boolean
    lastPhotosPullAt?: boolean
    photosCount?: boolean
    photosPullAttempts?: boolean
    pullerVersion?: boolean
  }

  export type RawListingDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mlsProviderId" | "rawData" | "rawDataHash" | "status" | "errorMessage" | "createdAt" | "updatedAt" | "processedAt" | "parcelNumber" | "zipCode" | "mlsStatus" | "modificationTimestamp" | "mlsInstanceId" | "propertyType" | "statusChangeTimestamp" | "unitNumber" | "unparsedAddress" | "loanDataError" | "loanDataPullStatus" | "photosPullError" | "photosPullStatus" | "rawLoanDataId" | "rawPhotoDataId" | "processingVersion" | "lastPhotosPullAt" | "photosCount" | "photosPullAttempts" | "pullerVersion", ExtArgs["result"]["rawListingData"]>
  export type RawListingDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }
  export type RawListingDataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }
  export type RawListingDataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawLoanData?: boolean | RawListingData$RawLoanDataArgs<ExtArgs>
    RawPhotoData?: boolean | RawListingData$RawPhotoDataArgs<ExtArgs>
  }

  export type $RawListingDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RawListingData"
    objects: {
      RawLoanData: Prisma.$RawLoanDataPayload<ExtArgs> | null
      RawPhotoData: Prisma.$RawPhotoDataPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mlsProviderId: string
      rawData: Prisma.JsonValue
      rawDataHash: string
      status: string
      errorMessage: string | null
      createdAt: Date
      updatedAt: Date
      processedAt: Date | null
      parcelNumber: string | null
      zipCode: string | null
      mlsStatus: string | null
      modificationTimestamp: Date | null
      mlsInstanceId: string | null
      propertyType: string | null
      statusChangeTimestamp: Date | null
      unitNumber: string
      unparsedAddress: string | null
      loanDataError: string | null
      loanDataPullStatus: $Enums.DataPullStatus
      photosPullError: string | null
      photosPullStatus: $Enums.DataPullStatus
      rawLoanDataId: string | null
      rawPhotoDataId: string | null
      processingVersion: string | null
      lastPhotosPullAt: Date | null
      photosCount: number | null
      photosPullAttempts: number
      pullerVersion: string | null
    }, ExtArgs["result"]["rawListingData"]>
    composites: {}
  }

  type RawListingDataGetPayload<S extends boolean | null | undefined | RawListingDataDefaultArgs> = $Result.GetResult<Prisma.$RawListingDataPayload, S>

  type RawListingDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RawListingDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RawListingDataCountAggregateInputType | true
    }

  export interface RawListingDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RawListingData'], meta: { name: 'RawListingData' } }
    /**
     * Find zero or one RawListingData that matches the filter.
     * @param {RawListingDataFindUniqueArgs} args - Arguments to find a RawListingData
     * @example
     * // Get one RawListingData
     * const rawListingData = await prisma.rawListingData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RawListingDataFindUniqueArgs>(args: SelectSubset<T, RawListingDataFindUniqueArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RawListingData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RawListingDataFindUniqueOrThrowArgs} args - Arguments to find a RawListingData
     * @example
     * // Get one RawListingData
     * const rawListingData = await prisma.rawListingData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RawListingDataFindUniqueOrThrowArgs>(args: SelectSubset<T, RawListingDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawListingData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataFindFirstArgs} args - Arguments to find a RawListingData
     * @example
     * // Get one RawListingData
     * const rawListingData = await prisma.rawListingData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RawListingDataFindFirstArgs>(args?: SelectSubset<T, RawListingDataFindFirstArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawListingData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataFindFirstOrThrowArgs} args - Arguments to find a RawListingData
     * @example
     * // Get one RawListingData
     * const rawListingData = await prisma.rawListingData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RawListingDataFindFirstOrThrowArgs>(args?: SelectSubset<T, RawListingDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RawListingData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RawListingData
     * const rawListingData = await prisma.rawListingData.findMany()
     * 
     * // Get first 10 RawListingData
     * const rawListingData = await prisma.rawListingData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rawListingDataWithIdOnly = await prisma.rawListingData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RawListingDataFindManyArgs>(args?: SelectSubset<T, RawListingDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RawListingData.
     * @param {RawListingDataCreateArgs} args - Arguments to create a RawListingData.
     * @example
     * // Create one RawListingData
     * const RawListingData = await prisma.rawListingData.create({
     *   data: {
     *     // ... data to create a RawListingData
     *   }
     * })
     * 
     */
    create<T extends RawListingDataCreateArgs>(args: SelectSubset<T, RawListingDataCreateArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RawListingData.
     * @param {RawListingDataCreateManyArgs} args - Arguments to create many RawListingData.
     * @example
     * // Create many RawListingData
     * const rawListingData = await prisma.rawListingData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RawListingDataCreateManyArgs>(args?: SelectSubset<T, RawListingDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RawListingData and returns the data saved in the database.
     * @param {RawListingDataCreateManyAndReturnArgs} args - Arguments to create many RawListingData.
     * @example
     * // Create many RawListingData
     * const rawListingData = await prisma.rawListingData.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RawListingData and only return the `id`
     * const rawListingDataWithIdOnly = await prisma.rawListingData.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RawListingDataCreateManyAndReturnArgs>(args?: SelectSubset<T, RawListingDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RawListingData.
     * @param {RawListingDataDeleteArgs} args - Arguments to delete one RawListingData.
     * @example
     * // Delete one RawListingData
     * const RawListingData = await prisma.rawListingData.delete({
     *   where: {
     *     // ... filter to delete one RawListingData
     *   }
     * })
     * 
     */
    delete<T extends RawListingDataDeleteArgs>(args: SelectSubset<T, RawListingDataDeleteArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RawListingData.
     * @param {RawListingDataUpdateArgs} args - Arguments to update one RawListingData.
     * @example
     * // Update one RawListingData
     * const rawListingData = await prisma.rawListingData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RawListingDataUpdateArgs>(args: SelectSubset<T, RawListingDataUpdateArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RawListingData.
     * @param {RawListingDataDeleteManyArgs} args - Arguments to filter RawListingData to delete.
     * @example
     * // Delete a few RawListingData
     * const { count } = await prisma.rawListingData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RawListingDataDeleteManyArgs>(args?: SelectSubset<T, RawListingDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawListingData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RawListingData
     * const rawListingData = await prisma.rawListingData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RawListingDataUpdateManyArgs>(args: SelectSubset<T, RawListingDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawListingData and returns the data updated in the database.
     * @param {RawListingDataUpdateManyAndReturnArgs} args - Arguments to update many RawListingData.
     * @example
     * // Update many RawListingData
     * const rawListingData = await prisma.rawListingData.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RawListingData and only return the `id`
     * const rawListingDataWithIdOnly = await prisma.rawListingData.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RawListingDataUpdateManyAndReturnArgs>(args: SelectSubset<T, RawListingDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RawListingData.
     * @param {RawListingDataUpsertArgs} args - Arguments to update or create a RawListingData.
     * @example
     * // Update or create a RawListingData
     * const rawListingData = await prisma.rawListingData.upsert({
     *   create: {
     *     // ... data to create a RawListingData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RawListingData we want to update
     *   }
     * })
     */
    upsert<T extends RawListingDataUpsertArgs>(args: SelectSubset<T, RawListingDataUpsertArgs<ExtArgs>>): Prisma__RawListingDataClient<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RawListingData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataCountArgs} args - Arguments to filter RawListingData to count.
     * @example
     * // Count the number of RawListingData
     * const count = await prisma.rawListingData.count({
     *   where: {
     *     // ... the filter for the RawListingData we want to count
     *   }
     * })
    **/
    count<T extends RawListingDataCountArgs>(
      args?: Subset<T, RawListingDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RawListingDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RawListingData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RawListingDataAggregateArgs>(args: Subset<T, RawListingDataAggregateArgs>): Prisma.PrismaPromise<GetRawListingDataAggregateType<T>>

    /**
     * Group by RawListingData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawListingDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RawListingDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RawListingDataGroupByArgs['orderBy'] }
        : { orderBy?: RawListingDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RawListingDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRawListingDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RawListingData model
   */
  readonly fields: RawListingDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RawListingData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RawListingDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    RawLoanData<T extends RawListingData$RawLoanDataArgs<ExtArgs> = {}>(args?: Subset<T, RawListingData$RawLoanDataArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    RawPhotoData<T extends RawListingData$RawPhotoDataArgs<ExtArgs> = {}>(args?: Subset<T, RawListingData$RawPhotoDataArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RawListingData model
   */
  interface RawListingDataFieldRefs {
    readonly id: FieldRef<"RawListingData", 'String'>
    readonly mlsProviderId: FieldRef<"RawListingData", 'String'>
    readonly rawData: FieldRef<"RawListingData", 'Json'>
    readonly rawDataHash: FieldRef<"RawListingData", 'String'>
    readonly status: FieldRef<"RawListingData", 'String'>
    readonly errorMessage: FieldRef<"RawListingData", 'String'>
    readonly createdAt: FieldRef<"RawListingData", 'DateTime'>
    readonly updatedAt: FieldRef<"RawListingData", 'DateTime'>
    readonly processedAt: FieldRef<"RawListingData", 'DateTime'>
    readonly parcelNumber: FieldRef<"RawListingData", 'String'>
    readonly zipCode: FieldRef<"RawListingData", 'String'>
    readonly mlsStatus: FieldRef<"RawListingData", 'String'>
    readonly modificationTimestamp: FieldRef<"RawListingData", 'DateTime'>
    readonly mlsInstanceId: FieldRef<"RawListingData", 'String'>
    readonly propertyType: FieldRef<"RawListingData", 'String'>
    readonly statusChangeTimestamp: FieldRef<"RawListingData", 'DateTime'>
    readonly unitNumber: FieldRef<"RawListingData", 'String'>
    readonly unparsedAddress: FieldRef<"RawListingData", 'String'>
    readonly loanDataError: FieldRef<"RawListingData", 'String'>
    readonly loanDataPullStatus: FieldRef<"RawListingData", 'DataPullStatus'>
    readonly photosPullError: FieldRef<"RawListingData", 'String'>
    readonly photosPullStatus: FieldRef<"RawListingData", 'DataPullStatus'>
    readonly rawLoanDataId: FieldRef<"RawListingData", 'String'>
    readonly rawPhotoDataId: FieldRef<"RawListingData", 'String'>
    readonly processingVersion: FieldRef<"RawListingData", 'String'>
    readonly lastPhotosPullAt: FieldRef<"RawListingData", 'DateTime'>
    readonly photosCount: FieldRef<"RawListingData", 'Int'>
    readonly photosPullAttempts: FieldRef<"RawListingData", 'Int'>
    readonly pullerVersion: FieldRef<"RawListingData", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RawListingData findUnique
   */
  export type RawListingDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter, which RawListingData to fetch.
     */
    where: RawListingDataWhereUniqueInput
  }

  /**
   * RawListingData findUniqueOrThrow
   */
  export type RawListingDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter, which RawListingData to fetch.
     */
    where: RawListingDataWhereUniqueInput
  }

  /**
   * RawListingData findFirst
   */
  export type RawListingDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter, which RawListingData to fetch.
     */
    where?: RawListingDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawListingData to fetch.
     */
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawListingData.
     */
    cursor?: RawListingDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawListingData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawListingData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawListingData.
     */
    distinct?: RawListingDataScalarFieldEnum | RawListingDataScalarFieldEnum[]
  }

  /**
   * RawListingData findFirstOrThrow
   */
  export type RawListingDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter, which RawListingData to fetch.
     */
    where?: RawListingDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawListingData to fetch.
     */
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawListingData.
     */
    cursor?: RawListingDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawListingData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawListingData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawListingData.
     */
    distinct?: RawListingDataScalarFieldEnum | RawListingDataScalarFieldEnum[]
  }

  /**
   * RawListingData findMany
   */
  export type RawListingDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter, which RawListingData to fetch.
     */
    where?: RawListingDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawListingData to fetch.
     */
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RawListingData.
     */
    cursor?: RawListingDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawListingData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawListingData.
     */
    skip?: number
    distinct?: RawListingDataScalarFieldEnum | RawListingDataScalarFieldEnum[]
  }

  /**
   * RawListingData create
   */
  export type RawListingDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * The data needed to create a RawListingData.
     */
    data: XOR<RawListingDataCreateInput, RawListingDataUncheckedCreateInput>
  }

  /**
   * RawListingData createMany
   */
  export type RawListingDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RawListingData.
     */
    data: RawListingDataCreateManyInput | RawListingDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RawListingData createManyAndReturn
   */
  export type RawListingDataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * The data used to create many RawListingData.
     */
    data: RawListingDataCreateManyInput | RawListingDataCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RawListingData update
   */
  export type RawListingDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * The data needed to update a RawListingData.
     */
    data: XOR<RawListingDataUpdateInput, RawListingDataUncheckedUpdateInput>
    /**
     * Choose, which RawListingData to update.
     */
    where: RawListingDataWhereUniqueInput
  }

  /**
   * RawListingData updateMany
   */
  export type RawListingDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RawListingData.
     */
    data: XOR<RawListingDataUpdateManyMutationInput, RawListingDataUncheckedUpdateManyInput>
    /**
     * Filter which RawListingData to update
     */
    where?: RawListingDataWhereInput
    /**
     * Limit how many RawListingData to update.
     */
    limit?: number
  }

  /**
   * RawListingData updateManyAndReturn
   */
  export type RawListingDataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * The data used to update RawListingData.
     */
    data: XOR<RawListingDataUpdateManyMutationInput, RawListingDataUncheckedUpdateManyInput>
    /**
     * Filter which RawListingData to update
     */
    where?: RawListingDataWhereInput
    /**
     * Limit how many RawListingData to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RawListingData upsert
   */
  export type RawListingDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * The filter to search for the RawListingData to update in case it exists.
     */
    where: RawListingDataWhereUniqueInput
    /**
     * In case the RawListingData found by the `where` argument doesn't exist, create a new RawListingData with this data.
     */
    create: XOR<RawListingDataCreateInput, RawListingDataUncheckedCreateInput>
    /**
     * In case the RawListingData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RawListingDataUpdateInput, RawListingDataUncheckedUpdateInput>
  }

  /**
   * RawListingData delete
   */
  export type RawListingDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    /**
     * Filter which RawListingData to delete.
     */
    where: RawListingDataWhereUniqueInput
  }

  /**
   * RawListingData deleteMany
   */
  export type RawListingDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawListingData to delete
     */
    where?: RawListingDataWhereInput
    /**
     * Limit how many RawListingData to delete.
     */
    limit?: number
  }

  /**
   * RawListingData.RawLoanData
   */
  export type RawListingData$RawLoanDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    where?: RawLoanDataWhereInput
  }

  /**
   * RawListingData.RawPhotoData
   */
  export type RawListingData$RawPhotoDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    where?: RawPhotoDataWhereInput
  }

  /**
   * RawListingData without action
   */
  export type RawListingDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
  }


  /**
   * Model RawLoanData
   */

  export type AggregateRawLoanData = {
    _count: RawLoanDataCountAggregateOutputType | null
    _min: RawLoanDataMinAggregateOutputType | null
    _max: RawLoanDataMaxAggregateOutputType | null
  }

  export type RawLoanDataMinAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    mlsInstanceId: string | null
    parcelNumber: string | null
    zipCode: string | null
    unitNumber: string | null
    rawDataHash: string | null
    status: string | null
    errorMessage: string | null
    processedAt: Date | null
    createdAt: Date | null
    rawListingDataId: string | null
  }

  export type RawLoanDataMaxAggregateOutputType = {
    id: string | null
    mlsProviderId: string | null
    mlsInstanceId: string | null
    parcelNumber: string | null
    zipCode: string | null
    unitNumber: string | null
    rawDataHash: string | null
    status: string | null
    errorMessage: string | null
    processedAt: Date | null
    createdAt: Date | null
    rawListingDataId: string | null
  }

  export type RawLoanDataCountAggregateOutputType = {
    id: number
    mlsProviderId: number
    mlsInstanceId: number
    parcelNumber: number
    zipCode: number
    unitNumber: number
    rawData: number
    rawDataHash: number
    status: number
    errorMessage: number
    processedAt: number
    createdAt: number
    apiCriteria: number
    rawListingDataId: number
    _all: number
  }


  export type RawLoanDataMinAggregateInputType = {
    id?: true
    mlsProviderId?: true
    mlsInstanceId?: true
    parcelNumber?: true
    zipCode?: true
    unitNumber?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    createdAt?: true
    rawListingDataId?: true
  }

  export type RawLoanDataMaxAggregateInputType = {
    id?: true
    mlsProviderId?: true
    mlsInstanceId?: true
    parcelNumber?: true
    zipCode?: true
    unitNumber?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    createdAt?: true
    rawListingDataId?: true
  }

  export type RawLoanDataCountAggregateInputType = {
    id?: true
    mlsProviderId?: true
    mlsInstanceId?: true
    parcelNumber?: true
    zipCode?: true
    unitNumber?: true
    rawData?: true
    rawDataHash?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    createdAt?: true
    apiCriteria?: true
    rawListingDataId?: true
    _all?: true
  }

  export type RawLoanDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawLoanData to aggregate.
     */
    where?: RawLoanDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawLoanData to fetch.
     */
    orderBy?: RawLoanDataOrderByWithRelationInput | RawLoanDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RawLoanDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawLoanData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawLoanData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RawLoanData
    **/
    _count?: true | RawLoanDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RawLoanDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RawLoanDataMaxAggregateInputType
  }

  export type GetRawLoanDataAggregateType<T extends RawLoanDataAggregateArgs> = {
        [P in keyof T & keyof AggregateRawLoanData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRawLoanData[P]>
      : GetScalarType<T[P], AggregateRawLoanData[P]>
  }




  export type RawLoanDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RawLoanDataWhereInput
    orderBy?: RawLoanDataOrderByWithAggregationInput | RawLoanDataOrderByWithAggregationInput[]
    by: RawLoanDataScalarFieldEnum[] | RawLoanDataScalarFieldEnum
    having?: RawLoanDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RawLoanDataCountAggregateInputType | true
    _min?: RawLoanDataMinAggregateInputType
    _max?: RawLoanDataMaxAggregateInputType
  }

  export type RawLoanDataGroupByOutputType = {
    id: string
    mlsProviderId: string
    mlsInstanceId: string | null
    parcelNumber: string | null
    zipCode: string | null
    unitNumber: string
    rawData: JsonValue
    rawDataHash: string
    status: string
    errorMessage: string | null
    processedAt: Date | null
    createdAt: Date
    apiCriteria: JsonValue | null
    rawListingDataId: string | null
    _count: RawLoanDataCountAggregateOutputType | null
    _min: RawLoanDataMinAggregateOutputType | null
    _max: RawLoanDataMaxAggregateOutputType | null
  }

  type GetRawLoanDataGroupByPayload<T extends RawLoanDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RawLoanDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RawLoanDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RawLoanDataGroupByOutputType[P]>
            : GetScalarType<T[P], RawLoanDataGroupByOutputType[P]>
        }
      >
    >


  export type RawLoanDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    mlsInstanceId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    unitNumber?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    createdAt?: boolean
    apiCriteria?: boolean
    rawListingDataId?: boolean
    RawListingData?: boolean | RawLoanData$RawListingDataArgs<ExtArgs>
    _count?: boolean | RawLoanDataCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rawLoanData"]>

  export type RawLoanDataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    mlsInstanceId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    unitNumber?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    createdAt?: boolean
    apiCriteria?: boolean
    rawListingDataId?: boolean
  }, ExtArgs["result"]["rawLoanData"]>

  export type RawLoanDataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsProviderId?: boolean
    mlsInstanceId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    unitNumber?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    createdAt?: boolean
    apiCriteria?: boolean
    rawListingDataId?: boolean
  }, ExtArgs["result"]["rawLoanData"]>

  export type RawLoanDataSelectScalar = {
    id?: boolean
    mlsProviderId?: boolean
    mlsInstanceId?: boolean
    parcelNumber?: boolean
    zipCode?: boolean
    unitNumber?: boolean
    rawData?: boolean
    rawDataHash?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    createdAt?: boolean
    apiCriteria?: boolean
    rawListingDataId?: boolean
  }

  export type RawLoanDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mlsProviderId" | "mlsInstanceId" | "parcelNumber" | "zipCode" | "unitNumber" | "rawData" | "rawDataHash" | "status" | "errorMessage" | "processedAt" | "createdAt" | "apiCriteria" | "rawListingDataId", ExtArgs["result"]["rawLoanData"]>
  export type RawLoanDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawListingData?: boolean | RawLoanData$RawListingDataArgs<ExtArgs>
    _count?: boolean | RawLoanDataCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RawLoanDataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RawLoanDataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RawLoanDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RawLoanData"
    objects: {
      RawListingData: Prisma.$RawListingDataPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mlsProviderId: string
      mlsInstanceId: string | null
      parcelNumber: string | null
      zipCode: string | null
      unitNumber: string
      rawData: Prisma.JsonValue
      rawDataHash: string
      status: string
      errorMessage: string | null
      processedAt: Date | null
      createdAt: Date
      apiCriteria: Prisma.JsonValue | null
      rawListingDataId: string | null
    }, ExtArgs["result"]["rawLoanData"]>
    composites: {}
  }

  type RawLoanDataGetPayload<S extends boolean | null | undefined | RawLoanDataDefaultArgs> = $Result.GetResult<Prisma.$RawLoanDataPayload, S>

  type RawLoanDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RawLoanDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RawLoanDataCountAggregateInputType | true
    }

  export interface RawLoanDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RawLoanData'], meta: { name: 'RawLoanData' } }
    /**
     * Find zero or one RawLoanData that matches the filter.
     * @param {RawLoanDataFindUniqueArgs} args - Arguments to find a RawLoanData
     * @example
     * // Get one RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RawLoanDataFindUniqueArgs>(args: SelectSubset<T, RawLoanDataFindUniqueArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RawLoanData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RawLoanDataFindUniqueOrThrowArgs} args - Arguments to find a RawLoanData
     * @example
     * // Get one RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RawLoanDataFindUniqueOrThrowArgs>(args: SelectSubset<T, RawLoanDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawLoanData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataFindFirstArgs} args - Arguments to find a RawLoanData
     * @example
     * // Get one RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RawLoanDataFindFirstArgs>(args?: SelectSubset<T, RawLoanDataFindFirstArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawLoanData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataFindFirstOrThrowArgs} args - Arguments to find a RawLoanData
     * @example
     * // Get one RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RawLoanDataFindFirstOrThrowArgs>(args?: SelectSubset<T, RawLoanDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RawLoanData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findMany()
     * 
     * // Get first 10 RawLoanData
     * const rawLoanData = await prisma.rawLoanData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rawLoanDataWithIdOnly = await prisma.rawLoanData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RawLoanDataFindManyArgs>(args?: SelectSubset<T, RawLoanDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RawLoanData.
     * @param {RawLoanDataCreateArgs} args - Arguments to create a RawLoanData.
     * @example
     * // Create one RawLoanData
     * const RawLoanData = await prisma.rawLoanData.create({
     *   data: {
     *     // ... data to create a RawLoanData
     *   }
     * })
     * 
     */
    create<T extends RawLoanDataCreateArgs>(args: SelectSubset<T, RawLoanDataCreateArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RawLoanData.
     * @param {RawLoanDataCreateManyArgs} args - Arguments to create many RawLoanData.
     * @example
     * // Create many RawLoanData
     * const rawLoanData = await prisma.rawLoanData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RawLoanDataCreateManyArgs>(args?: SelectSubset<T, RawLoanDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RawLoanData and returns the data saved in the database.
     * @param {RawLoanDataCreateManyAndReturnArgs} args - Arguments to create many RawLoanData.
     * @example
     * // Create many RawLoanData
     * const rawLoanData = await prisma.rawLoanData.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RawLoanData and only return the `id`
     * const rawLoanDataWithIdOnly = await prisma.rawLoanData.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RawLoanDataCreateManyAndReturnArgs>(args?: SelectSubset<T, RawLoanDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RawLoanData.
     * @param {RawLoanDataDeleteArgs} args - Arguments to delete one RawLoanData.
     * @example
     * // Delete one RawLoanData
     * const RawLoanData = await prisma.rawLoanData.delete({
     *   where: {
     *     // ... filter to delete one RawLoanData
     *   }
     * })
     * 
     */
    delete<T extends RawLoanDataDeleteArgs>(args: SelectSubset<T, RawLoanDataDeleteArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RawLoanData.
     * @param {RawLoanDataUpdateArgs} args - Arguments to update one RawLoanData.
     * @example
     * // Update one RawLoanData
     * const rawLoanData = await prisma.rawLoanData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RawLoanDataUpdateArgs>(args: SelectSubset<T, RawLoanDataUpdateArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RawLoanData.
     * @param {RawLoanDataDeleteManyArgs} args - Arguments to filter RawLoanData to delete.
     * @example
     * // Delete a few RawLoanData
     * const { count } = await prisma.rawLoanData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RawLoanDataDeleteManyArgs>(args?: SelectSubset<T, RawLoanDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawLoanData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RawLoanData
     * const rawLoanData = await prisma.rawLoanData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RawLoanDataUpdateManyArgs>(args: SelectSubset<T, RawLoanDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawLoanData and returns the data updated in the database.
     * @param {RawLoanDataUpdateManyAndReturnArgs} args - Arguments to update many RawLoanData.
     * @example
     * // Update many RawLoanData
     * const rawLoanData = await prisma.rawLoanData.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RawLoanData and only return the `id`
     * const rawLoanDataWithIdOnly = await prisma.rawLoanData.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RawLoanDataUpdateManyAndReturnArgs>(args: SelectSubset<T, RawLoanDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RawLoanData.
     * @param {RawLoanDataUpsertArgs} args - Arguments to update or create a RawLoanData.
     * @example
     * // Update or create a RawLoanData
     * const rawLoanData = await prisma.rawLoanData.upsert({
     *   create: {
     *     // ... data to create a RawLoanData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RawLoanData we want to update
     *   }
     * })
     */
    upsert<T extends RawLoanDataUpsertArgs>(args: SelectSubset<T, RawLoanDataUpsertArgs<ExtArgs>>): Prisma__RawLoanDataClient<$Result.GetResult<Prisma.$RawLoanDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RawLoanData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataCountArgs} args - Arguments to filter RawLoanData to count.
     * @example
     * // Count the number of RawLoanData
     * const count = await prisma.rawLoanData.count({
     *   where: {
     *     // ... the filter for the RawLoanData we want to count
     *   }
     * })
    **/
    count<T extends RawLoanDataCountArgs>(
      args?: Subset<T, RawLoanDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RawLoanDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RawLoanData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RawLoanDataAggregateArgs>(args: Subset<T, RawLoanDataAggregateArgs>): Prisma.PrismaPromise<GetRawLoanDataAggregateType<T>>

    /**
     * Group by RawLoanData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawLoanDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RawLoanDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RawLoanDataGroupByArgs['orderBy'] }
        : { orderBy?: RawLoanDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RawLoanDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRawLoanDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RawLoanData model
   */
  readonly fields: RawLoanDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RawLoanData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RawLoanDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    RawListingData<T extends RawLoanData$RawListingDataArgs<ExtArgs> = {}>(args?: Subset<T, RawLoanData$RawListingDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RawLoanData model
   */
  interface RawLoanDataFieldRefs {
    readonly id: FieldRef<"RawLoanData", 'String'>
    readonly mlsProviderId: FieldRef<"RawLoanData", 'String'>
    readonly mlsInstanceId: FieldRef<"RawLoanData", 'String'>
    readonly parcelNumber: FieldRef<"RawLoanData", 'String'>
    readonly zipCode: FieldRef<"RawLoanData", 'String'>
    readonly unitNumber: FieldRef<"RawLoanData", 'String'>
    readonly rawData: FieldRef<"RawLoanData", 'Json'>
    readonly rawDataHash: FieldRef<"RawLoanData", 'String'>
    readonly status: FieldRef<"RawLoanData", 'String'>
    readonly errorMessage: FieldRef<"RawLoanData", 'String'>
    readonly processedAt: FieldRef<"RawLoanData", 'DateTime'>
    readonly createdAt: FieldRef<"RawLoanData", 'DateTime'>
    readonly apiCriteria: FieldRef<"RawLoanData", 'Json'>
    readonly rawListingDataId: FieldRef<"RawLoanData", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RawLoanData findUnique
   */
  export type RawLoanDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter, which RawLoanData to fetch.
     */
    where: RawLoanDataWhereUniqueInput
  }

  /**
   * RawLoanData findUniqueOrThrow
   */
  export type RawLoanDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter, which RawLoanData to fetch.
     */
    where: RawLoanDataWhereUniqueInput
  }

  /**
   * RawLoanData findFirst
   */
  export type RawLoanDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter, which RawLoanData to fetch.
     */
    where?: RawLoanDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawLoanData to fetch.
     */
    orderBy?: RawLoanDataOrderByWithRelationInput | RawLoanDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawLoanData.
     */
    cursor?: RawLoanDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawLoanData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawLoanData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawLoanData.
     */
    distinct?: RawLoanDataScalarFieldEnum | RawLoanDataScalarFieldEnum[]
  }

  /**
   * RawLoanData findFirstOrThrow
   */
  export type RawLoanDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter, which RawLoanData to fetch.
     */
    where?: RawLoanDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawLoanData to fetch.
     */
    orderBy?: RawLoanDataOrderByWithRelationInput | RawLoanDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawLoanData.
     */
    cursor?: RawLoanDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawLoanData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawLoanData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawLoanData.
     */
    distinct?: RawLoanDataScalarFieldEnum | RawLoanDataScalarFieldEnum[]
  }

  /**
   * RawLoanData findMany
   */
  export type RawLoanDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter, which RawLoanData to fetch.
     */
    where?: RawLoanDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawLoanData to fetch.
     */
    orderBy?: RawLoanDataOrderByWithRelationInput | RawLoanDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RawLoanData.
     */
    cursor?: RawLoanDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawLoanData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawLoanData.
     */
    skip?: number
    distinct?: RawLoanDataScalarFieldEnum | RawLoanDataScalarFieldEnum[]
  }

  /**
   * RawLoanData create
   */
  export type RawLoanDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * The data needed to create a RawLoanData.
     */
    data: XOR<RawLoanDataCreateInput, RawLoanDataUncheckedCreateInput>
  }

  /**
   * RawLoanData createMany
   */
  export type RawLoanDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RawLoanData.
     */
    data: RawLoanDataCreateManyInput | RawLoanDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RawLoanData createManyAndReturn
   */
  export type RawLoanDataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * The data used to create many RawLoanData.
     */
    data: RawLoanDataCreateManyInput | RawLoanDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RawLoanData update
   */
  export type RawLoanDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * The data needed to update a RawLoanData.
     */
    data: XOR<RawLoanDataUpdateInput, RawLoanDataUncheckedUpdateInput>
    /**
     * Choose, which RawLoanData to update.
     */
    where: RawLoanDataWhereUniqueInput
  }

  /**
   * RawLoanData updateMany
   */
  export type RawLoanDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RawLoanData.
     */
    data: XOR<RawLoanDataUpdateManyMutationInput, RawLoanDataUncheckedUpdateManyInput>
    /**
     * Filter which RawLoanData to update
     */
    where?: RawLoanDataWhereInput
    /**
     * Limit how many RawLoanData to update.
     */
    limit?: number
  }

  /**
   * RawLoanData updateManyAndReturn
   */
  export type RawLoanDataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * The data used to update RawLoanData.
     */
    data: XOR<RawLoanDataUpdateManyMutationInput, RawLoanDataUncheckedUpdateManyInput>
    /**
     * Filter which RawLoanData to update
     */
    where?: RawLoanDataWhereInput
    /**
     * Limit how many RawLoanData to update.
     */
    limit?: number
  }

  /**
   * RawLoanData upsert
   */
  export type RawLoanDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * The filter to search for the RawLoanData to update in case it exists.
     */
    where: RawLoanDataWhereUniqueInput
    /**
     * In case the RawLoanData found by the `where` argument doesn't exist, create a new RawLoanData with this data.
     */
    create: XOR<RawLoanDataCreateInput, RawLoanDataUncheckedCreateInput>
    /**
     * In case the RawLoanData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RawLoanDataUpdateInput, RawLoanDataUncheckedUpdateInput>
  }

  /**
   * RawLoanData delete
   */
  export type RawLoanDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
    /**
     * Filter which RawLoanData to delete.
     */
    where: RawLoanDataWhereUniqueInput
  }

  /**
   * RawLoanData deleteMany
   */
  export type RawLoanDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawLoanData to delete
     */
    where?: RawLoanDataWhereInput
    /**
     * Limit how many RawLoanData to delete.
     */
    limit?: number
  }

  /**
   * RawLoanData.RawListingData
   */
  export type RawLoanData$RawListingDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    where?: RawListingDataWhereInput
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    cursor?: RawListingDataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RawListingDataScalarFieldEnum | RawListingDataScalarFieldEnum[]
  }

  /**
   * RawLoanData without action
   */
  export type RawLoanDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawLoanData
     */
    select?: RawLoanDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawLoanData
     */
    omit?: RawLoanDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawLoanDataInclude<ExtArgs> | null
  }


  /**
   * Model RawPhotoData
   */

  export type AggregateRawPhotoData = {
    _count: RawPhotoDataCountAggregateOutputType | null
    _min: RawPhotoDataMinAggregateOutputType | null
    _max: RawPhotoDataMaxAggregateOutputType | null
  }

  export type RawPhotoDataMinAggregateOutputType = {
    id: string | null
    mlsListingId: string | null
    mlsProviderId: string | null
    status: $Enums.PhotoProcessingStatus | null
    errorMessage: string | null
    processedAt: Date | null
    rawListingId: string | null
    createdAt: Date | null
    rawDataHash: string | null
    rawListingDataId: string | null
  }

  export type RawPhotoDataMaxAggregateOutputType = {
    id: string | null
    mlsListingId: string | null
    mlsProviderId: string | null
    status: $Enums.PhotoProcessingStatus | null
    errorMessage: string | null
    processedAt: Date | null
    rawListingId: string | null
    createdAt: Date | null
    rawDataHash: string | null
    rawListingDataId: string | null
  }

  export type RawPhotoDataCountAggregateOutputType = {
    id: number
    mlsListingId: number
    mlsProviderId: number
    rawResponse: number
    headers: number
    status: number
    errorMessage: number
    processedAt: number
    rawListingId: number
    photoUrls: number
    createdAt: number
    rawDataHash: number
    rawListingDataId: number
    _all: number
  }


  export type RawPhotoDataMinAggregateInputType = {
    id?: true
    mlsListingId?: true
    mlsProviderId?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    rawListingId?: true
    createdAt?: true
    rawDataHash?: true
    rawListingDataId?: true
  }

  export type RawPhotoDataMaxAggregateInputType = {
    id?: true
    mlsListingId?: true
    mlsProviderId?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    rawListingId?: true
    createdAt?: true
    rawDataHash?: true
    rawListingDataId?: true
  }

  export type RawPhotoDataCountAggregateInputType = {
    id?: true
    mlsListingId?: true
    mlsProviderId?: true
    rawResponse?: true
    headers?: true
    status?: true
    errorMessage?: true
    processedAt?: true
    rawListingId?: true
    photoUrls?: true
    createdAt?: true
    rawDataHash?: true
    rawListingDataId?: true
    _all?: true
  }

  export type RawPhotoDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawPhotoData to aggregate.
     */
    where?: RawPhotoDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawPhotoData to fetch.
     */
    orderBy?: RawPhotoDataOrderByWithRelationInput | RawPhotoDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RawPhotoDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawPhotoData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawPhotoData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RawPhotoData
    **/
    _count?: true | RawPhotoDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RawPhotoDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RawPhotoDataMaxAggregateInputType
  }

  export type GetRawPhotoDataAggregateType<T extends RawPhotoDataAggregateArgs> = {
        [P in keyof T & keyof AggregateRawPhotoData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRawPhotoData[P]>
      : GetScalarType<T[P], AggregateRawPhotoData[P]>
  }




  export type RawPhotoDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RawPhotoDataWhereInput
    orderBy?: RawPhotoDataOrderByWithAggregationInput | RawPhotoDataOrderByWithAggregationInput[]
    by: RawPhotoDataScalarFieldEnum[] | RawPhotoDataScalarFieldEnum
    having?: RawPhotoDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RawPhotoDataCountAggregateInputType | true
    _min?: RawPhotoDataMinAggregateInputType
    _max?: RawPhotoDataMaxAggregateInputType
  }

  export type RawPhotoDataGroupByOutputType = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonValue
    headers: JsonValue | null
    status: $Enums.PhotoProcessingStatus
    errorMessage: string | null
    processedAt: Date | null
    rawListingId: string
    photoUrls: string[]
    createdAt: Date
    rawDataHash: string
    rawListingDataId: string | null
    _count: RawPhotoDataCountAggregateOutputType | null
    _min: RawPhotoDataMinAggregateOutputType | null
    _max: RawPhotoDataMaxAggregateOutputType | null
  }

  type GetRawPhotoDataGroupByPayload<T extends RawPhotoDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RawPhotoDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RawPhotoDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RawPhotoDataGroupByOutputType[P]>
            : GetScalarType<T[P], RawPhotoDataGroupByOutputType[P]>
        }
      >
    >


  export type RawPhotoDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsListingId?: boolean
    mlsProviderId?: boolean
    rawResponse?: boolean
    headers?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    rawListingId?: boolean
    photoUrls?: boolean
    createdAt?: boolean
    rawDataHash?: boolean
    rawListingDataId?: boolean
    RawListingData?: boolean | RawPhotoData$RawListingDataArgs<ExtArgs>
    _count?: boolean | RawPhotoDataCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rawPhotoData"]>

  export type RawPhotoDataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsListingId?: boolean
    mlsProviderId?: boolean
    rawResponse?: boolean
    headers?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    rawListingId?: boolean
    photoUrls?: boolean
    createdAt?: boolean
    rawDataHash?: boolean
    rawListingDataId?: boolean
  }, ExtArgs["result"]["rawPhotoData"]>

  export type RawPhotoDataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mlsListingId?: boolean
    mlsProviderId?: boolean
    rawResponse?: boolean
    headers?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    rawListingId?: boolean
    photoUrls?: boolean
    createdAt?: boolean
    rawDataHash?: boolean
    rawListingDataId?: boolean
  }, ExtArgs["result"]["rawPhotoData"]>

  export type RawPhotoDataSelectScalar = {
    id?: boolean
    mlsListingId?: boolean
    mlsProviderId?: boolean
    rawResponse?: boolean
    headers?: boolean
    status?: boolean
    errorMessage?: boolean
    processedAt?: boolean
    rawListingId?: boolean
    photoUrls?: boolean
    createdAt?: boolean
    rawDataHash?: boolean
    rawListingDataId?: boolean
  }

  export type RawPhotoDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mlsListingId" | "mlsProviderId" | "rawResponse" | "headers" | "status" | "errorMessage" | "processedAt" | "rawListingId" | "photoUrls" | "createdAt" | "rawDataHash" | "rawListingDataId", ExtArgs["result"]["rawPhotoData"]>
  export type RawPhotoDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RawListingData?: boolean | RawPhotoData$RawListingDataArgs<ExtArgs>
    _count?: boolean | RawPhotoDataCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RawPhotoDataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RawPhotoDataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RawPhotoDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RawPhotoData"
    objects: {
      RawListingData: Prisma.$RawListingDataPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mlsListingId: string
      mlsProviderId: string
      rawResponse: Prisma.JsonValue
      headers: Prisma.JsonValue | null
      status: $Enums.PhotoProcessingStatus
      errorMessage: string | null
      processedAt: Date | null
      rawListingId: string
      photoUrls: string[]
      createdAt: Date
      rawDataHash: string
      rawListingDataId: string | null
    }, ExtArgs["result"]["rawPhotoData"]>
    composites: {}
  }

  type RawPhotoDataGetPayload<S extends boolean | null | undefined | RawPhotoDataDefaultArgs> = $Result.GetResult<Prisma.$RawPhotoDataPayload, S>

  type RawPhotoDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RawPhotoDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RawPhotoDataCountAggregateInputType | true
    }

  export interface RawPhotoDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RawPhotoData'], meta: { name: 'RawPhotoData' } }
    /**
     * Find zero or one RawPhotoData that matches the filter.
     * @param {RawPhotoDataFindUniqueArgs} args - Arguments to find a RawPhotoData
     * @example
     * // Get one RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RawPhotoDataFindUniqueArgs>(args: SelectSubset<T, RawPhotoDataFindUniqueArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RawPhotoData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RawPhotoDataFindUniqueOrThrowArgs} args - Arguments to find a RawPhotoData
     * @example
     * // Get one RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RawPhotoDataFindUniqueOrThrowArgs>(args: SelectSubset<T, RawPhotoDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawPhotoData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataFindFirstArgs} args - Arguments to find a RawPhotoData
     * @example
     * // Get one RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RawPhotoDataFindFirstArgs>(args?: SelectSubset<T, RawPhotoDataFindFirstArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RawPhotoData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataFindFirstOrThrowArgs} args - Arguments to find a RawPhotoData
     * @example
     * // Get one RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RawPhotoDataFindFirstOrThrowArgs>(args?: SelectSubset<T, RawPhotoDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RawPhotoData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findMany()
     * 
     * // Get first 10 RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rawPhotoDataWithIdOnly = await prisma.rawPhotoData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RawPhotoDataFindManyArgs>(args?: SelectSubset<T, RawPhotoDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RawPhotoData.
     * @param {RawPhotoDataCreateArgs} args - Arguments to create a RawPhotoData.
     * @example
     * // Create one RawPhotoData
     * const RawPhotoData = await prisma.rawPhotoData.create({
     *   data: {
     *     // ... data to create a RawPhotoData
     *   }
     * })
     * 
     */
    create<T extends RawPhotoDataCreateArgs>(args: SelectSubset<T, RawPhotoDataCreateArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RawPhotoData.
     * @param {RawPhotoDataCreateManyArgs} args - Arguments to create many RawPhotoData.
     * @example
     * // Create many RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RawPhotoDataCreateManyArgs>(args?: SelectSubset<T, RawPhotoDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RawPhotoData and returns the data saved in the database.
     * @param {RawPhotoDataCreateManyAndReturnArgs} args - Arguments to create many RawPhotoData.
     * @example
     * // Create many RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RawPhotoData and only return the `id`
     * const rawPhotoDataWithIdOnly = await prisma.rawPhotoData.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RawPhotoDataCreateManyAndReturnArgs>(args?: SelectSubset<T, RawPhotoDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RawPhotoData.
     * @param {RawPhotoDataDeleteArgs} args - Arguments to delete one RawPhotoData.
     * @example
     * // Delete one RawPhotoData
     * const RawPhotoData = await prisma.rawPhotoData.delete({
     *   where: {
     *     // ... filter to delete one RawPhotoData
     *   }
     * })
     * 
     */
    delete<T extends RawPhotoDataDeleteArgs>(args: SelectSubset<T, RawPhotoDataDeleteArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RawPhotoData.
     * @param {RawPhotoDataUpdateArgs} args - Arguments to update one RawPhotoData.
     * @example
     * // Update one RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RawPhotoDataUpdateArgs>(args: SelectSubset<T, RawPhotoDataUpdateArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RawPhotoData.
     * @param {RawPhotoDataDeleteManyArgs} args - Arguments to filter RawPhotoData to delete.
     * @example
     * // Delete a few RawPhotoData
     * const { count } = await prisma.rawPhotoData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RawPhotoDataDeleteManyArgs>(args?: SelectSubset<T, RawPhotoDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawPhotoData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RawPhotoDataUpdateManyArgs>(args: SelectSubset<T, RawPhotoDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RawPhotoData and returns the data updated in the database.
     * @param {RawPhotoDataUpdateManyAndReturnArgs} args - Arguments to update many RawPhotoData.
     * @example
     * // Update many RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RawPhotoData and only return the `id`
     * const rawPhotoDataWithIdOnly = await prisma.rawPhotoData.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RawPhotoDataUpdateManyAndReturnArgs>(args: SelectSubset<T, RawPhotoDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RawPhotoData.
     * @param {RawPhotoDataUpsertArgs} args - Arguments to update or create a RawPhotoData.
     * @example
     * // Update or create a RawPhotoData
     * const rawPhotoData = await prisma.rawPhotoData.upsert({
     *   create: {
     *     // ... data to create a RawPhotoData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RawPhotoData we want to update
     *   }
     * })
     */
    upsert<T extends RawPhotoDataUpsertArgs>(args: SelectSubset<T, RawPhotoDataUpsertArgs<ExtArgs>>): Prisma__RawPhotoDataClient<$Result.GetResult<Prisma.$RawPhotoDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RawPhotoData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataCountArgs} args - Arguments to filter RawPhotoData to count.
     * @example
     * // Count the number of RawPhotoData
     * const count = await prisma.rawPhotoData.count({
     *   where: {
     *     // ... the filter for the RawPhotoData we want to count
     *   }
     * })
    **/
    count<T extends RawPhotoDataCountArgs>(
      args?: Subset<T, RawPhotoDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RawPhotoDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RawPhotoData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RawPhotoDataAggregateArgs>(args: Subset<T, RawPhotoDataAggregateArgs>): Prisma.PrismaPromise<GetRawPhotoDataAggregateType<T>>

    /**
     * Group by RawPhotoData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RawPhotoDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RawPhotoDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RawPhotoDataGroupByArgs['orderBy'] }
        : { orderBy?: RawPhotoDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RawPhotoDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRawPhotoDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RawPhotoData model
   */
  readonly fields: RawPhotoDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RawPhotoData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RawPhotoDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    RawListingData<T extends RawPhotoData$RawListingDataArgs<ExtArgs> = {}>(args?: Subset<T, RawPhotoData$RawListingDataArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RawListingDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RawPhotoData model
   */
  interface RawPhotoDataFieldRefs {
    readonly id: FieldRef<"RawPhotoData", 'String'>
    readonly mlsListingId: FieldRef<"RawPhotoData", 'String'>
    readonly mlsProviderId: FieldRef<"RawPhotoData", 'String'>
    readonly rawResponse: FieldRef<"RawPhotoData", 'Json'>
    readonly headers: FieldRef<"RawPhotoData", 'Json'>
    readonly status: FieldRef<"RawPhotoData", 'PhotoProcessingStatus'>
    readonly errorMessage: FieldRef<"RawPhotoData", 'String'>
    readonly processedAt: FieldRef<"RawPhotoData", 'DateTime'>
    readonly rawListingId: FieldRef<"RawPhotoData", 'String'>
    readonly photoUrls: FieldRef<"RawPhotoData", 'String[]'>
    readonly createdAt: FieldRef<"RawPhotoData", 'DateTime'>
    readonly rawDataHash: FieldRef<"RawPhotoData", 'String'>
    readonly rawListingDataId: FieldRef<"RawPhotoData", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RawPhotoData findUnique
   */
  export type RawPhotoDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter, which RawPhotoData to fetch.
     */
    where: RawPhotoDataWhereUniqueInput
  }

  /**
   * RawPhotoData findUniqueOrThrow
   */
  export type RawPhotoDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter, which RawPhotoData to fetch.
     */
    where: RawPhotoDataWhereUniqueInput
  }

  /**
   * RawPhotoData findFirst
   */
  export type RawPhotoDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter, which RawPhotoData to fetch.
     */
    where?: RawPhotoDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawPhotoData to fetch.
     */
    orderBy?: RawPhotoDataOrderByWithRelationInput | RawPhotoDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawPhotoData.
     */
    cursor?: RawPhotoDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawPhotoData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawPhotoData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawPhotoData.
     */
    distinct?: RawPhotoDataScalarFieldEnum | RawPhotoDataScalarFieldEnum[]
  }

  /**
   * RawPhotoData findFirstOrThrow
   */
  export type RawPhotoDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter, which RawPhotoData to fetch.
     */
    where?: RawPhotoDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawPhotoData to fetch.
     */
    orderBy?: RawPhotoDataOrderByWithRelationInput | RawPhotoDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RawPhotoData.
     */
    cursor?: RawPhotoDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawPhotoData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawPhotoData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RawPhotoData.
     */
    distinct?: RawPhotoDataScalarFieldEnum | RawPhotoDataScalarFieldEnum[]
  }

  /**
   * RawPhotoData findMany
   */
  export type RawPhotoDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter, which RawPhotoData to fetch.
     */
    where?: RawPhotoDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RawPhotoData to fetch.
     */
    orderBy?: RawPhotoDataOrderByWithRelationInput | RawPhotoDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RawPhotoData.
     */
    cursor?: RawPhotoDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RawPhotoData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RawPhotoData.
     */
    skip?: number
    distinct?: RawPhotoDataScalarFieldEnum | RawPhotoDataScalarFieldEnum[]
  }

  /**
   * RawPhotoData create
   */
  export type RawPhotoDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * The data needed to create a RawPhotoData.
     */
    data: XOR<RawPhotoDataCreateInput, RawPhotoDataUncheckedCreateInput>
  }

  /**
   * RawPhotoData createMany
   */
  export type RawPhotoDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RawPhotoData.
     */
    data: RawPhotoDataCreateManyInput | RawPhotoDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RawPhotoData createManyAndReturn
   */
  export type RawPhotoDataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * The data used to create many RawPhotoData.
     */
    data: RawPhotoDataCreateManyInput | RawPhotoDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RawPhotoData update
   */
  export type RawPhotoDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * The data needed to update a RawPhotoData.
     */
    data: XOR<RawPhotoDataUpdateInput, RawPhotoDataUncheckedUpdateInput>
    /**
     * Choose, which RawPhotoData to update.
     */
    where: RawPhotoDataWhereUniqueInput
  }

  /**
   * RawPhotoData updateMany
   */
  export type RawPhotoDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RawPhotoData.
     */
    data: XOR<RawPhotoDataUpdateManyMutationInput, RawPhotoDataUncheckedUpdateManyInput>
    /**
     * Filter which RawPhotoData to update
     */
    where?: RawPhotoDataWhereInput
    /**
     * Limit how many RawPhotoData to update.
     */
    limit?: number
  }

  /**
   * RawPhotoData updateManyAndReturn
   */
  export type RawPhotoDataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * The data used to update RawPhotoData.
     */
    data: XOR<RawPhotoDataUpdateManyMutationInput, RawPhotoDataUncheckedUpdateManyInput>
    /**
     * Filter which RawPhotoData to update
     */
    where?: RawPhotoDataWhereInput
    /**
     * Limit how many RawPhotoData to update.
     */
    limit?: number
  }

  /**
   * RawPhotoData upsert
   */
  export type RawPhotoDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * The filter to search for the RawPhotoData to update in case it exists.
     */
    where: RawPhotoDataWhereUniqueInput
    /**
     * In case the RawPhotoData found by the `where` argument doesn't exist, create a new RawPhotoData with this data.
     */
    create: XOR<RawPhotoDataCreateInput, RawPhotoDataUncheckedCreateInput>
    /**
     * In case the RawPhotoData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RawPhotoDataUpdateInput, RawPhotoDataUncheckedUpdateInput>
  }

  /**
   * RawPhotoData delete
   */
  export type RawPhotoDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
    /**
     * Filter which RawPhotoData to delete.
     */
    where: RawPhotoDataWhereUniqueInput
  }

  /**
   * RawPhotoData deleteMany
   */
  export type RawPhotoDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RawPhotoData to delete
     */
    where?: RawPhotoDataWhereInput
    /**
     * Limit how many RawPhotoData to delete.
     */
    limit?: number
  }

  /**
   * RawPhotoData.RawListingData
   */
  export type RawPhotoData$RawListingDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawListingData
     */
    select?: RawListingDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawListingData
     */
    omit?: RawListingDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawListingDataInclude<ExtArgs> | null
    where?: RawListingDataWhereInput
    orderBy?: RawListingDataOrderByWithRelationInput | RawListingDataOrderByWithRelationInput[]
    cursor?: RawListingDataWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RawListingDataScalarFieldEnum | RawListingDataScalarFieldEnum[]
  }

  /**
   * RawPhotoData without action
   */
  export type RawPhotoDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RawPhotoData
     */
    select?: RawPhotoDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RawPhotoData
     */
    omit?: RawPhotoDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RawPhotoDataInclude<ExtArgs> | null
  }


  /**
   * Model spatial_ref_sys
   */

  export type AggregateSpatial_ref_sys = {
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  export type Spatial_ref_sysAvgAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysSumAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysMinAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysMaxAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysCountAggregateOutputType = {
    srid: number
    auth_name: number
    auth_srid: number
    srtext: number
    proj4text: number
    _all: number
  }


  export type Spatial_ref_sysAvgAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysSumAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysMinAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysMaxAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysCountAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
    _all?: true
  }

  export type Spatial_ref_sysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to aggregate.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spatial_ref_sys
    **/
    _count?: true | Spatial_ref_sysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Spatial_ref_sysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Spatial_ref_sysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Spatial_ref_sysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type GetSpatial_ref_sysAggregateType<T extends Spatial_ref_sysAggregateArgs> = {
        [P in keyof T & keyof AggregateSpatial_ref_sys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
      : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
  }




  export type spatial_ref_sysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spatial_ref_sysWhereInput
    orderBy?: spatial_ref_sysOrderByWithAggregationInput | spatial_ref_sysOrderByWithAggregationInput[]
    by: Spatial_ref_sysScalarFieldEnum[] | Spatial_ref_sysScalarFieldEnum
    having?: spatial_ref_sysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Spatial_ref_sysCountAggregateInputType | true
    _avg?: Spatial_ref_sysAvgAggregateInputType
    _sum?: Spatial_ref_sysSumAggregateInputType
    _min?: Spatial_ref_sysMinAggregateInputType
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type Spatial_ref_sysGroupByOutputType = {
    srid: number
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  type GetSpatial_ref_sysGroupByPayload<T extends spatial_ref_sysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Spatial_ref_sysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Spatial_ref_sysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
            : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
        }
      >
    >


  export type spatial_ref_sysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectScalar = {
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }

  export type spatial_ref_sysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"srid" | "auth_name" | "auth_srid" | "srtext" | "proj4text", ExtArgs["result"]["spatial_ref_sys"]>

  export type $spatial_ref_sysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spatial_ref_sys"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      srid: number
      auth_name: string | null
      auth_srid: number | null
      srtext: string | null
      proj4text: string | null
    }, ExtArgs["result"]["spatial_ref_sys"]>
    composites: {}
  }

  type spatial_ref_sysGetPayload<S extends boolean | null | undefined | spatial_ref_sysDefaultArgs> = $Result.GetResult<Prisma.$spatial_ref_sysPayload, S>

  type spatial_ref_sysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<spatial_ref_sysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Spatial_ref_sysCountAggregateInputType | true
    }

  export interface spatial_ref_sysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spatial_ref_sys'], meta: { name: 'spatial_ref_sys' } }
    /**
     * Find zero or one Spatial_ref_sys that matches the filter.
     * @param {spatial_ref_sysFindUniqueArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends spatial_ref_sysFindUniqueArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Spatial_ref_sys that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {spatial_ref_sysFindUniqueOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends spatial_ref_sysFindUniqueOrThrowArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends spatial_ref_sysFindFirstArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spatial_ref_sys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends spatial_ref_sysFindFirstOrThrowArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
     * 
     * // Get first 10 Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany({ take: 10 })
     * 
     * // Only select the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.findMany({ select: { srid: true } })
     * 
     */
    findMany<T extends spatial_ref_sysFindManyArgs>(args?: SelectSubset<T, spatial_ref_sysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Spatial_ref_sys.
     * @param {spatial_ref_sysCreateArgs} args - Arguments to create a Spatial_ref_sys.
     * @example
     * // Create one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.create({
     *   data: {
     *     // ... data to create a Spatial_ref_sys
     *   }
     * })
     * 
     */
    create<T extends spatial_ref_sysCreateArgs>(args: SelectSubset<T, spatial_ref_sysCreateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Spatial_ref_sys.
     * @param {spatial_ref_sysCreateManyArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends spatial_ref_sysCreateManyArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Spatial_ref_sys and returns the data saved in the database.
     * @param {spatial_ref_sysCreateManyAndReturnArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Spatial_ref_sys and only return the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.createManyAndReturn({
     *   select: { srid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends spatial_ref_sysCreateManyAndReturnArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteArgs} args - Arguments to delete one Spatial_ref_sys.
     * @example
     * // Delete one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.delete({
     *   where: {
     *     // ... filter to delete one Spatial_ref_sys
     *   }
     * })
     * 
     */
    delete<T extends spatial_ref_sysDeleteArgs>(args: SelectSubset<T, spatial_ref_sysDeleteArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpdateArgs} args - Arguments to update one Spatial_ref_sys.
     * @example
     * // Update one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends spatial_ref_sysUpdateArgs>(args: SelectSubset<T, spatial_ref_sysUpdateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteManyArgs} args - Arguments to filter Spatial_ref_sys to delete.
     * @example
     * // Delete a few Spatial_ref_sys
     * const { count } = await prisma.spatial_ref_sys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends spatial_ref_sysDeleteManyArgs>(args?: SelectSubset<T, spatial_ref_sysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends spatial_ref_sysUpdateManyArgs>(args: SelectSubset<T, spatial_ref_sysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spatial_ref_sys and returns the data updated in the database.
     * @param {spatial_ref_sysUpdateManyAndReturnArgs} args - Arguments to update many Spatial_ref_sys.
     * @example
     * // Update many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Spatial_ref_sys and only return the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.updateManyAndReturn({
     *   select: { srid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends spatial_ref_sysUpdateManyAndReturnArgs>(args: SelectSubset<T, spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpsertArgs} args - Arguments to update or create a Spatial_ref_sys.
     * @example
     * // Update or create a Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.upsert({
     *   create: {
     *     // ... data to create a Spatial_ref_sys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to update
     *   }
     * })
     */
    upsert<T extends spatial_ref_sysUpsertArgs>(args: SelectSubset<T, spatial_ref_sysUpsertArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysCountArgs} args - Arguments to filter Spatial_ref_sys to count.
     * @example
     * // Count the number of Spatial_ref_sys
     * const count = await prisma.spatial_ref_sys.count({
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to count
     *   }
     * })
    **/
    count<T extends spatial_ref_sysCountArgs>(
      args?: Subset<T, spatial_ref_sysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Spatial_ref_sysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Spatial_ref_sysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Spatial_ref_sysAggregateArgs>(args: Subset<T, Spatial_ref_sysAggregateArgs>): Prisma.PrismaPromise<GetSpatial_ref_sysAggregateType<T>>

    /**
     * Group by Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends spatial_ref_sysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: spatial_ref_sysGroupByArgs['orderBy'] }
        : { orderBy?: spatial_ref_sysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, spatial_ref_sysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpatial_ref_sysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spatial_ref_sys model
   */
  readonly fields: spatial_ref_sysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spatial_ref_sys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__spatial_ref_sysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the spatial_ref_sys model
   */
  interface spatial_ref_sysFieldRefs {
    readonly srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly auth_name: FieldRef<"spatial_ref_sys", 'String'>
    readonly auth_srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly srtext: FieldRef<"spatial_ref_sys", 'String'>
    readonly proj4text: FieldRef<"spatial_ref_sys", 'String'>
  }
    

  // Custom InputTypes
  /**
   * spatial_ref_sys findUnique
   */
  export type spatial_ref_sysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findUniqueOrThrow
   */
  export type spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findFirst
   */
  export type spatial_ref_sysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findFirstOrThrow
   */
  export type spatial_ref_sysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findMany
   */
  export type spatial_ref_sysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys create
   */
  export type spatial_ref_sysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data needed to create a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
  }

  /**
   * spatial_ref_sys createMany
   */
  export type spatial_ref_sysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys createManyAndReturn
   */
  export type spatial_ref_sysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys update
   */
  export type spatial_ref_sysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data needed to update a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
    /**
     * Choose, which spatial_ref_sys to update.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys updateMany
   */
  export type spatial_ref_sysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateManyMutationInput, spatial_ref_sysUncheckedUpdateManyInput>
    /**
     * Filter which spatial_ref_sys to update
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to update.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys updateManyAndReturn
   */
  export type spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data used to update spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateManyMutationInput, spatial_ref_sysUncheckedUpdateManyInput>
    /**
     * Filter which spatial_ref_sys to update
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to update.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys upsert
   */
  export type spatial_ref_sysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The filter to search for the spatial_ref_sys to update in case it exists.
     */
    where: spatial_ref_sysWhereUniqueInput
    /**
     * In case the spatial_ref_sys found by the `where` argument doesn't exist, create a new spatial_ref_sys with this data.
     */
    create: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
    /**
     * In case the spatial_ref_sys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
  }

  /**
   * spatial_ref_sys delete
   */
  export type spatial_ref_sysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter which spatial_ref_sys to delete.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys deleteMany
   */
  export type spatial_ref_sysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to delete
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to delete.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys without action
   */
  export type spatial_ref_sysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AssumableMortgageScalarFieldEnum: {
    id: 'id',
    currentBalance: 'currentBalance',
    interestRate: 'interestRate',
    monthlyPayment: 'monthlyPayment',
    remainingTerm: 'remainingTerm',
    qualifyingIncome: 'qualifyingIncome',
    qualifyingDti: 'qualifyingDti',
    assumabilityStatus: 'assumabilityStatus',
    lastVerifiedDate: 'lastVerifiedDate',
    verificationNotes: 'verificationNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    downPayment: 'downPayment',
    monthlyAllInPayment: 'monthlyAllInPayment',
    monthlyHoa: 'monthlyHoa',
    monthlyInsurance: 'monthlyInsurance',
    monthlyPmi: 'monthlyPmi',
    monthlyPropertyTax: 'monthlyPropertyTax',
    percentDown: 'percentDown',
    tileMonthlyPayment: 'tileMonthlyPayment',
    assumableDesirabilityScore: 'assumableDesirabilityScore',
    isAssumableDesirable: 'isAssumableDesirable',
    maxDownPaymentThreshold: 'maxDownPaymentThreshold',
    maxLoanBalanceRatioThreshold: 'maxLoanBalanceRatioThreshold',
    rawListingDataId: 'rawListingDataId',
    rawLoanDataId: 'rawLoanDataId'
  };

  export type AssumableMortgageScalarFieldEnum = (typeof AssumableMortgageScalarFieldEnum)[keyof typeof AssumableMortgageScalarFieldEnum]


  export const DataCorrectionScalarFieldEnum: {
    id: 'id',
    entityType: 'entityType',
    entityId: 'entityId',
    field: 'field',
    originalValue: 'originalValue',
    correctedValue: 'correctedValue',
    reason: 'reason',
    status: 'status',
    appliedAt: 'appliedAt',
    createdBy: 'createdBy',
    createdByAuditSource: 'createdByAuditSource',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    column: 'column',
    fieldPath: 'fieldPath',
    isArrayField: 'isArrayField',
    isJsonField: 'isJsonField',
    rawDataId: 'rawDataId'
  };

  export type DataCorrectionScalarFieldEnum = (typeof DataCorrectionScalarFieldEnum)[keyof typeof DataCorrectionScalarFieldEnum]


  export const ListingScalarFieldEnum: {
    id: 'id',
    mlsProviderId: 'mlsProviderId',
    parcelNumber: 'parcelNumber',
    zipCode: 'zipCode',
    rawDataHash: 'rawDataHash',
    mlsListingId: 'mlsListingId',
    lastMlsUpdate: 'lastMlsUpdate',
    isAssumable: 'isAssumable',
    processingState: 'processingState',
    deletedAt: 'deletedAt',
    status: 'status',
    price: 'price',
    propertyType: 'propertyType',
    bedrooms: 'bedrooms',
    bathrooms: 'bathrooms',
    squareFeet: 'squareFeet',
    yearBuilt: 'yearBuilt',
    address: 'address',
    city: 'city',
    state: 'state',
    latitude: 'latitude',
    longitude: 'longitude',
    tileX: 'tileX',
    tileY: 'tileY',
    tileZ: 'tileZ',
    amenities: 'amenities',
    interiorFeatures: 'interiorFeatures',
    exteriorFeatures: 'exteriorFeatures',
    parkingDetails: 'parkingDetails',
    associationDetails: 'associationDetails',
    schoolDetails: 'schoolDetails',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    listedAt: 'listedAt',
    lastStatusChange: 'lastStatusChange',
    unitNumber: 'unitNumber',
    mlsInstanceId: 'mlsInstanceId',
    photoUrls: 'photoUrls',
    propertyRadarId: 'propertyRadarId',
    denormalizedAssumableMonthlyPayment: 'denormalizedAssumableMonthlyPayment',
    rawDataId: 'rawDataId',
    tilePrice: 'tilePrice',
    tileDenormalizedAssumableMonthlyPayment: 'tileDenormalizedAssumableMonthlyPayment',
    isRootsListing: 'isRootsListing',
    modifierScore: 'modifierScore',
    propertySubType: 'propertySubType',
    remarks: 'remarks',
    documentUrls: 'documentUrls',
    videoUrls: 'videoUrls',
    staticPriority: 'staticPriority',
    tileId10: 'tileId10',
    tileId11: 'tileId11',
    tileId12: 'tileId12',
    tileId13: 'tileId13',
    tileId14: 'tileId14',
    tileId15: 'tileId15',
    tileId16: 'tileId16',
    tileId17: 'tileId17',
    tileId18: 'tileId18',
    tileId19: 'tileId19',
    tileId20: 'tileId20',
    tileId8: 'tileId8',
    tileId9: 'tileId9',
    tileId6: 'tileId6',
    tileId7: 'tileId7',
    denormalizedAssumableDownPayment: 'denormalizedAssumableDownPayment',
    denormalizedAssumableInterestRate: 'denormalizedAssumableInterestRate',
    denormalizedAssumableLoanType: 'denormalizedAssumableLoanType',
    hasPool: 'hasPool',
    is55Plus: 'is55Plus',
    monthlyHoa: 'monthlyHoa',
    streetAddress: 'streetAddress',
    assumableDesirabilityScore: 'assumableDesirabilityScore',
    isAssumableDesirable: 'isAssumableDesirable',
    processingVersion: 'processingVersion',
    lotSizeAcres: 'lotSizeAcres',
    lotSizeSquareFeet: 'lotSizeSquareFeet',
    agentDetails: 'agentDetails',
    agentEmail: 'agentEmail',
    agentName: 'agentName',
    agentOfficeEmail: 'agentOfficeEmail',
    agentOfficeName: 'agentOfficeName',
    agentOfficePhone: 'agentOfficePhone',
    agentPhone: 'agentPhone',
    coListingAgents: 'coListingAgents',
    denormalizedMlsInstanceLogoUrl: 'denormalizedMlsInstanceLogoUrl',
    denormalizedMlsInstanceName: 'denormalizedMlsInstanceName',
    agentMlsId: 'agentMlsId',
    denormalizedMlsInstanceAcronym: 'denormalizedMlsInstanceAcronym',
    agentOfficeMlsId: 'agentOfficeMlsId',
    hasBasement: 'hasBasement',
    stories: 'stories'
  };

  export type ListingScalarFieldEnum = (typeof ListingScalarFieldEnum)[keyof typeof ListingScalarFieldEnum]


  export const ListingAuditScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    action: 'action',
    source: 'source',
    sourceId: 'sourceId',
    sourceName: 'sourceName',
    changes: 'changes',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type ListingAuditScalarFieldEnum = (typeof ListingAuditScalarFieldEnum)[keyof typeof ListingAuditScalarFieldEnum]


  export const ListingHistoryScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    price: 'price',
    status: 'status',
    rawData: 'rawData',
    changedFields: 'changedFields',
    effectiveDate: 'effectiveDate',
    createdAt: 'createdAt',
    auditId: 'auditId'
  };

  export type ListingHistoryScalarFieldEnum = (typeof ListingHistoryScalarFieldEnum)[keyof typeof ListingHistoryScalarFieldEnum]


  export const ListingLocationScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId'
  };

  export type ListingLocationScalarFieldEnum = (typeof ListingLocationScalarFieldEnum)[keyof typeof ListingLocationScalarFieldEnum]


  export const ListingPhotoScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    mlsUrl: 'mlsUrl',
    s3Url: 's3Url',
    order: 'order',
    lastChecked: 'lastChecked',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ListingPhotoScalarFieldEnum = (typeof ListingPhotoScalarFieldEnum)[keyof typeof ListingPhotoScalarFieldEnum]


  export const ListingReportScalarFieldEnum: {
    id: 'id',
    listingId: 'listingId',
    userId: 'userId',
    reporterType: 'reporterType',
    reason: 'reason',
    details: 'details',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ListingReportScalarFieldEnum = (typeof ListingReportScalarFieldEnum)[keyof typeof ListingReportScalarFieldEnum]


  export const LoanScalarFieldEnum: {
    id: 'id',
    propertyId: 'propertyId',
    loanPosition: 'loanPosition',
    purpose: 'purpose',
    loanType: 'loanType',
    recordingDate: 'recordingDate',
    concurrent: 'concurrent',
    initialAmount: 'initialAmount',
    remainingBalance: 'remainingBalance',
    termYears: 'termYears',
    lenderName: 'lenderName',
    rateType: 'rateType',
    interestRate: 'interestRate',
    currentPeriod: 'currentPeriod',
    startingPeriod: 'startingPeriod',
    totalPayments: 'totalPayments',
    maturityDate: 'maturityDate',
    monthlyPayment: 'monthlyPayment',
    ownerOccupied: 'ownerOccupied',
    assumableMortgageId: 'assumableMortgageId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    mlsInstanceId: 'mlsInstanceId',
    deletedAt: 'deletedAt',
    rawLoanDataId: 'rawLoanDataId',
    interestRateEstimated: 'interestRateEstimated',
    isAssumable: 'isAssumable'
  };

  export type LoanScalarFieldEnum = (typeof LoanScalarFieldEnum)[keyof typeof LoanScalarFieldEnum]


  export const MlsInstanceDetailsScalarFieldEnum: {
    id: 'id',
    instanceId: 'instanceId',
    acronym: 'acronym',
    name: 'name',
    mlsNumber: 'mlsNumber',
    logoUrl: 'logoUrl',
    region: 'region',
    state: 'state',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MlsInstanceDetailsScalarFieldEnum = (typeof MlsInstanceDetailsScalarFieldEnum)[keyof typeof MlsInstanceDetailsScalarFieldEnum]


  export const MlsInstanceVisibilityScalarFieldEnum: {
    id: 'id',
    mlsInstanceId: 'mlsInstanceId',
    isHidden: 'isHidden',
    reason: 'reason',
    hiddenAt: 'hiddenAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MlsInstanceVisibilityScalarFieldEnum = (typeof MlsInstanceVisibilityScalarFieldEnum)[keyof typeof MlsInstanceVisibilityScalarFieldEnum]


  export const PropertyRadarScalarFieldEnum: {
    id: 'id',
    parcelNumber: 'parcelNumber',
    address: 'address',
    city: 'city',
    state: 'state',
    zipCode: 'zipCode',
    county: 'county',
    propertyType: 'propertyType',
    yearBuilt: 'yearBuilt',
    units: 'units',
    squareFeet: 'squareFeet',
    annualTaxes: 'annualTaxes',
    avm: 'avm',
    availableEquity: 'availableEquity',
    cltv: 'cltv',
    equityPercent: 'equityPercent',
    ownerName1: 'ownerName1',
    ownerName2: 'ownerName2',
    ownerAddress: 'ownerAddress',
    ownerCity: 'ownerCity',
    ownerState: 'ownerState',
    ownerZip: 'ownerZip',
    lastTransferDate: 'lastTransferDate',
    lastTransferValue: 'lastTransferValue',
    lastTransferType: 'lastTransferType',
    lastTransferDownPayment: 'lastTransferDownPayment',
    lastTransferDownPaymentPercent: 'lastTransferDownPaymentPercent',
    deletedAt: 'deletedAt',
    loanDataFetchedAt: 'loanDataFetchedAt',
    denormalizedListingUnitNumber: 'denormalizedListingUnitNumber',
    needsReview: 'needsReview',
    reviewReason: 'reviewReason',
    unitNumber: 'unitNumber',
    listingId: 'listingId',
    rawLoanDataId: 'rawLoanDataId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PropertyRadarScalarFieldEnum = (typeof PropertyRadarScalarFieldEnum)[keyof typeof PropertyRadarScalarFieldEnum]


  export const RawListingDataScalarFieldEnum: {
    id: 'id',
    mlsProviderId: 'mlsProviderId',
    rawData: 'rawData',
    rawDataHash: 'rawDataHash',
    status: 'status',
    errorMessage: 'errorMessage',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    processedAt: 'processedAt',
    parcelNumber: 'parcelNumber',
    zipCode: 'zipCode',
    mlsStatus: 'mlsStatus',
    modificationTimestamp: 'modificationTimestamp',
    mlsInstanceId: 'mlsInstanceId',
    propertyType: 'propertyType',
    statusChangeTimestamp: 'statusChangeTimestamp',
    unitNumber: 'unitNumber',
    unparsedAddress: 'unparsedAddress',
    loanDataError: 'loanDataError',
    loanDataPullStatus: 'loanDataPullStatus',
    photosPullError: 'photosPullError',
    photosPullStatus: 'photosPullStatus',
    rawLoanDataId: 'rawLoanDataId',
    rawPhotoDataId: 'rawPhotoDataId',
    processingVersion: 'processingVersion',
    lastPhotosPullAt: 'lastPhotosPullAt',
    photosCount: 'photosCount',
    photosPullAttempts: 'photosPullAttempts',
    pullerVersion: 'pullerVersion'
  };

  export type RawListingDataScalarFieldEnum = (typeof RawListingDataScalarFieldEnum)[keyof typeof RawListingDataScalarFieldEnum]


  export const RawLoanDataScalarFieldEnum: {
    id: 'id',
    mlsProviderId: 'mlsProviderId',
    mlsInstanceId: 'mlsInstanceId',
    parcelNumber: 'parcelNumber',
    zipCode: 'zipCode',
    unitNumber: 'unitNumber',
    rawData: 'rawData',
    rawDataHash: 'rawDataHash',
    status: 'status',
    errorMessage: 'errorMessage',
    processedAt: 'processedAt',
    createdAt: 'createdAt',
    apiCriteria: 'apiCriteria',
    rawListingDataId: 'rawListingDataId'
  };

  export type RawLoanDataScalarFieldEnum = (typeof RawLoanDataScalarFieldEnum)[keyof typeof RawLoanDataScalarFieldEnum]


  export const RawPhotoDataScalarFieldEnum: {
    id: 'id',
    mlsListingId: 'mlsListingId',
    mlsProviderId: 'mlsProviderId',
    rawResponse: 'rawResponse',
    headers: 'headers',
    status: 'status',
    errorMessage: 'errorMessage',
    processedAt: 'processedAt',
    rawListingId: 'rawListingId',
    photoUrls: 'photoUrls',
    createdAt: 'createdAt',
    rawDataHash: 'rawDataHash',
    rawListingDataId: 'rawListingDataId'
  };

  export type RawPhotoDataScalarFieldEnum = (typeof RawPhotoDataScalarFieldEnum)[keyof typeof RawPhotoDataScalarFieldEnum]


  export const Spatial_ref_sysScalarFieldEnum: {
    srid: 'srid',
    auth_name: 'auth_name',
    auth_srid: 'auth_srid',
    srtext: 'srtext',
    proj4text: 'proj4text'
  };

  export type Spatial_ref_sysScalarFieldEnum = (typeof Spatial_ref_sysScalarFieldEnum)[keyof typeof Spatial_ref_sysScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'EntityType'
   */
  export type EnumEntityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EntityType'>
    


  /**
   * Reference to a field of type 'EntityType[]'
   */
  export type ListEnumEntityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EntityType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'CorrectionStatus'
   */
  export type EnumCorrectionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CorrectionStatus'>
    


  /**
   * Reference to a field of type 'CorrectionStatus[]'
   */
  export type ListEnumCorrectionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CorrectionStatus[]'>
    


  /**
   * Reference to a field of type 'AuditSource'
   */
  export type EnumAuditSourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditSource'>
    


  /**
   * Reference to a field of type 'AuditSource[]'
   */
  export type ListEnumAuditSourceFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditSource[]'>
    


  /**
   * Reference to a field of type 'ListingStatus'
   */
  export type EnumListingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingStatus'>
    


  /**
   * Reference to a field of type 'ListingStatus[]'
   */
  export type ListEnumListingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingStatus[]'>
    


  /**
   * Reference to a field of type 'PropertyType'
   */
  export type EnumPropertyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyType'>
    


  /**
   * Reference to a field of type 'PropertyType[]'
   */
  export type ListEnumPropertyTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PropertyType[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'LoanType'
   */
  export type EnumLoanTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LoanType'>
    


  /**
   * Reference to a field of type 'LoanType[]'
   */
  export type ListEnumLoanTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LoanType[]'>
    


  /**
   * Reference to a field of type 'ReporterType'
   */
  export type EnumReporterTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReporterType'>
    


  /**
   * Reference to a field of type 'ReporterType[]'
   */
  export type ListEnumReporterTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReporterType[]'>
    


  /**
   * Reference to a field of type 'ListingReportReason'
   */
  export type EnumListingReportReasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingReportReason'>
    


  /**
   * Reference to a field of type 'ListingReportReason[]'
   */
  export type ListEnumListingReportReasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ListingReportReason[]'>
    


  /**
   * Reference to a field of type 'DataPullStatus'
   */
  export type EnumDataPullStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DataPullStatus'>
    


  /**
   * Reference to a field of type 'DataPullStatus[]'
   */
  export type ListEnumDataPullStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DataPullStatus[]'>
    


  /**
   * Reference to a field of type 'PhotoProcessingStatus'
   */
  export type EnumPhotoProcessingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PhotoProcessingStatus'>
    


  /**
   * Reference to a field of type 'PhotoProcessingStatus[]'
   */
  export type ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PhotoProcessingStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AssumableMortgageWhereInput = {
    AND?: AssumableMortgageWhereInput | AssumableMortgageWhereInput[]
    OR?: AssumableMortgageWhereInput[]
    NOT?: AssumableMortgageWhereInput | AssumableMortgageWhereInput[]
    id?: StringFilter<"AssumableMortgage"> | string
    currentBalance?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFilter<"AssumableMortgage"> | number
    qualifyingIncome?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFilter<"AssumableMortgage"> | string
    lastVerifiedDate?: DateTimeNullableFilter<"AssumableMortgage"> | Date | string | null
    verificationNotes?: StringNullableFilter<"AssumableMortgage"> | string | null
    createdAt?: DateTimeFilter<"AssumableMortgage"> | Date | string
    updatedAt?: DateTimeFilter<"AssumableMortgage"> | Date | string
    downPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: StringNullableFilter<"AssumableMortgage"> | string | null
    assumableDesirabilityScore?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFilter<"AssumableMortgage"> | boolean
    maxDownPaymentThreshold?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: StringNullableFilter<"AssumableMortgage"> | string | null
    rawLoanDataId?: StringNullableFilter<"AssumableMortgage"> | string | null
    Loan?: XOR<LoanNullableScalarRelationFilter, LoanWhereInput> | null
  }

  export type AssumableMortgageOrderByWithRelationInput = {
    id?: SortOrder
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrderInput | SortOrder
    qualifyingDti?: SortOrderInput | SortOrder
    assumabilityStatus?: SortOrder
    lastVerifiedDate?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    tileMonthlyPayment?: SortOrderInput | SortOrder
    assumableDesirabilityScore?: SortOrderInput | SortOrder
    isAssumableDesirable?: SortOrder
    maxDownPaymentThreshold?: SortOrderInput | SortOrder
    maxLoanBalanceRatioThreshold?: SortOrderInput | SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    Loan?: LoanOrderByWithRelationInput
  }

  export type AssumableMortgageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssumableMortgageWhereInput | AssumableMortgageWhereInput[]
    OR?: AssumableMortgageWhereInput[]
    NOT?: AssumableMortgageWhereInput | AssumableMortgageWhereInput[]
    currentBalance?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFilter<"AssumableMortgage"> | number
    qualifyingIncome?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFilter<"AssumableMortgage"> | string
    lastVerifiedDate?: DateTimeNullableFilter<"AssumableMortgage"> | Date | string | null
    verificationNotes?: StringNullableFilter<"AssumableMortgage"> | string | null
    createdAt?: DateTimeFilter<"AssumableMortgage"> | Date | string
    updatedAt?: DateTimeFilter<"AssumableMortgage"> | Date | string
    downPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: StringNullableFilter<"AssumableMortgage"> | string | null
    assumableDesirabilityScore?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFilter<"AssumableMortgage"> | boolean
    maxDownPaymentThreshold?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: DecimalNullableFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: StringNullableFilter<"AssumableMortgage"> | string | null
    rawLoanDataId?: StringNullableFilter<"AssumableMortgage"> | string | null
    Loan?: XOR<LoanNullableScalarRelationFilter, LoanWhereInput> | null
  }, "id">

  export type AssumableMortgageOrderByWithAggregationInput = {
    id?: SortOrder
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrderInput | SortOrder
    qualifyingDti?: SortOrderInput | SortOrder
    assumabilityStatus?: SortOrder
    lastVerifiedDate?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    tileMonthlyPayment?: SortOrderInput | SortOrder
    assumableDesirabilityScore?: SortOrderInput | SortOrder
    isAssumableDesirable?: SortOrder
    maxDownPaymentThreshold?: SortOrderInput | SortOrder
    maxLoanBalanceRatioThreshold?: SortOrderInput | SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    _count?: AssumableMortgageCountOrderByAggregateInput
    _avg?: AssumableMortgageAvgOrderByAggregateInput
    _max?: AssumableMortgageMaxOrderByAggregateInput
    _min?: AssumableMortgageMinOrderByAggregateInput
    _sum?: AssumableMortgageSumOrderByAggregateInput
  }

  export type AssumableMortgageScalarWhereWithAggregatesInput = {
    AND?: AssumableMortgageScalarWhereWithAggregatesInput | AssumableMortgageScalarWhereWithAggregatesInput[]
    OR?: AssumableMortgageScalarWhereWithAggregatesInput[]
    NOT?: AssumableMortgageScalarWhereWithAggregatesInput | AssumableMortgageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AssumableMortgage"> | string
    currentBalance?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntWithAggregatesFilter<"AssumableMortgage"> | number
    qualifyingIncome?: DecimalNullableWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: DecimalNullableWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringWithAggregatesFilter<"AssumableMortgage"> | string
    lastVerifiedDate?: DateTimeNullableWithAggregatesFilter<"AssumableMortgage"> | Date | string | null
    verificationNotes?: StringNullableWithAggregatesFilter<"AssumableMortgage"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AssumableMortgage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AssumableMortgage"> | Date | string
    downPayment?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: StringNullableWithAggregatesFilter<"AssumableMortgage"> | string | null
    assumableDesirabilityScore?: DecimalNullableWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolWithAggregatesFilter<"AssumableMortgage"> | boolean
    maxDownPaymentThreshold?: DecimalNullableWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: DecimalNullableWithAggregatesFilter<"AssumableMortgage"> | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: StringNullableWithAggregatesFilter<"AssumableMortgage"> | string | null
    rawLoanDataId?: StringNullableWithAggregatesFilter<"AssumableMortgage"> | string | null
  }

  export type DataCorrectionWhereInput = {
    AND?: DataCorrectionWhereInput | DataCorrectionWhereInput[]
    OR?: DataCorrectionWhereInput[]
    NOT?: DataCorrectionWhereInput | DataCorrectionWhereInput[]
    id?: StringFilter<"DataCorrection"> | string
    entityType?: EnumEntityTypeFilter<"DataCorrection"> | $Enums.EntityType
    entityId?: StringFilter<"DataCorrection"> | string
    field?: StringFilter<"DataCorrection"> | string
    originalValue?: JsonNullableFilter<"DataCorrection">
    correctedValue?: JsonFilter<"DataCorrection">
    reason?: StringNullableFilter<"DataCorrection"> | string | null
    status?: EnumCorrectionStatusFilter<"DataCorrection"> | $Enums.CorrectionStatus
    appliedAt?: DateTimeNullableFilter<"DataCorrection"> | Date | string | null
    createdBy?: StringFilter<"DataCorrection"> | string
    createdByAuditSource?: EnumAuditSourceFilter<"DataCorrection"> | $Enums.AuditSource
    createdAt?: DateTimeFilter<"DataCorrection"> | Date | string
    updatedAt?: DateTimeFilter<"DataCorrection"> | Date | string
    column?: StringFilter<"DataCorrection"> | string
    fieldPath?: StringNullableListFilter<"DataCorrection">
    isArrayField?: BoolFilter<"DataCorrection"> | boolean
    isJsonField?: BoolFilter<"DataCorrection"> | boolean
    rawDataId?: StringNullableFilter<"DataCorrection"> | string | null
  }

  export type DataCorrectionOrderByWithRelationInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    field?: SortOrder
    originalValue?: SortOrderInput | SortOrder
    correctedValue?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrder
    appliedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdByAuditSource?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    column?: SortOrder
    fieldPath?: SortOrder
    isArrayField?: SortOrder
    isJsonField?: SortOrder
    rawDataId?: SortOrderInput | SortOrder
  }

  export type DataCorrectionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DataCorrectionWhereInput | DataCorrectionWhereInput[]
    OR?: DataCorrectionWhereInput[]
    NOT?: DataCorrectionWhereInput | DataCorrectionWhereInput[]
    entityType?: EnumEntityTypeFilter<"DataCorrection"> | $Enums.EntityType
    entityId?: StringFilter<"DataCorrection"> | string
    field?: StringFilter<"DataCorrection"> | string
    originalValue?: JsonNullableFilter<"DataCorrection">
    correctedValue?: JsonFilter<"DataCorrection">
    reason?: StringNullableFilter<"DataCorrection"> | string | null
    status?: EnumCorrectionStatusFilter<"DataCorrection"> | $Enums.CorrectionStatus
    appliedAt?: DateTimeNullableFilter<"DataCorrection"> | Date | string | null
    createdBy?: StringFilter<"DataCorrection"> | string
    createdByAuditSource?: EnumAuditSourceFilter<"DataCorrection"> | $Enums.AuditSource
    createdAt?: DateTimeFilter<"DataCorrection"> | Date | string
    updatedAt?: DateTimeFilter<"DataCorrection"> | Date | string
    column?: StringFilter<"DataCorrection"> | string
    fieldPath?: StringNullableListFilter<"DataCorrection">
    isArrayField?: BoolFilter<"DataCorrection"> | boolean
    isJsonField?: BoolFilter<"DataCorrection"> | boolean
    rawDataId?: StringNullableFilter<"DataCorrection"> | string | null
  }, "id">

  export type DataCorrectionOrderByWithAggregationInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    field?: SortOrder
    originalValue?: SortOrderInput | SortOrder
    correctedValue?: SortOrder
    reason?: SortOrderInput | SortOrder
    status?: SortOrder
    appliedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrder
    createdByAuditSource?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    column?: SortOrder
    fieldPath?: SortOrder
    isArrayField?: SortOrder
    isJsonField?: SortOrder
    rawDataId?: SortOrderInput | SortOrder
    _count?: DataCorrectionCountOrderByAggregateInput
    _max?: DataCorrectionMaxOrderByAggregateInput
    _min?: DataCorrectionMinOrderByAggregateInput
  }

  export type DataCorrectionScalarWhereWithAggregatesInput = {
    AND?: DataCorrectionScalarWhereWithAggregatesInput | DataCorrectionScalarWhereWithAggregatesInput[]
    OR?: DataCorrectionScalarWhereWithAggregatesInput[]
    NOT?: DataCorrectionScalarWhereWithAggregatesInput | DataCorrectionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DataCorrection"> | string
    entityType?: EnumEntityTypeWithAggregatesFilter<"DataCorrection"> | $Enums.EntityType
    entityId?: StringWithAggregatesFilter<"DataCorrection"> | string
    field?: StringWithAggregatesFilter<"DataCorrection"> | string
    originalValue?: JsonNullableWithAggregatesFilter<"DataCorrection">
    correctedValue?: JsonWithAggregatesFilter<"DataCorrection">
    reason?: StringNullableWithAggregatesFilter<"DataCorrection"> | string | null
    status?: EnumCorrectionStatusWithAggregatesFilter<"DataCorrection"> | $Enums.CorrectionStatus
    appliedAt?: DateTimeNullableWithAggregatesFilter<"DataCorrection"> | Date | string | null
    createdBy?: StringWithAggregatesFilter<"DataCorrection"> | string
    createdByAuditSource?: EnumAuditSourceWithAggregatesFilter<"DataCorrection"> | $Enums.AuditSource
    createdAt?: DateTimeWithAggregatesFilter<"DataCorrection"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DataCorrection"> | Date | string
    column?: StringWithAggregatesFilter<"DataCorrection"> | string
    fieldPath?: StringNullableListFilter<"DataCorrection">
    isArrayField?: BoolWithAggregatesFilter<"DataCorrection"> | boolean
    isJsonField?: BoolWithAggregatesFilter<"DataCorrection"> | boolean
    rawDataId?: StringNullableWithAggregatesFilter<"DataCorrection"> | string | null
  }

  export type ListingWhereInput = {
    AND?: ListingWhereInput | ListingWhereInput[]
    OR?: ListingWhereInput[]
    NOT?: ListingWhereInput | ListingWhereInput[]
    id?: StringFilter<"Listing"> | string
    mlsProviderId?: StringFilter<"Listing"> | string
    parcelNumber?: StringFilter<"Listing"> | string
    zipCode?: StringFilter<"Listing"> | string
    rawDataHash?: StringFilter<"Listing"> | string
    mlsListingId?: StringFilter<"Listing"> | string
    lastMlsUpdate?: DateTimeNullableFilter<"Listing"> | Date | string | null
    isAssumable?: BoolFilter<"Listing"> | boolean
    processingState?: StringNullableFilter<"Listing"> | string | null
    deletedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    status?: EnumListingStatusFilter<"Listing"> | $Enums.ListingStatus
    price?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFilter<"Listing"> | $Enums.PropertyType
    bedrooms?: IntNullableFilter<"Listing"> | number | null
    bathrooms?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    squareFeet?: IntNullableFilter<"Listing"> | number | null
    yearBuilt?: IntNullableFilter<"Listing"> | number | null
    address?: StringFilter<"Listing"> | string
    city?: StringNullableFilter<"Listing"> | string | null
    state?: StringNullableFilter<"Listing"> | string | null
    latitude?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    tileX?: IntNullableFilter<"Listing"> | number | null
    tileY?: IntNullableFilter<"Listing"> | number | null
    tileZ?: IntNullableFilter<"Listing"> | number | null
    amenities?: JsonNullableFilter<"Listing">
    interiorFeatures?: JsonNullableFilter<"Listing">
    exteriorFeatures?: JsonNullableFilter<"Listing">
    parkingDetails?: JsonNullableFilter<"Listing">
    associationDetails?: JsonNullableFilter<"Listing">
    schoolDetails?: JsonNullableFilter<"Listing">
    createdAt?: DateTimeFilter<"Listing"> | Date | string
    updatedAt?: DateTimeFilter<"Listing"> | Date | string
    listedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    lastStatusChange?: DateTimeNullableFilter<"Listing"> | Date | string | null
    unitNumber?: StringFilter<"Listing"> | string
    mlsInstanceId?: StringFilter<"Listing"> | string
    photoUrls?: StringNullableListFilter<"Listing">
    propertyRadarId?: StringNullableFilter<"Listing"> | string | null
    denormalizedAssumableMonthlyPayment?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    rawDataId?: StringNullableFilter<"Listing"> | string | null
    tilePrice?: StringNullableFilter<"Listing"> | string | null
    tileDenormalizedAssumableMonthlyPayment?: StringNullableFilter<"Listing"> | string | null
    isRootsListing?: BoolFilter<"Listing"> | boolean
    modifierScore?: IntFilter<"Listing"> | number
    propertySubType?: StringNullableFilter<"Listing"> | string | null
    remarks?: JsonNullableFilter<"Listing">
    documentUrls?: StringNullableListFilter<"Listing">
    videoUrls?: StringNullableListFilter<"Listing">
    staticPriority?: IntNullableFilter<"Listing"> | number | null
    tileId10?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId11?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId12?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId13?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId14?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId15?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId16?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId17?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId18?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId19?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId20?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId8?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId9?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId6?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId7?: BigIntNullableFilter<"Listing"> | bigint | number | null
    denormalizedAssumableDownPayment?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: EnumLoanTypeNullableFilter<"Listing"> | $Enums.LoanType | null
    hasPool?: BoolNullableFilter<"Listing"> | boolean | null
    is55Plus?: BoolNullableFilter<"Listing"> | boolean | null
    monthlyHoa?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    streetAddress?: StringNullableFilter<"Listing"> | string | null
    assumableDesirabilityScore?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFilter<"Listing"> | boolean
    processingVersion?: StringNullableFilter<"Listing"> | string | null
    lotSizeAcres?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: IntNullableFilter<"Listing"> | number | null
    agentDetails?: JsonNullableFilter<"Listing">
    agentEmail?: StringNullableFilter<"Listing"> | string | null
    agentName?: StringNullableFilter<"Listing"> | string | null
    agentOfficeEmail?: StringNullableFilter<"Listing"> | string | null
    agentOfficeName?: StringNullableFilter<"Listing"> | string | null
    agentOfficePhone?: StringNullableFilter<"Listing"> | string | null
    agentPhone?: StringNullableFilter<"Listing"> | string | null
    coListingAgents?: JsonNullableFilter<"Listing">
    denormalizedMlsInstanceLogoUrl?: StringNullableFilter<"Listing"> | string | null
    denormalizedMlsInstanceName?: StringNullableFilter<"Listing"> | string | null
    agentMlsId?: StringNullableFilter<"Listing"> | string | null
    denormalizedMlsInstanceAcronym?: StringNullableFilter<"Listing"> | string | null
    agentOfficeMlsId?: StringNullableFilter<"Listing"> | string | null
    hasBasement?: BoolNullableFilter<"Listing"> | boolean | null
    stories?: IntNullableFilter<"Listing"> | number | null
    PropertyRadar?: XOR<PropertyRadarNullableScalarRelationFilter, PropertyRadarWhereInput> | null
    ListingAudit?: ListingAuditListRelationFilter
    ListingHistory?: ListingHistoryListRelationFilter
    ListingLocation?: XOR<ListingLocationNullableScalarRelationFilter, ListingLocationWhereInput> | null
    ListingPhoto?: ListingPhotoListRelationFilter
    ListingReport?: ListingReportListRelationFilter
  }

  export type ListingOrderByWithRelationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    rawDataHash?: SortOrder
    mlsListingId?: SortOrder
    lastMlsUpdate?: SortOrderInput | SortOrder
    isAssumable?: SortOrder
    processingState?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    price?: SortOrder
    propertyType?: SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    squareFeet?: SortOrderInput | SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrderInput | SortOrder
    tileY?: SortOrderInput | SortOrder
    tileZ?: SortOrderInput | SortOrder
    amenities?: SortOrderInput | SortOrder
    interiorFeatures?: SortOrderInput | SortOrder
    exteriorFeatures?: SortOrderInput | SortOrder
    parkingDetails?: SortOrderInput | SortOrder
    associationDetails?: SortOrderInput | SortOrder
    schoolDetails?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrderInput | SortOrder
    lastStatusChange?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    mlsInstanceId?: SortOrder
    photoUrls?: SortOrder
    propertyRadarId?: SortOrderInput | SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrderInput | SortOrder
    rawDataId?: SortOrderInput | SortOrder
    tilePrice?: SortOrderInput | SortOrder
    tileDenormalizedAssumableMonthlyPayment?: SortOrderInput | SortOrder
    isRootsListing?: SortOrder
    modifierScore?: SortOrder
    propertySubType?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    documentUrls?: SortOrder
    videoUrls?: SortOrder
    staticPriority?: SortOrderInput | SortOrder
    tileId10?: SortOrderInput | SortOrder
    tileId11?: SortOrderInput | SortOrder
    tileId12?: SortOrderInput | SortOrder
    tileId13?: SortOrderInput | SortOrder
    tileId14?: SortOrderInput | SortOrder
    tileId15?: SortOrderInput | SortOrder
    tileId16?: SortOrderInput | SortOrder
    tileId17?: SortOrderInput | SortOrder
    tileId18?: SortOrderInput | SortOrder
    tileId19?: SortOrderInput | SortOrder
    tileId20?: SortOrderInput | SortOrder
    tileId8?: SortOrderInput | SortOrder
    tileId9?: SortOrderInput | SortOrder
    tileId6?: SortOrderInput | SortOrder
    tileId7?: SortOrderInput | SortOrder
    denormalizedAssumableDownPayment?: SortOrderInput | SortOrder
    denormalizedAssumableInterestRate?: SortOrderInput | SortOrder
    denormalizedAssumableLoanType?: SortOrderInput | SortOrder
    hasPool?: SortOrderInput | SortOrder
    is55Plus?: SortOrderInput | SortOrder
    monthlyHoa?: SortOrderInput | SortOrder
    streetAddress?: SortOrderInput | SortOrder
    assumableDesirabilityScore?: SortOrderInput | SortOrder
    isAssumableDesirable?: SortOrder
    processingVersion?: SortOrderInput | SortOrder
    lotSizeAcres?: SortOrderInput | SortOrder
    lotSizeSquareFeet?: SortOrderInput | SortOrder
    agentDetails?: SortOrderInput | SortOrder
    agentEmail?: SortOrderInput | SortOrder
    agentName?: SortOrderInput | SortOrder
    agentOfficeEmail?: SortOrderInput | SortOrder
    agentOfficeName?: SortOrderInput | SortOrder
    agentOfficePhone?: SortOrderInput | SortOrder
    agentPhone?: SortOrderInput | SortOrder
    coListingAgents?: SortOrderInput | SortOrder
    denormalizedMlsInstanceLogoUrl?: SortOrderInput | SortOrder
    denormalizedMlsInstanceName?: SortOrderInput | SortOrder
    agentMlsId?: SortOrderInput | SortOrder
    denormalizedMlsInstanceAcronym?: SortOrderInput | SortOrder
    agentOfficeMlsId?: SortOrderInput | SortOrder
    hasBasement?: SortOrderInput | SortOrder
    stories?: SortOrderInput | SortOrder
    PropertyRadar?: PropertyRadarOrderByWithRelationInput
    ListingAudit?: ListingAuditOrderByRelationAggregateInput
    ListingHistory?: ListingHistoryOrderByRelationAggregateInput
    ListingLocation?: ListingLocationOrderByWithRelationInput
    ListingPhoto?: ListingPhotoOrderByRelationAggregateInput
    ListingReport?: ListingReportOrderByRelationAggregateInput
  }

  export type ListingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    propertyRadarId?: string
    zipCode_parcelNumber_unitNumber?: ListingZipCodeParcelNumberUnitNumberCompoundUniqueInput
    AND?: ListingWhereInput | ListingWhereInput[]
    OR?: ListingWhereInput[]
    NOT?: ListingWhereInput | ListingWhereInput[]
    mlsProviderId?: StringFilter<"Listing"> | string
    parcelNumber?: StringFilter<"Listing"> | string
    zipCode?: StringFilter<"Listing"> | string
    rawDataHash?: StringFilter<"Listing"> | string
    mlsListingId?: StringFilter<"Listing"> | string
    lastMlsUpdate?: DateTimeNullableFilter<"Listing"> | Date | string | null
    isAssumable?: BoolFilter<"Listing"> | boolean
    processingState?: StringNullableFilter<"Listing"> | string | null
    deletedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    status?: EnumListingStatusFilter<"Listing"> | $Enums.ListingStatus
    price?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFilter<"Listing"> | $Enums.PropertyType
    bedrooms?: IntNullableFilter<"Listing"> | number | null
    bathrooms?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    squareFeet?: IntNullableFilter<"Listing"> | number | null
    yearBuilt?: IntNullableFilter<"Listing"> | number | null
    address?: StringFilter<"Listing"> | string
    city?: StringNullableFilter<"Listing"> | string | null
    state?: StringNullableFilter<"Listing"> | string | null
    latitude?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    tileX?: IntNullableFilter<"Listing"> | number | null
    tileY?: IntNullableFilter<"Listing"> | number | null
    tileZ?: IntNullableFilter<"Listing"> | number | null
    amenities?: JsonNullableFilter<"Listing">
    interiorFeatures?: JsonNullableFilter<"Listing">
    exteriorFeatures?: JsonNullableFilter<"Listing">
    parkingDetails?: JsonNullableFilter<"Listing">
    associationDetails?: JsonNullableFilter<"Listing">
    schoolDetails?: JsonNullableFilter<"Listing">
    createdAt?: DateTimeFilter<"Listing"> | Date | string
    updatedAt?: DateTimeFilter<"Listing"> | Date | string
    listedAt?: DateTimeNullableFilter<"Listing"> | Date | string | null
    lastStatusChange?: DateTimeNullableFilter<"Listing"> | Date | string | null
    unitNumber?: StringFilter<"Listing"> | string
    mlsInstanceId?: StringFilter<"Listing"> | string
    photoUrls?: StringNullableListFilter<"Listing">
    denormalizedAssumableMonthlyPayment?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    rawDataId?: StringNullableFilter<"Listing"> | string | null
    tilePrice?: StringNullableFilter<"Listing"> | string | null
    tileDenormalizedAssumableMonthlyPayment?: StringNullableFilter<"Listing"> | string | null
    isRootsListing?: BoolFilter<"Listing"> | boolean
    modifierScore?: IntFilter<"Listing"> | number
    propertySubType?: StringNullableFilter<"Listing"> | string | null
    remarks?: JsonNullableFilter<"Listing">
    documentUrls?: StringNullableListFilter<"Listing">
    videoUrls?: StringNullableListFilter<"Listing">
    staticPriority?: IntNullableFilter<"Listing"> | number | null
    tileId10?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId11?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId12?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId13?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId14?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId15?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId16?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId17?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId18?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId19?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId20?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId8?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId9?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId6?: BigIntNullableFilter<"Listing"> | bigint | number | null
    tileId7?: BigIntNullableFilter<"Listing"> | bigint | number | null
    denormalizedAssumableDownPayment?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: EnumLoanTypeNullableFilter<"Listing"> | $Enums.LoanType | null
    hasPool?: BoolNullableFilter<"Listing"> | boolean | null
    is55Plus?: BoolNullableFilter<"Listing"> | boolean | null
    monthlyHoa?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    streetAddress?: StringNullableFilter<"Listing"> | string | null
    assumableDesirabilityScore?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFilter<"Listing"> | boolean
    processingVersion?: StringNullableFilter<"Listing"> | string | null
    lotSizeAcres?: DecimalNullableFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: IntNullableFilter<"Listing"> | number | null
    agentDetails?: JsonNullableFilter<"Listing">
    agentEmail?: StringNullableFilter<"Listing"> | string | null
    agentName?: StringNullableFilter<"Listing"> | string | null
    agentOfficeEmail?: StringNullableFilter<"Listing"> | string | null
    agentOfficeName?: StringNullableFilter<"Listing"> | string | null
    agentOfficePhone?: StringNullableFilter<"Listing"> | string | null
    agentPhone?: StringNullableFilter<"Listing"> | string | null
    coListingAgents?: JsonNullableFilter<"Listing">
    denormalizedMlsInstanceLogoUrl?: StringNullableFilter<"Listing"> | string | null
    denormalizedMlsInstanceName?: StringNullableFilter<"Listing"> | string | null
    agentMlsId?: StringNullableFilter<"Listing"> | string | null
    denormalizedMlsInstanceAcronym?: StringNullableFilter<"Listing"> | string | null
    agentOfficeMlsId?: StringNullableFilter<"Listing"> | string | null
    hasBasement?: BoolNullableFilter<"Listing"> | boolean | null
    stories?: IntNullableFilter<"Listing"> | number | null
    PropertyRadar?: XOR<PropertyRadarNullableScalarRelationFilter, PropertyRadarWhereInput> | null
    ListingAudit?: ListingAuditListRelationFilter
    ListingHistory?: ListingHistoryListRelationFilter
    ListingLocation?: XOR<ListingLocationNullableScalarRelationFilter, ListingLocationWhereInput> | null
    ListingPhoto?: ListingPhotoListRelationFilter
    ListingReport?: ListingReportListRelationFilter
  }, "id" | "propertyRadarId" | "zipCode_parcelNumber_unitNumber">

  export type ListingOrderByWithAggregationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    rawDataHash?: SortOrder
    mlsListingId?: SortOrder
    lastMlsUpdate?: SortOrderInput | SortOrder
    isAssumable?: SortOrder
    processingState?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    price?: SortOrder
    propertyType?: SortOrder
    bedrooms?: SortOrderInput | SortOrder
    bathrooms?: SortOrderInput | SortOrder
    squareFeet?: SortOrderInput | SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    address?: SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrderInput | SortOrder
    tileY?: SortOrderInput | SortOrder
    tileZ?: SortOrderInput | SortOrder
    amenities?: SortOrderInput | SortOrder
    interiorFeatures?: SortOrderInput | SortOrder
    exteriorFeatures?: SortOrderInput | SortOrder
    parkingDetails?: SortOrderInput | SortOrder
    associationDetails?: SortOrderInput | SortOrder
    schoolDetails?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrderInput | SortOrder
    lastStatusChange?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    mlsInstanceId?: SortOrder
    photoUrls?: SortOrder
    propertyRadarId?: SortOrderInput | SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrderInput | SortOrder
    rawDataId?: SortOrderInput | SortOrder
    tilePrice?: SortOrderInput | SortOrder
    tileDenormalizedAssumableMonthlyPayment?: SortOrderInput | SortOrder
    isRootsListing?: SortOrder
    modifierScore?: SortOrder
    propertySubType?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    documentUrls?: SortOrder
    videoUrls?: SortOrder
    staticPriority?: SortOrderInput | SortOrder
    tileId10?: SortOrderInput | SortOrder
    tileId11?: SortOrderInput | SortOrder
    tileId12?: SortOrderInput | SortOrder
    tileId13?: SortOrderInput | SortOrder
    tileId14?: SortOrderInput | SortOrder
    tileId15?: SortOrderInput | SortOrder
    tileId16?: SortOrderInput | SortOrder
    tileId17?: SortOrderInput | SortOrder
    tileId18?: SortOrderInput | SortOrder
    tileId19?: SortOrderInput | SortOrder
    tileId20?: SortOrderInput | SortOrder
    tileId8?: SortOrderInput | SortOrder
    tileId9?: SortOrderInput | SortOrder
    tileId6?: SortOrderInput | SortOrder
    tileId7?: SortOrderInput | SortOrder
    denormalizedAssumableDownPayment?: SortOrderInput | SortOrder
    denormalizedAssumableInterestRate?: SortOrderInput | SortOrder
    denormalizedAssumableLoanType?: SortOrderInput | SortOrder
    hasPool?: SortOrderInput | SortOrder
    is55Plus?: SortOrderInput | SortOrder
    monthlyHoa?: SortOrderInput | SortOrder
    streetAddress?: SortOrderInput | SortOrder
    assumableDesirabilityScore?: SortOrderInput | SortOrder
    isAssumableDesirable?: SortOrder
    processingVersion?: SortOrderInput | SortOrder
    lotSizeAcres?: SortOrderInput | SortOrder
    lotSizeSquareFeet?: SortOrderInput | SortOrder
    agentDetails?: SortOrderInput | SortOrder
    agentEmail?: SortOrderInput | SortOrder
    agentName?: SortOrderInput | SortOrder
    agentOfficeEmail?: SortOrderInput | SortOrder
    agentOfficeName?: SortOrderInput | SortOrder
    agentOfficePhone?: SortOrderInput | SortOrder
    agentPhone?: SortOrderInput | SortOrder
    coListingAgents?: SortOrderInput | SortOrder
    denormalizedMlsInstanceLogoUrl?: SortOrderInput | SortOrder
    denormalizedMlsInstanceName?: SortOrderInput | SortOrder
    agentMlsId?: SortOrderInput | SortOrder
    denormalizedMlsInstanceAcronym?: SortOrderInput | SortOrder
    agentOfficeMlsId?: SortOrderInput | SortOrder
    hasBasement?: SortOrderInput | SortOrder
    stories?: SortOrderInput | SortOrder
    _count?: ListingCountOrderByAggregateInput
    _avg?: ListingAvgOrderByAggregateInput
    _max?: ListingMaxOrderByAggregateInput
    _min?: ListingMinOrderByAggregateInput
    _sum?: ListingSumOrderByAggregateInput
  }

  export type ListingScalarWhereWithAggregatesInput = {
    AND?: ListingScalarWhereWithAggregatesInput | ListingScalarWhereWithAggregatesInput[]
    OR?: ListingScalarWhereWithAggregatesInput[]
    NOT?: ListingScalarWhereWithAggregatesInput | ListingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Listing"> | string
    mlsProviderId?: StringWithAggregatesFilter<"Listing"> | string
    parcelNumber?: StringWithAggregatesFilter<"Listing"> | string
    zipCode?: StringWithAggregatesFilter<"Listing"> | string
    rawDataHash?: StringWithAggregatesFilter<"Listing"> | string
    mlsListingId?: StringWithAggregatesFilter<"Listing"> | string
    lastMlsUpdate?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    isAssumable?: BoolWithAggregatesFilter<"Listing"> | boolean
    processingState?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    status?: EnumListingStatusWithAggregatesFilter<"Listing"> | $Enums.ListingStatus
    price?: DecimalWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeWithAggregatesFilter<"Listing"> | $Enums.PropertyType
    bedrooms?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    bathrooms?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    squareFeet?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    yearBuilt?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    address?: StringWithAggregatesFilter<"Listing"> | string
    city?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    state?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    latitude?: DecimalWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string
    tileX?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    tileY?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    tileZ?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    amenities?: JsonNullableWithAggregatesFilter<"Listing">
    interiorFeatures?: JsonNullableWithAggregatesFilter<"Listing">
    exteriorFeatures?: JsonNullableWithAggregatesFilter<"Listing">
    parkingDetails?: JsonNullableWithAggregatesFilter<"Listing">
    associationDetails?: JsonNullableWithAggregatesFilter<"Listing">
    schoolDetails?: JsonNullableWithAggregatesFilter<"Listing">
    createdAt?: DateTimeWithAggregatesFilter<"Listing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Listing"> | Date | string
    listedAt?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    lastStatusChange?: DateTimeNullableWithAggregatesFilter<"Listing"> | Date | string | null
    unitNumber?: StringWithAggregatesFilter<"Listing"> | string
    mlsInstanceId?: StringWithAggregatesFilter<"Listing"> | string
    photoUrls?: StringNullableListFilter<"Listing">
    propertyRadarId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    denormalizedAssumableMonthlyPayment?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    rawDataId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    tilePrice?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    tileDenormalizedAssumableMonthlyPayment?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    isRootsListing?: BoolWithAggregatesFilter<"Listing"> | boolean
    modifierScore?: IntWithAggregatesFilter<"Listing"> | number
    propertySubType?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    remarks?: JsonNullableWithAggregatesFilter<"Listing">
    documentUrls?: StringNullableListFilter<"Listing">
    videoUrls?: StringNullableListFilter<"Listing">
    staticPriority?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    tileId10?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId11?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId12?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId13?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId14?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId15?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId16?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId17?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId18?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId19?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId20?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId8?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId9?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId6?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    tileId7?: BigIntNullableWithAggregatesFilter<"Listing"> | bigint | number | null
    denormalizedAssumableDownPayment?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: EnumLoanTypeNullableWithAggregatesFilter<"Listing"> | $Enums.LoanType | null
    hasPool?: BoolNullableWithAggregatesFilter<"Listing"> | boolean | null
    is55Plus?: BoolNullableWithAggregatesFilter<"Listing"> | boolean | null
    monthlyHoa?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    streetAddress?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    assumableDesirabilityScore?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolWithAggregatesFilter<"Listing"> | boolean
    processingVersion?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    lotSizeAcres?: DecimalNullableWithAggregatesFilter<"Listing"> | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: IntNullableWithAggregatesFilter<"Listing"> | number | null
    agentDetails?: JsonNullableWithAggregatesFilter<"Listing">
    agentEmail?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentName?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentOfficeEmail?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentOfficeName?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentOfficePhone?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentPhone?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    coListingAgents?: JsonNullableWithAggregatesFilter<"Listing">
    denormalizedMlsInstanceLogoUrl?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    denormalizedMlsInstanceName?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentMlsId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    denormalizedMlsInstanceAcronym?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    agentOfficeMlsId?: StringNullableWithAggregatesFilter<"Listing"> | string | null
    hasBasement?: BoolNullableWithAggregatesFilter<"Listing"> | boolean | null
    stories?: IntNullableWithAggregatesFilter<"Listing"> | number | null
  }

  export type ListingAuditWhereInput = {
    AND?: ListingAuditWhereInput | ListingAuditWhereInput[]
    OR?: ListingAuditWhereInput[]
    NOT?: ListingAuditWhereInput | ListingAuditWhereInput[]
    id?: StringFilter<"ListingAudit"> | string
    listingId?: StringFilter<"ListingAudit"> | string
    action?: StringFilter<"ListingAudit"> | string
    source?: EnumAuditSourceFilter<"ListingAudit"> | $Enums.AuditSource
    sourceId?: StringFilter<"ListingAudit"> | string
    sourceName?: StringFilter<"ListingAudit"> | string
    changes?: JsonNullableFilter<"ListingAudit">
    metadata?: JsonNullableFilter<"ListingAudit">
    createdAt?: DateTimeFilter<"ListingAudit"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    ListingHistory?: ListingHistoryListRelationFilter
  }

  export type ListingAuditOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    action?: SortOrder
    source?: SortOrder
    sourceId?: SortOrder
    sourceName?: SortOrder
    changes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    Listing?: ListingOrderByWithRelationInput
    ListingHistory?: ListingHistoryOrderByRelationAggregateInput
  }

  export type ListingAuditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingAuditWhereInput | ListingAuditWhereInput[]
    OR?: ListingAuditWhereInput[]
    NOT?: ListingAuditWhereInput | ListingAuditWhereInput[]
    listingId?: StringFilter<"ListingAudit"> | string
    action?: StringFilter<"ListingAudit"> | string
    source?: EnumAuditSourceFilter<"ListingAudit"> | $Enums.AuditSource
    sourceId?: StringFilter<"ListingAudit"> | string
    sourceName?: StringFilter<"ListingAudit"> | string
    changes?: JsonNullableFilter<"ListingAudit">
    metadata?: JsonNullableFilter<"ListingAudit">
    createdAt?: DateTimeFilter<"ListingAudit"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
    ListingHistory?: ListingHistoryListRelationFilter
  }, "id">

  export type ListingAuditOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    action?: SortOrder
    source?: SortOrder
    sourceId?: SortOrder
    sourceName?: SortOrder
    changes?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ListingAuditCountOrderByAggregateInput
    _max?: ListingAuditMaxOrderByAggregateInput
    _min?: ListingAuditMinOrderByAggregateInput
  }

  export type ListingAuditScalarWhereWithAggregatesInput = {
    AND?: ListingAuditScalarWhereWithAggregatesInput | ListingAuditScalarWhereWithAggregatesInput[]
    OR?: ListingAuditScalarWhereWithAggregatesInput[]
    NOT?: ListingAuditScalarWhereWithAggregatesInput | ListingAuditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingAudit"> | string
    listingId?: StringWithAggregatesFilter<"ListingAudit"> | string
    action?: StringWithAggregatesFilter<"ListingAudit"> | string
    source?: EnumAuditSourceWithAggregatesFilter<"ListingAudit"> | $Enums.AuditSource
    sourceId?: StringWithAggregatesFilter<"ListingAudit"> | string
    sourceName?: StringWithAggregatesFilter<"ListingAudit"> | string
    changes?: JsonNullableWithAggregatesFilter<"ListingAudit">
    metadata?: JsonNullableWithAggregatesFilter<"ListingAudit">
    createdAt?: DateTimeWithAggregatesFilter<"ListingAudit"> | Date | string
  }

  export type ListingHistoryWhereInput = {
    AND?: ListingHistoryWhereInput | ListingHistoryWhereInput[]
    OR?: ListingHistoryWhereInput[]
    NOT?: ListingHistoryWhereInput | ListingHistoryWhereInput[]
    id?: StringFilter<"ListingHistory"> | string
    listingId?: StringFilter<"ListingHistory"> | string
    price?: DecimalFilter<"ListingHistory"> | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFilter<"ListingHistory"> | $Enums.ListingStatus
    rawData?: JsonFilter<"ListingHistory">
    changedFields?: JsonFilter<"ListingHistory">
    effectiveDate?: DateTimeFilter<"ListingHistory"> | Date | string
    createdAt?: DateTimeFilter<"ListingHistory"> | Date | string
    auditId?: StringNullableFilter<"ListingHistory"> | string | null
    ListingAudit?: XOR<ListingAuditNullableScalarRelationFilter, ListingAuditWhereInput> | null
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type ListingHistoryOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    price?: SortOrder
    status?: SortOrder
    rawData?: SortOrder
    changedFields?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    auditId?: SortOrderInput | SortOrder
    ListingAudit?: ListingAuditOrderByWithRelationInput
    Listing?: ListingOrderByWithRelationInput
  }

  export type ListingHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingHistoryWhereInput | ListingHistoryWhereInput[]
    OR?: ListingHistoryWhereInput[]
    NOT?: ListingHistoryWhereInput | ListingHistoryWhereInput[]
    listingId?: StringFilter<"ListingHistory"> | string
    price?: DecimalFilter<"ListingHistory"> | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFilter<"ListingHistory"> | $Enums.ListingStatus
    rawData?: JsonFilter<"ListingHistory">
    changedFields?: JsonFilter<"ListingHistory">
    effectiveDate?: DateTimeFilter<"ListingHistory"> | Date | string
    createdAt?: DateTimeFilter<"ListingHistory"> | Date | string
    auditId?: StringNullableFilter<"ListingHistory"> | string | null
    ListingAudit?: XOR<ListingAuditNullableScalarRelationFilter, ListingAuditWhereInput> | null
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "id">

  export type ListingHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    price?: SortOrder
    status?: SortOrder
    rawData?: SortOrder
    changedFields?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    auditId?: SortOrderInput | SortOrder
    _count?: ListingHistoryCountOrderByAggregateInput
    _avg?: ListingHistoryAvgOrderByAggregateInput
    _max?: ListingHistoryMaxOrderByAggregateInput
    _min?: ListingHistoryMinOrderByAggregateInput
    _sum?: ListingHistorySumOrderByAggregateInput
  }

  export type ListingHistoryScalarWhereWithAggregatesInput = {
    AND?: ListingHistoryScalarWhereWithAggregatesInput | ListingHistoryScalarWhereWithAggregatesInput[]
    OR?: ListingHistoryScalarWhereWithAggregatesInput[]
    NOT?: ListingHistoryScalarWhereWithAggregatesInput | ListingHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingHistory"> | string
    listingId?: StringWithAggregatesFilter<"ListingHistory"> | string
    price?: DecimalWithAggregatesFilter<"ListingHistory"> | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusWithAggregatesFilter<"ListingHistory"> | $Enums.ListingStatus
    rawData?: JsonWithAggregatesFilter<"ListingHistory">
    changedFields?: JsonWithAggregatesFilter<"ListingHistory">
    effectiveDate?: DateTimeWithAggregatesFilter<"ListingHistory"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"ListingHistory"> | Date | string
    auditId?: StringNullableWithAggregatesFilter<"ListingHistory"> | string | null
  }

  export type ListingLocationWhereInput = {
    AND?: ListingLocationWhereInput | ListingLocationWhereInput[]
    OR?: ListingLocationWhereInput[]
    NOT?: ListingLocationWhereInput | ListingLocationWhereInput[]
    id?: StringFilter<"ListingLocation"> | string
    listingId?: StringFilter<"ListingLocation"> | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type ListingLocationOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    Listing?: ListingOrderByWithRelationInput
  }

  export type ListingLocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    listingId?: string
    AND?: ListingLocationWhereInput | ListingLocationWhereInput[]
    OR?: ListingLocationWhereInput[]
    NOT?: ListingLocationWhereInput | ListingLocationWhereInput[]
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "id" | "listingId">

  export type ListingLocationOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    _count?: ListingLocationCountOrderByAggregateInput
    _max?: ListingLocationMaxOrderByAggregateInput
    _min?: ListingLocationMinOrderByAggregateInput
  }

  export type ListingLocationScalarWhereWithAggregatesInput = {
    AND?: ListingLocationScalarWhereWithAggregatesInput | ListingLocationScalarWhereWithAggregatesInput[]
    OR?: ListingLocationScalarWhereWithAggregatesInput[]
    NOT?: ListingLocationScalarWhereWithAggregatesInput | ListingLocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingLocation"> | string
    listingId?: StringWithAggregatesFilter<"ListingLocation"> | string
  }

  export type ListingPhotoWhereInput = {
    AND?: ListingPhotoWhereInput | ListingPhotoWhereInput[]
    OR?: ListingPhotoWhereInput[]
    NOT?: ListingPhotoWhereInput | ListingPhotoWhereInput[]
    id?: StringFilter<"ListingPhoto"> | string
    listingId?: StringFilter<"ListingPhoto"> | string
    mlsUrl?: StringFilter<"ListingPhoto"> | string
    s3Url?: StringNullableFilter<"ListingPhoto"> | string | null
    order?: IntFilter<"ListingPhoto"> | number
    lastChecked?: DateTimeFilter<"ListingPhoto"> | Date | string
    isActive?: BoolFilter<"ListingPhoto"> | boolean
    createdAt?: DateTimeFilter<"ListingPhoto"> | Date | string
    updatedAt?: DateTimeFilter<"ListingPhoto"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type ListingPhotoOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    mlsUrl?: SortOrder
    s3Url?: SortOrderInput | SortOrder
    order?: SortOrder
    lastChecked?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Listing?: ListingOrderByWithRelationInput
  }

  export type ListingPhotoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingPhotoWhereInput | ListingPhotoWhereInput[]
    OR?: ListingPhotoWhereInput[]
    NOT?: ListingPhotoWhereInput | ListingPhotoWhereInput[]
    listingId?: StringFilter<"ListingPhoto"> | string
    mlsUrl?: StringFilter<"ListingPhoto"> | string
    s3Url?: StringNullableFilter<"ListingPhoto"> | string | null
    order?: IntFilter<"ListingPhoto"> | number
    lastChecked?: DateTimeFilter<"ListingPhoto"> | Date | string
    isActive?: BoolFilter<"ListingPhoto"> | boolean
    createdAt?: DateTimeFilter<"ListingPhoto"> | Date | string
    updatedAt?: DateTimeFilter<"ListingPhoto"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "id">

  export type ListingPhotoOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    mlsUrl?: SortOrder
    s3Url?: SortOrderInput | SortOrder
    order?: SortOrder
    lastChecked?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ListingPhotoCountOrderByAggregateInput
    _avg?: ListingPhotoAvgOrderByAggregateInput
    _max?: ListingPhotoMaxOrderByAggregateInput
    _min?: ListingPhotoMinOrderByAggregateInput
    _sum?: ListingPhotoSumOrderByAggregateInput
  }

  export type ListingPhotoScalarWhereWithAggregatesInput = {
    AND?: ListingPhotoScalarWhereWithAggregatesInput | ListingPhotoScalarWhereWithAggregatesInput[]
    OR?: ListingPhotoScalarWhereWithAggregatesInput[]
    NOT?: ListingPhotoScalarWhereWithAggregatesInput | ListingPhotoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingPhoto"> | string
    listingId?: StringWithAggregatesFilter<"ListingPhoto"> | string
    mlsUrl?: StringWithAggregatesFilter<"ListingPhoto"> | string
    s3Url?: StringNullableWithAggregatesFilter<"ListingPhoto"> | string | null
    order?: IntWithAggregatesFilter<"ListingPhoto"> | number
    lastChecked?: DateTimeWithAggregatesFilter<"ListingPhoto"> | Date | string
    isActive?: BoolWithAggregatesFilter<"ListingPhoto"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ListingPhoto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ListingPhoto"> | Date | string
  }

  export type ListingReportWhereInput = {
    AND?: ListingReportWhereInput | ListingReportWhereInput[]
    OR?: ListingReportWhereInput[]
    NOT?: ListingReportWhereInput | ListingReportWhereInput[]
    id?: StringFilter<"ListingReport"> | string
    listingId?: StringFilter<"ListingReport"> | string
    userId?: StringFilter<"ListingReport"> | string
    reporterType?: EnumReporterTypeFilter<"ListingReport"> | $Enums.ReporterType
    reason?: EnumListingReportReasonFilter<"ListingReport"> | $Enums.ListingReportReason
    details?: StringNullableFilter<"ListingReport"> | string | null
    status?: StringFilter<"ListingReport"> | string
    createdAt?: DateTimeFilter<"ListingReport"> | Date | string
    updatedAt?: DateTimeFilter<"ListingReport"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }

  export type ListingReportOrderByWithRelationInput = {
    id?: SortOrder
    listingId?: SortOrder
    userId?: SortOrder
    reporterType?: SortOrder
    reason?: SortOrder
    details?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Listing?: ListingOrderByWithRelationInput
  }

  export type ListingReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ListingReportWhereInput | ListingReportWhereInput[]
    OR?: ListingReportWhereInput[]
    NOT?: ListingReportWhereInput | ListingReportWhereInput[]
    listingId?: StringFilter<"ListingReport"> | string
    userId?: StringFilter<"ListingReport"> | string
    reporterType?: EnumReporterTypeFilter<"ListingReport"> | $Enums.ReporterType
    reason?: EnumListingReportReasonFilter<"ListingReport"> | $Enums.ListingReportReason
    details?: StringNullableFilter<"ListingReport"> | string | null
    status?: StringFilter<"ListingReport"> | string
    createdAt?: DateTimeFilter<"ListingReport"> | Date | string
    updatedAt?: DateTimeFilter<"ListingReport"> | Date | string
    Listing?: XOR<ListingScalarRelationFilter, ListingWhereInput>
  }, "id">

  export type ListingReportOrderByWithAggregationInput = {
    id?: SortOrder
    listingId?: SortOrder
    userId?: SortOrder
    reporterType?: SortOrder
    reason?: SortOrder
    details?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ListingReportCountOrderByAggregateInput
    _max?: ListingReportMaxOrderByAggregateInput
    _min?: ListingReportMinOrderByAggregateInput
  }

  export type ListingReportScalarWhereWithAggregatesInput = {
    AND?: ListingReportScalarWhereWithAggregatesInput | ListingReportScalarWhereWithAggregatesInput[]
    OR?: ListingReportScalarWhereWithAggregatesInput[]
    NOT?: ListingReportScalarWhereWithAggregatesInput | ListingReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ListingReport"> | string
    listingId?: StringWithAggregatesFilter<"ListingReport"> | string
    userId?: StringWithAggregatesFilter<"ListingReport"> | string
    reporterType?: EnumReporterTypeWithAggregatesFilter<"ListingReport"> | $Enums.ReporterType
    reason?: EnumListingReportReasonWithAggregatesFilter<"ListingReport"> | $Enums.ListingReportReason
    details?: StringNullableWithAggregatesFilter<"ListingReport"> | string | null
    status?: StringWithAggregatesFilter<"ListingReport"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ListingReport"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ListingReport"> | Date | string
  }

  export type LoanWhereInput = {
    AND?: LoanWhereInput | LoanWhereInput[]
    OR?: LoanWhereInput[]
    NOT?: LoanWhereInput | LoanWhereInput[]
    id?: StringFilter<"Loan"> | string
    propertyId?: StringFilter<"Loan"> | string
    loanPosition?: IntFilter<"Loan"> | number
    purpose?: StringNullableFilter<"Loan"> | string | null
    loanType?: EnumLoanTypeFilter<"Loan"> | $Enums.LoanType
    recordingDate?: DateTimeFilter<"Loan"> | Date | string
    concurrent?: BoolFilter<"Loan"> | boolean
    initialAmount?: DecimalFilter<"Loan"> | Decimal | DecimalJsLike | number | string
    remainingBalance?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    termYears?: IntNullableFilter<"Loan"> | number | null
    lenderName?: StringFilter<"Loan"> | string
    rateType?: StringNullableFilter<"Loan"> | string | null
    interestRate?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: IntNullableFilter<"Loan"> | number | null
    startingPeriod?: IntNullableFilter<"Loan"> | number | null
    totalPayments?: IntNullableFilter<"Loan"> | number | null
    maturityDate?: DateTimeNullableFilter<"Loan"> | Date | string | null
    monthlyPayment?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: BoolNullableFilter<"Loan"> | boolean | null
    assumableMortgageId?: StringNullableFilter<"Loan"> | string | null
    createdAt?: DateTimeFilter<"Loan"> | Date | string
    updatedAt?: DateTimeFilter<"Loan"> | Date | string
    mlsInstanceId?: StringNullableFilter<"Loan"> | string | null
    deletedAt?: DateTimeNullableFilter<"Loan"> | Date | string | null
    rawLoanDataId?: StringNullableFilter<"Loan"> | string | null
    interestRateEstimated?: BoolNullableFilter<"Loan"> | boolean | null
    isAssumable?: BoolNullableFilter<"Loan"> | boolean | null
    AssumableMortgage?: XOR<AssumableMortgageNullableScalarRelationFilter, AssumableMortgageWhereInput> | null
    PropertyRadar?: XOR<PropertyRadarScalarRelationFilter, PropertyRadarWhereInput>
  }

  export type LoanOrderByWithRelationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    loanPosition?: SortOrder
    purpose?: SortOrderInput | SortOrder
    loanType?: SortOrder
    recordingDate?: SortOrder
    concurrent?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrderInput | SortOrder
    termYears?: SortOrderInput | SortOrder
    lenderName?: SortOrder
    rateType?: SortOrderInput | SortOrder
    interestRate?: SortOrderInput | SortOrder
    currentPeriod?: SortOrderInput | SortOrder
    startingPeriod?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    maturityDate?: SortOrderInput | SortOrder
    monthlyPayment?: SortOrderInput | SortOrder
    ownerOccupied?: SortOrderInput | SortOrder
    assumableMortgageId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    interestRateEstimated?: SortOrderInput | SortOrder
    isAssumable?: SortOrderInput | SortOrder
    AssumableMortgage?: AssumableMortgageOrderByWithRelationInput
    PropertyRadar?: PropertyRadarOrderByWithRelationInput
  }

  export type LoanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    assumableMortgageId?: string
    AND?: LoanWhereInput | LoanWhereInput[]
    OR?: LoanWhereInput[]
    NOT?: LoanWhereInput | LoanWhereInput[]
    propertyId?: StringFilter<"Loan"> | string
    loanPosition?: IntFilter<"Loan"> | number
    purpose?: StringNullableFilter<"Loan"> | string | null
    loanType?: EnumLoanTypeFilter<"Loan"> | $Enums.LoanType
    recordingDate?: DateTimeFilter<"Loan"> | Date | string
    concurrent?: BoolFilter<"Loan"> | boolean
    initialAmount?: DecimalFilter<"Loan"> | Decimal | DecimalJsLike | number | string
    remainingBalance?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    termYears?: IntNullableFilter<"Loan"> | number | null
    lenderName?: StringFilter<"Loan"> | string
    rateType?: StringNullableFilter<"Loan"> | string | null
    interestRate?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: IntNullableFilter<"Loan"> | number | null
    startingPeriod?: IntNullableFilter<"Loan"> | number | null
    totalPayments?: IntNullableFilter<"Loan"> | number | null
    maturityDate?: DateTimeNullableFilter<"Loan"> | Date | string | null
    monthlyPayment?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: BoolNullableFilter<"Loan"> | boolean | null
    createdAt?: DateTimeFilter<"Loan"> | Date | string
    updatedAt?: DateTimeFilter<"Loan"> | Date | string
    mlsInstanceId?: StringNullableFilter<"Loan"> | string | null
    deletedAt?: DateTimeNullableFilter<"Loan"> | Date | string | null
    rawLoanDataId?: StringNullableFilter<"Loan"> | string | null
    interestRateEstimated?: BoolNullableFilter<"Loan"> | boolean | null
    isAssumable?: BoolNullableFilter<"Loan"> | boolean | null
    AssumableMortgage?: XOR<AssumableMortgageNullableScalarRelationFilter, AssumableMortgageWhereInput> | null
    PropertyRadar?: XOR<PropertyRadarScalarRelationFilter, PropertyRadarWhereInput>
  }, "id" | "assumableMortgageId">

  export type LoanOrderByWithAggregationInput = {
    id?: SortOrder
    propertyId?: SortOrder
    loanPosition?: SortOrder
    purpose?: SortOrderInput | SortOrder
    loanType?: SortOrder
    recordingDate?: SortOrder
    concurrent?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrderInput | SortOrder
    termYears?: SortOrderInput | SortOrder
    lenderName?: SortOrder
    rateType?: SortOrderInput | SortOrder
    interestRate?: SortOrderInput | SortOrder
    currentPeriod?: SortOrderInput | SortOrder
    startingPeriod?: SortOrderInput | SortOrder
    totalPayments?: SortOrderInput | SortOrder
    maturityDate?: SortOrderInput | SortOrder
    monthlyPayment?: SortOrderInput | SortOrder
    ownerOccupied?: SortOrderInput | SortOrder
    assumableMortgageId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    interestRateEstimated?: SortOrderInput | SortOrder
    isAssumable?: SortOrderInput | SortOrder
    _count?: LoanCountOrderByAggregateInput
    _avg?: LoanAvgOrderByAggregateInput
    _max?: LoanMaxOrderByAggregateInput
    _min?: LoanMinOrderByAggregateInput
    _sum?: LoanSumOrderByAggregateInput
  }

  export type LoanScalarWhereWithAggregatesInput = {
    AND?: LoanScalarWhereWithAggregatesInput | LoanScalarWhereWithAggregatesInput[]
    OR?: LoanScalarWhereWithAggregatesInput[]
    NOT?: LoanScalarWhereWithAggregatesInput | LoanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Loan"> | string
    propertyId?: StringWithAggregatesFilter<"Loan"> | string
    loanPosition?: IntWithAggregatesFilter<"Loan"> | number
    purpose?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    loanType?: EnumLoanTypeWithAggregatesFilter<"Loan"> | $Enums.LoanType
    recordingDate?: DateTimeWithAggregatesFilter<"Loan"> | Date | string
    concurrent?: BoolWithAggregatesFilter<"Loan"> | boolean
    initialAmount?: DecimalWithAggregatesFilter<"Loan"> | Decimal | DecimalJsLike | number | string
    remainingBalance?: DecimalNullableWithAggregatesFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    termYears?: IntNullableWithAggregatesFilter<"Loan"> | number | null
    lenderName?: StringWithAggregatesFilter<"Loan"> | string
    rateType?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    interestRate?: DecimalNullableWithAggregatesFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: IntNullableWithAggregatesFilter<"Loan"> | number | null
    startingPeriod?: IntNullableWithAggregatesFilter<"Loan"> | number | null
    totalPayments?: IntNullableWithAggregatesFilter<"Loan"> | number | null
    maturityDate?: DateTimeNullableWithAggregatesFilter<"Loan"> | Date | string | null
    monthlyPayment?: DecimalNullableWithAggregatesFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: BoolNullableWithAggregatesFilter<"Loan"> | boolean | null
    assumableMortgageId?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Loan"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Loan"> | Date | string
    mlsInstanceId?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Loan"> | Date | string | null
    rawLoanDataId?: StringNullableWithAggregatesFilter<"Loan"> | string | null
    interestRateEstimated?: BoolNullableWithAggregatesFilter<"Loan"> | boolean | null
    isAssumable?: BoolNullableWithAggregatesFilter<"Loan"> | boolean | null
  }

  export type MlsInstanceDetailsWhereInput = {
    AND?: MlsInstanceDetailsWhereInput | MlsInstanceDetailsWhereInput[]
    OR?: MlsInstanceDetailsWhereInput[]
    NOT?: MlsInstanceDetailsWhereInput | MlsInstanceDetailsWhereInput[]
    id?: StringFilter<"MlsInstanceDetails"> | string
    instanceId?: StringFilter<"MlsInstanceDetails"> | string
    acronym?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    name?: StringFilter<"MlsInstanceDetails"> | string
    mlsNumber?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    logoUrl?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    region?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    state?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    description?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    createdAt?: DateTimeFilter<"MlsInstanceDetails"> | Date | string
    updatedAt?: DateTimeFilter<"MlsInstanceDetails"> | Date | string
  }

  export type MlsInstanceDetailsOrderByWithRelationInput = {
    id?: SortOrder
    instanceId?: SortOrder
    acronym?: SortOrderInput | SortOrder
    name?: SortOrder
    mlsNumber?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceDetailsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    instanceId?: string
    AND?: MlsInstanceDetailsWhereInput | MlsInstanceDetailsWhereInput[]
    OR?: MlsInstanceDetailsWhereInput[]
    NOT?: MlsInstanceDetailsWhereInput | MlsInstanceDetailsWhereInput[]
    acronym?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    name?: StringFilter<"MlsInstanceDetails"> | string
    mlsNumber?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    logoUrl?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    region?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    state?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    description?: StringNullableFilter<"MlsInstanceDetails"> | string | null
    createdAt?: DateTimeFilter<"MlsInstanceDetails"> | Date | string
    updatedAt?: DateTimeFilter<"MlsInstanceDetails"> | Date | string
  }, "id" | "instanceId">

  export type MlsInstanceDetailsOrderByWithAggregationInput = {
    id?: SortOrder
    instanceId?: SortOrder
    acronym?: SortOrderInput | SortOrder
    name?: SortOrder
    mlsNumber?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    region?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MlsInstanceDetailsCountOrderByAggregateInput
    _max?: MlsInstanceDetailsMaxOrderByAggregateInput
    _min?: MlsInstanceDetailsMinOrderByAggregateInput
  }

  export type MlsInstanceDetailsScalarWhereWithAggregatesInput = {
    AND?: MlsInstanceDetailsScalarWhereWithAggregatesInput | MlsInstanceDetailsScalarWhereWithAggregatesInput[]
    OR?: MlsInstanceDetailsScalarWhereWithAggregatesInput[]
    NOT?: MlsInstanceDetailsScalarWhereWithAggregatesInput | MlsInstanceDetailsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MlsInstanceDetails"> | string
    instanceId?: StringWithAggregatesFilter<"MlsInstanceDetails"> | string
    acronym?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    name?: StringWithAggregatesFilter<"MlsInstanceDetails"> | string
    mlsNumber?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    logoUrl?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    region?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    state?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    description?: StringNullableWithAggregatesFilter<"MlsInstanceDetails"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MlsInstanceDetails"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MlsInstanceDetails"> | Date | string
  }

  export type MlsInstanceVisibilityWhereInput = {
    AND?: MlsInstanceVisibilityWhereInput | MlsInstanceVisibilityWhereInput[]
    OR?: MlsInstanceVisibilityWhereInput[]
    NOT?: MlsInstanceVisibilityWhereInput | MlsInstanceVisibilityWhereInput[]
    id?: StringFilter<"MlsInstanceVisibility"> | string
    mlsInstanceId?: StringFilter<"MlsInstanceVisibility"> | string
    isHidden?: BoolFilter<"MlsInstanceVisibility"> | boolean
    reason?: StringNullableFilter<"MlsInstanceVisibility"> | string | null
    hiddenAt?: DateTimeNullableFilter<"MlsInstanceVisibility"> | Date | string | null
    createdAt?: DateTimeFilter<"MlsInstanceVisibility"> | Date | string
    updatedAt?: DateTimeFilter<"MlsInstanceVisibility"> | Date | string
  }

  export type MlsInstanceVisibilityOrderByWithRelationInput = {
    id?: SortOrder
    mlsInstanceId?: SortOrder
    isHidden?: SortOrder
    reason?: SortOrderInput | SortOrder
    hiddenAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceVisibilityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    mlsInstanceId?: string
    AND?: MlsInstanceVisibilityWhereInput | MlsInstanceVisibilityWhereInput[]
    OR?: MlsInstanceVisibilityWhereInput[]
    NOT?: MlsInstanceVisibilityWhereInput | MlsInstanceVisibilityWhereInput[]
    isHidden?: BoolFilter<"MlsInstanceVisibility"> | boolean
    reason?: StringNullableFilter<"MlsInstanceVisibility"> | string | null
    hiddenAt?: DateTimeNullableFilter<"MlsInstanceVisibility"> | Date | string | null
    createdAt?: DateTimeFilter<"MlsInstanceVisibility"> | Date | string
    updatedAt?: DateTimeFilter<"MlsInstanceVisibility"> | Date | string
  }, "id" | "mlsInstanceId">

  export type MlsInstanceVisibilityOrderByWithAggregationInput = {
    id?: SortOrder
    mlsInstanceId?: SortOrder
    isHidden?: SortOrder
    reason?: SortOrderInput | SortOrder
    hiddenAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MlsInstanceVisibilityCountOrderByAggregateInput
    _max?: MlsInstanceVisibilityMaxOrderByAggregateInput
    _min?: MlsInstanceVisibilityMinOrderByAggregateInput
  }

  export type MlsInstanceVisibilityScalarWhereWithAggregatesInput = {
    AND?: MlsInstanceVisibilityScalarWhereWithAggregatesInput | MlsInstanceVisibilityScalarWhereWithAggregatesInput[]
    OR?: MlsInstanceVisibilityScalarWhereWithAggregatesInput[]
    NOT?: MlsInstanceVisibilityScalarWhereWithAggregatesInput | MlsInstanceVisibilityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MlsInstanceVisibility"> | string
    mlsInstanceId?: StringWithAggregatesFilter<"MlsInstanceVisibility"> | string
    isHidden?: BoolWithAggregatesFilter<"MlsInstanceVisibility"> | boolean
    reason?: StringNullableWithAggregatesFilter<"MlsInstanceVisibility"> | string | null
    hiddenAt?: DateTimeNullableWithAggregatesFilter<"MlsInstanceVisibility"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"MlsInstanceVisibility"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MlsInstanceVisibility"> | Date | string
  }

  export type PropertyRadarWhereInput = {
    AND?: PropertyRadarWhereInput | PropertyRadarWhereInput[]
    OR?: PropertyRadarWhereInput[]
    NOT?: PropertyRadarWhereInput | PropertyRadarWhereInput[]
    id?: StringFilter<"PropertyRadar"> | string
    parcelNumber?: StringFilter<"PropertyRadar"> | string
    address?: StringFilter<"PropertyRadar"> | string
    city?: StringFilter<"PropertyRadar"> | string
    state?: StringFilter<"PropertyRadar"> | string
    zipCode?: StringFilter<"PropertyRadar"> | string
    county?: StringFilter<"PropertyRadar"> | string
    propertyType?: StringFilter<"PropertyRadar"> | string
    yearBuilt?: IntNullableFilter<"PropertyRadar"> | number | null
    units?: IntNullableFilter<"PropertyRadar"> | number | null
    squareFeet?: StringNullableFilter<"PropertyRadar"> | string | null
    annualTaxes?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    avm?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    availableEquity?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    cltv?: IntNullableFilter<"PropertyRadar"> | number | null
    equityPercent?: IntNullableFilter<"PropertyRadar"> | number | null
    ownerName1?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerName2?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerAddress?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerCity?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerState?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerZip?: StringNullableFilter<"PropertyRadar"> | string | null
    lastTransferDate?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    lastTransferValue?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: StringNullableFilter<"PropertyRadar"> | string | null
    lastTransferDownPayment?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: IntNullableFilter<"PropertyRadar"> | number | null
    deletedAt?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    loanDataFetchedAt?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    denormalizedListingUnitNumber?: StringFilter<"PropertyRadar"> | string
    needsReview?: BoolFilter<"PropertyRadar"> | boolean
    reviewReason?: StringNullableFilter<"PropertyRadar"> | string | null
    unitNumber?: StringFilter<"PropertyRadar"> | string
    listingId?: StringNullableFilter<"PropertyRadar"> | string | null
    rawLoanDataId?: StringNullableFilter<"PropertyRadar"> | string | null
    createdAt?: DateTimeFilter<"PropertyRadar"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyRadar"> | Date | string
    Listing?: XOR<ListingNullableScalarRelationFilter, ListingWhereInput> | null
    Loan?: LoanListRelationFilter
  }

  export type PropertyRadarOrderByWithRelationInput = {
    id?: SortOrder
    parcelNumber?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    county?: SortOrder
    propertyType?: SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    units?: SortOrderInput | SortOrder
    squareFeet?: SortOrderInput | SortOrder
    annualTaxes?: SortOrderInput | SortOrder
    avm?: SortOrderInput | SortOrder
    availableEquity?: SortOrderInput | SortOrder
    cltv?: SortOrderInput | SortOrder
    equityPercent?: SortOrderInput | SortOrder
    ownerName1?: SortOrderInput | SortOrder
    ownerName2?: SortOrderInput | SortOrder
    ownerAddress?: SortOrderInput | SortOrder
    ownerCity?: SortOrderInput | SortOrder
    ownerState?: SortOrderInput | SortOrder
    ownerZip?: SortOrderInput | SortOrder
    lastTransferDate?: SortOrderInput | SortOrder
    lastTransferValue?: SortOrderInput | SortOrder
    lastTransferType?: SortOrderInput | SortOrder
    lastTransferDownPayment?: SortOrderInput | SortOrder
    lastTransferDownPaymentPercent?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    loanDataFetchedAt?: SortOrderInput | SortOrder
    denormalizedListingUnitNumber?: SortOrder
    needsReview?: SortOrder
    reviewReason?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    listingId?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Listing?: ListingOrderByWithRelationInput
    Loan?: LoanOrderByRelationAggregateInput
  }

  export type PropertyRadarWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PropertyRadarWhereInput | PropertyRadarWhereInput[]
    OR?: PropertyRadarWhereInput[]
    NOT?: PropertyRadarWhereInput | PropertyRadarWhereInput[]
    parcelNumber?: StringFilter<"PropertyRadar"> | string
    address?: StringFilter<"PropertyRadar"> | string
    city?: StringFilter<"PropertyRadar"> | string
    state?: StringFilter<"PropertyRadar"> | string
    zipCode?: StringFilter<"PropertyRadar"> | string
    county?: StringFilter<"PropertyRadar"> | string
    propertyType?: StringFilter<"PropertyRadar"> | string
    yearBuilt?: IntNullableFilter<"PropertyRadar"> | number | null
    units?: IntNullableFilter<"PropertyRadar"> | number | null
    squareFeet?: StringNullableFilter<"PropertyRadar"> | string | null
    annualTaxes?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    avm?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    availableEquity?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    cltv?: IntNullableFilter<"PropertyRadar"> | number | null
    equityPercent?: IntNullableFilter<"PropertyRadar"> | number | null
    ownerName1?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerName2?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerAddress?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerCity?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerState?: StringNullableFilter<"PropertyRadar"> | string | null
    ownerZip?: StringNullableFilter<"PropertyRadar"> | string | null
    lastTransferDate?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    lastTransferValue?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: StringNullableFilter<"PropertyRadar"> | string | null
    lastTransferDownPayment?: DecimalNullableFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: IntNullableFilter<"PropertyRadar"> | number | null
    deletedAt?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    loanDataFetchedAt?: DateTimeNullableFilter<"PropertyRadar"> | Date | string | null
    denormalizedListingUnitNumber?: StringFilter<"PropertyRadar"> | string
    needsReview?: BoolFilter<"PropertyRadar"> | boolean
    reviewReason?: StringNullableFilter<"PropertyRadar"> | string | null
    unitNumber?: StringFilter<"PropertyRadar"> | string
    listingId?: StringNullableFilter<"PropertyRadar"> | string | null
    rawLoanDataId?: StringNullableFilter<"PropertyRadar"> | string | null
    createdAt?: DateTimeFilter<"PropertyRadar"> | Date | string
    updatedAt?: DateTimeFilter<"PropertyRadar"> | Date | string
    Listing?: XOR<ListingNullableScalarRelationFilter, ListingWhereInput> | null
    Loan?: LoanListRelationFilter
  }, "id">

  export type PropertyRadarOrderByWithAggregationInput = {
    id?: SortOrder
    parcelNumber?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    county?: SortOrder
    propertyType?: SortOrder
    yearBuilt?: SortOrderInput | SortOrder
    units?: SortOrderInput | SortOrder
    squareFeet?: SortOrderInput | SortOrder
    annualTaxes?: SortOrderInput | SortOrder
    avm?: SortOrderInput | SortOrder
    availableEquity?: SortOrderInput | SortOrder
    cltv?: SortOrderInput | SortOrder
    equityPercent?: SortOrderInput | SortOrder
    ownerName1?: SortOrderInput | SortOrder
    ownerName2?: SortOrderInput | SortOrder
    ownerAddress?: SortOrderInput | SortOrder
    ownerCity?: SortOrderInput | SortOrder
    ownerState?: SortOrderInput | SortOrder
    ownerZip?: SortOrderInput | SortOrder
    lastTransferDate?: SortOrderInput | SortOrder
    lastTransferValue?: SortOrderInput | SortOrder
    lastTransferType?: SortOrderInput | SortOrder
    lastTransferDownPayment?: SortOrderInput | SortOrder
    lastTransferDownPaymentPercent?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    loanDataFetchedAt?: SortOrderInput | SortOrder
    denormalizedListingUnitNumber?: SortOrder
    needsReview?: SortOrder
    reviewReason?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    listingId?: SortOrderInput | SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PropertyRadarCountOrderByAggregateInput
    _avg?: PropertyRadarAvgOrderByAggregateInput
    _max?: PropertyRadarMaxOrderByAggregateInput
    _min?: PropertyRadarMinOrderByAggregateInput
    _sum?: PropertyRadarSumOrderByAggregateInput
  }

  export type PropertyRadarScalarWhereWithAggregatesInput = {
    AND?: PropertyRadarScalarWhereWithAggregatesInput | PropertyRadarScalarWhereWithAggregatesInput[]
    OR?: PropertyRadarScalarWhereWithAggregatesInput[]
    NOT?: PropertyRadarScalarWhereWithAggregatesInput | PropertyRadarScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PropertyRadar"> | string
    parcelNumber?: StringWithAggregatesFilter<"PropertyRadar"> | string
    address?: StringWithAggregatesFilter<"PropertyRadar"> | string
    city?: StringWithAggregatesFilter<"PropertyRadar"> | string
    state?: StringWithAggregatesFilter<"PropertyRadar"> | string
    zipCode?: StringWithAggregatesFilter<"PropertyRadar"> | string
    county?: StringWithAggregatesFilter<"PropertyRadar"> | string
    propertyType?: StringWithAggregatesFilter<"PropertyRadar"> | string
    yearBuilt?: IntNullableWithAggregatesFilter<"PropertyRadar"> | number | null
    units?: IntNullableWithAggregatesFilter<"PropertyRadar"> | number | null
    squareFeet?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    annualTaxes?: DecimalNullableWithAggregatesFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    avm?: DecimalNullableWithAggregatesFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    availableEquity?: DecimalNullableWithAggregatesFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    cltv?: IntNullableWithAggregatesFilter<"PropertyRadar"> | number | null
    equityPercent?: IntNullableWithAggregatesFilter<"PropertyRadar"> | number | null
    ownerName1?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    ownerName2?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    ownerAddress?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    ownerCity?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    ownerState?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    ownerZip?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    lastTransferDate?: DateTimeNullableWithAggregatesFilter<"PropertyRadar"> | Date | string | null
    lastTransferValue?: DecimalNullableWithAggregatesFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    lastTransferDownPayment?: DecimalNullableWithAggregatesFilter<"PropertyRadar"> | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: IntNullableWithAggregatesFilter<"PropertyRadar"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"PropertyRadar"> | Date | string | null
    loanDataFetchedAt?: DateTimeNullableWithAggregatesFilter<"PropertyRadar"> | Date | string | null
    denormalizedListingUnitNumber?: StringWithAggregatesFilter<"PropertyRadar"> | string
    needsReview?: BoolWithAggregatesFilter<"PropertyRadar"> | boolean
    reviewReason?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    unitNumber?: StringWithAggregatesFilter<"PropertyRadar"> | string
    listingId?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    rawLoanDataId?: StringNullableWithAggregatesFilter<"PropertyRadar"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PropertyRadar"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PropertyRadar"> | Date | string
  }

  export type RawListingDataWhereInput = {
    AND?: RawListingDataWhereInput | RawListingDataWhereInput[]
    OR?: RawListingDataWhereInput[]
    NOT?: RawListingDataWhereInput | RawListingDataWhereInput[]
    id?: StringFilter<"RawListingData"> | string
    mlsProviderId?: StringFilter<"RawListingData"> | string
    rawData?: JsonFilter<"RawListingData">
    rawDataHash?: StringFilter<"RawListingData"> | string
    status?: StringFilter<"RawListingData"> | string
    errorMessage?: StringNullableFilter<"RawListingData"> | string | null
    createdAt?: DateTimeFilter<"RawListingData"> | Date | string
    updatedAt?: DateTimeFilter<"RawListingData"> | Date | string
    processedAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    parcelNumber?: StringNullableFilter<"RawListingData"> | string | null
    zipCode?: StringNullableFilter<"RawListingData"> | string | null
    mlsStatus?: StringNullableFilter<"RawListingData"> | string | null
    modificationTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    mlsInstanceId?: StringNullableFilter<"RawListingData"> | string | null
    propertyType?: StringNullableFilter<"RawListingData"> | string | null
    statusChangeTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    unitNumber?: StringFilter<"RawListingData"> | string
    unparsedAddress?: StringNullableFilter<"RawListingData"> | string | null
    loanDataError?: StringNullableFilter<"RawListingData"> | string | null
    loanDataPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    photosPullError?: StringNullableFilter<"RawListingData"> | string | null
    photosPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    rawLoanDataId?: StringNullableFilter<"RawListingData"> | string | null
    rawPhotoDataId?: StringNullableFilter<"RawListingData"> | string | null
    processingVersion?: StringNullableFilter<"RawListingData"> | string | null
    lastPhotosPullAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    photosCount?: IntNullableFilter<"RawListingData"> | number | null
    photosPullAttempts?: IntFilter<"RawListingData"> | number
    pullerVersion?: StringNullableFilter<"RawListingData"> | string | null
    RawLoanData?: XOR<RawLoanDataNullableScalarRelationFilter, RawLoanDataWhereInput> | null
    RawPhotoData?: XOR<RawPhotoDataNullableScalarRelationFilter, RawPhotoDataWhereInput> | null
  }

  export type RawListingDataOrderByWithRelationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    parcelNumber?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    mlsStatus?: SortOrderInput | SortOrder
    modificationTimestamp?: SortOrderInput | SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    propertyType?: SortOrderInput | SortOrder
    statusChangeTimestamp?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    unparsedAddress?: SortOrderInput | SortOrder
    loanDataError?: SortOrderInput | SortOrder
    loanDataPullStatus?: SortOrder
    photosPullError?: SortOrderInput | SortOrder
    photosPullStatus?: SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    rawPhotoDataId?: SortOrderInput | SortOrder
    processingVersion?: SortOrderInput | SortOrder
    lastPhotosPullAt?: SortOrderInput | SortOrder
    photosCount?: SortOrderInput | SortOrder
    photosPullAttempts?: SortOrder
    pullerVersion?: SortOrderInput | SortOrder
    RawLoanData?: RawLoanDataOrderByWithRelationInput
    RawPhotoData?: RawPhotoDataOrderByWithRelationInput
  }

  export type RawListingDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    rawDataHash?: string
    AND?: RawListingDataWhereInput | RawListingDataWhereInput[]
    OR?: RawListingDataWhereInput[]
    NOT?: RawListingDataWhereInput | RawListingDataWhereInput[]
    mlsProviderId?: StringFilter<"RawListingData"> | string
    rawData?: JsonFilter<"RawListingData">
    status?: StringFilter<"RawListingData"> | string
    errorMessage?: StringNullableFilter<"RawListingData"> | string | null
    createdAt?: DateTimeFilter<"RawListingData"> | Date | string
    updatedAt?: DateTimeFilter<"RawListingData"> | Date | string
    processedAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    parcelNumber?: StringNullableFilter<"RawListingData"> | string | null
    zipCode?: StringNullableFilter<"RawListingData"> | string | null
    mlsStatus?: StringNullableFilter<"RawListingData"> | string | null
    modificationTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    mlsInstanceId?: StringNullableFilter<"RawListingData"> | string | null
    propertyType?: StringNullableFilter<"RawListingData"> | string | null
    statusChangeTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    unitNumber?: StringFilter<"RawListingData"> | string
    unparsedAddress?: StringNullableFilter<"RawListingData"> | string | null
    loanDataError?: StringNullableFilter<"RawListingData"> | string | null
    loanDataPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    photosPullError?: StringNullableFilter<"RawListingData"> | string | null
    photosPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    rawLoanDataId?: StringNullableFilter<"RawListingData"> | string | null
    rawPhotoDataId?: StringNullableFilter<"RawListingData"> | string | null
    processingVersion?: StringNullableFilter<"RawListingData"> | string | null
    lastPhotosPullAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    photosCount?: IntNullableFilter<"RawListingData"> | number | null
    photosPullAttempts?: IntFilter<"RawListingData"> | number
    pullerVersion?: StringNullableFilter<"RawListingData"> | string | null
    RawLoanData?: XOR<RawLoanDataNullableScalarRelationFilter, RawLoanDataWhereInput> | null
    RawPhotoData?: XOR<RawPhotoDataNullableScalarRelationFilter, RawPhotoDataWhereInput> | null
  }, "id" | "rawDataHash">

  export type RawListingDataOrderByWithAggregationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processedAt?: SortOrderInput | SortOrder
    parcelNumber?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    mlsStatus?: SortOrderInput | SortOrder
    modificationTimestamp?: SortOrderInput | SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    propertyType?: SortOrderInput | SortOrder
    statusChangeTimestamp?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    unparsedAddress?: SortOrderInput | SortOrder
    loanDataError?: SortOrderInput | SortOrder
    loanDataPullStatus?: SortOrder
    photosPullError?: SortOrderInput | SortOrder
    photosPullStatus?: SortOrder
    rawLoanDataId?: SortOrderInput | SortOrder
    rawPhotoDataId?: SortOrderInput | SortOrder
    processingVersion?: SortOrderInput | SortOrder
    lastPhotosPullAt?: SortOrderInput | SortOrder
    photosCount?: SortOrderInput | SortOrder
    photosPullAttempts?: SortOrder
    pullerVersion?: SortOrderInput | SortOrder
    _count?: RawListingDataCountOrderByAggregateInput
    _avg?: RawListingDataAvgOrderByAggregateInput
    _max?: RawListingDataMaxOrderByAggregateInput
    _min?: RawListingDataMinOrderByAggregateInput
    _sum?: RawListingDataSumOrderByAggregateInput
  }

  export type RawListingDataScalarWhereWithAggregatesInput = {
    AND?: RawListingDataScalarWhereWithAggregatesInput | RawListingDataScalarWhereWithAggregatesInput[]
    OR?: RawListingDataScalarWhereWithAggregatesInput[]
    NOT?: RawListingDataScalarWhereWithAggregatesInput | RawListingDataScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RawListingData"> | string
    mlsProviderId?: StringWithAggregatesFilter<"RawListingData"> | string
    rawData?: JsonWithAggregatesFilter<"RawListingData">
    rawDataHash?: StringWithAggregatesFilter<"RawListingData"> | string
    status?: StringWithAggregatesFilter<"RawListingData"> | string
    errorMessage?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RawListingData"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"RawListingData"> | Date | string
    processedAt?: DateTimeNullableWithAggregatesFilter<"RawListingData"> | Date | string | null
    parcelNumber?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    mlsStatus?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    modificationTimestamp?: DateTimeNullableWithAggregatesFilter<"RawListingData"> | Date | string | null
    mlsInstanceId?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    propertyType?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    statusChangeTimestamp?: DateTimeNullableWithAggregatesFilter<"RawListingData"> | Date | string | null
    unitNumber?: StringWithAggregatesFilter<"RawListingData"> | string
    unparsedAddress?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    loanDataError?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    loanDataPullStatus?: EnumDataPullStatusWithAggregatesFilter<"RawListingData"> | $Enums.DataPullStatus
    photosPullError?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    photosPullStatus?: EnumDataPullStatusWithAggregatesFilter<"RawListingData"> | $Enums.DataPullStatus
    rawLoanDataId?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    rawPhotoDataId?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    processingVersion?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
    lastPhotosPullAt?: DateTimeNullableWithAggregatesFilter<"RawListingData"> | Date | string | null
    photosCount?: IntNullableWithAggregatesFilter<"RawListingData"> | number | null
    photosPullAttempts?: IntWithAggregatesFilter<"RawListingData"> | number
    pullerVersion?: StringNullableWithAggregatesFilter<"RawListingData"> | string | null
  }

  export type RawLoanDataWhereInput = {
    AND?: RawLoanDataWhereInput | RawLoanDataWhereInput[]
    OR?: RawLoanDataWhereInput[]
    NOT?: RawLoanDataWhereInput | RawLoanDataWhereInput[]
    id?: StringFilter<"RawLoanData"> | string
    mlsProviderId?: StringFilter<"RawLoanData"> | string
    mlsInstanceId?: StringNullableFilter<"RawLoanData"> | string | null
    parcelNumber?: StringNullableFilter<"RawLoanData"> | string | null
    zipCode?: StringNullableFilter<"RawLoanData"> | string | null
    unitNumber?: StringFilter<"RawLoanData"> | string
    rawData?: JsonFilter<"RawLoanData">
    rawDataHash?: StringFilter<"RawLoanData"> | string
    status?: StringFilter<"RawLoanData"> | string
    errorMessage?: StringNullableFilter<"RawLoanData"> | string | null
    processedAt?: DateTimeNullableFilter<"RawLoanData"> | Date | string | null
    createdAt?: DateTimeFilter<"RawLoanData"> | Date | string
    apiCriteria?: JsonNullableFilter<"RawLoanData">
    rawListingDataId?: StringNullableFilter<"RawLoanData"> | string | null
    RawListingData?: RawListingDataListRelationFilter
  }

  export type RawLoanDataOrderByWithRelationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    parcelNumber?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    apiCriteria?: SortOrderInput | SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    RawListingData?: RawListingDataOrderByRelationAggregateInput
  }

  export type RawLoanDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    rawDataHash?: string
    AND?: RawLoanDataWhereInput | RawLoanDataWhereInput[]
    OR?: RawLoanDataWhereInput[]
    NOT?: RawLoanDataWhereInput | RawLoanDataWhereInput[]
    mlsProviderId?: StringFilter<"RawLoanData"> | string
    mlsInstanceId?: StringNullableFilter<"RawLoanData"> | string | null
    parcelNumber?: StringNullableFilter<"RawLoanData"> | string | null
    zipCode?: StringNullableFilter<"RawLoanData"> | string | null
    unitNumber?: StringFilter<"RawLoanData"> | string
    rawData?: JsonFilter<"RawLoanData">
    status?: StringFilter<"RawLoanData"> | string
    errorMessage?: StringNullableFilter<"RawLoanData"> | string | null
    processedAt?: DateTimeNullableFilter<"RawLoanData"> | Date | string | null
    createdAt?: DateTimeFilter<"RawLoanData"> | Date | string
    apiCriteria?: JsonNullableFilter<"RawLoanData">
    rawListingDataId?: StringNullableFilter<"RawLoanData"> | string | null
    RawListingData?: RawListingDataListRelationFilter
  }, "id" | "rawDataHash">

  export type RawLoanDataOrderByWithAggregationInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    mlsInstanceId?: SortOrderInput | SortOrder
    parcelNumber?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    unitNumber?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    apiCriteria?: SortOrderInput | SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    _count?: RawLoanDataCountOrderByAggregateInput
    _max?: RawLoanDataMaxOrderByAggregateInput
    _min?: RawLoanDataMinOrderByAggregateInput
  }

  export type RawLoanDataScalarWhereWithAggregatesInput = {
    AND?: RawLoanDataScalarWhereWithAggregatesInput | RawLoanDataScalarWhereWithAggregatesInput[]
    OR?: RawLoanDataScalarWhereWithAggregatesInput[]
    NOT?: RawLoanDataScalarWhereWithAggregatesInput | RawLoanDataScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RawLoanData"> | string
    mlsProviderId?: StringWithAggregatesFilter<"RawLoanData"> | string
    mlsInstanceId?: StringNullableWithAggregatesFilter<"RawLoanData"> | string | null
    parcelNumber?: StringNullableWithAggregatesFilter<"RawLoanData"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"RawLoanData"> | string | null
    unitNumber?: StringWithAggregatesFilter<"RawLoanData"> | string
    rawData?: JsonWithAggregatesFilter<"RawLoanData">
    rawDataHash?: StringWithAggregatesFilter<"RawLoanData"> | string
    status?: StringWithAggregatesFilter<"RawLoanData"> | string
    errorMessage?: StringNullableWithAggregatesFilter<"RawLoanData"> | string | null
    processedAt?: DateTimeNullableWithAggregatesFilter<"RawLoanData"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"RawLoanData"> | Date | string
    apiCriteria?: JsonNullableWithAggregatesFilter<"RawLoanData">
    rawListingDataId?: StringNullableWithAggregatesFilter<"RawLoanData"> | string | null
  }

  export type RawPhotoDataWhereInput = {
    AND?: RawPhotoDataWhereInput | RawPhotoDataWhereInput[]
    OR?: RawPhotoDataWhereInput[]
    NOT?: RawPhotoDataWhereInput | RawPhotoDataWhereInput[]
    id?: StringFilter<"RawPhotoData"> | string
    mlsListingId?: StringFilter<"RawPhotoData"> | string
    mlsProviderId?: StringFilter<"RawPhotoData"> | string
    rawResponse?: JsonFilter<"RawPhotoData">
    headers?: JsonNullableFilter<"RawPhotoData">
    status?: EnumPhotoProcessingStatusFilter<"RawPhotoData"> | $Enums.PhotoProcessingStatus
    errorMessage?: StringNullableFilter<"RawPhotoData"> | string | null
    processedAt?: DateTimeNullableFilter<"RawPhotoData"> | Date | string | null
    rawListingId?: StringFilter<"RawPhotoData"> | string
    photoUrls?: StringNullableListFilter<"RawPhotoData">
    createdAt?: DateTimeFilter<"RawPhotoData"> | Date | string
    rawDataHash?: StringFilter<"RawPhotoData"> | string
    rawListingDataId?: StringNullableFilter<"RawPhotoData"> | string | null
    RawListingData?: RawListingDataListRelationFilter
  }

  export type RawPhotoDataOrderByWithRelationInput = {
    id?: SortOrder
    mlsListingId?: SortOrder
    mlsProviderId?: SortOrder
    rawResponse?: SortOrder
    headers?: SortOrderInput | SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    rawListingId?: SortOrder
    photoUrls?: SortOrder
    createdAt?: SortOrder
    rawDataHash?: SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    RawListingData?: RawListingDataOrderByRelationAggregateInput
  }

  export type RawPhotoDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    rawListingId?: string
    rawDataHash?: string
    mlsListingId_createdAt?: RawPhotoDataMlsListingIdCreatedAtCompoundUniqueInput
    AND?: RawPhotoDataWhereInput | RawPhotoDataWhereInput[]
    OR?: RawPhotoDataWhereInput[]
    NOT?: RawPhotoDataWhereInput | RawPhotoDataWhereInput[]
    mlsListingId?: StringFilter<"RawPhotoData"> | string
    mlsProviderId?: StringFilter<"RawPhotoData"> | string
    rawResponse?: JsonFilter<"RawPhotoData">
    headers?: JsonNullableFilter<"RawPhotoData">
    status?: EnumPhotoProcessingStatusFilter<"RawPhotoData"> | $Enums.PhotoProcessingStatus
    errorMessage?: StringNullableFilter<"RawPhotoData"> | string | null
    processedAt?: DateTimeNullableFilter<"RawPhotoData"> | Date | string | null
    photoUrls?: StringNullableListFilter<"RawPhotoData">
    createdAt?: DateTimeFilter<"RawPhotoData"> | Date | string
    rawListingDataId?: StringNullableFilter<"RawPhotoData"> | string | null
    RawListingData?: RawListingDataListRelationFilter
  }, "id" | "rawListingId" | "rawDataHash" | "mlsListingId_createdAt">

  export type RawPhotoDataOrderByWithAggregationInput = {
    id?: SortOrder
    mlsListingId?: SortOrder
    mlsProviderId?: SortOrder
    rawResponse?: SortOrder
    headers?: SortOrderInput | SortOrder
    status?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    processedAt?: SortOrderInput | SortOrder
    rawListingId?: SortOrder
    photoUrls?: SortOrder
    createdAt?: SortOrder
    rawDataHash?: SortOrder
    rawListingDataId?: SortOrderInput | SortOrder
    _count?: RawPhotoDataCountOrderByAggregateInput
    _max?: RawPhotoDataMaxOrderByAggregateInput
    _min?: RawPhotoDataMinOrderByAggregateInput
  }

  export type RawPhotoDataScalarWhereWithAggregatesInput = {
    AND?: RawPhotoDataScalarWhereWithAggregatesInput | RawPhotoDataScalarWhereWithAggregatesInput[]
    OR?: RawPhotoDataScalarWhereWithAggregatesInput[]
    NOT?: RawPhotoDataScalarWhereWithAggregatesInput | RawPhotoDataScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RawPhotoData"> | string
    mlsListingId?: StringWithAggregatesFilter<"RawPhotoData"> | string
    mlsProviderId?: StringWithAggregatesFilter<"RawPhotoData"> | string
    rawResponse?: JsonWithAggregatesFilter<"RawPhotoData">
    headers?: JsonNullableWithAggregatesFilter<"RawPhotoData">
    status?: EnumPhotoProcessingStatusWithAggregatesFilter<"RawPhotoData"> | $Enums.PhotoProcessingStatus
    errorMessage?: StringNullableWithAggregatesFilter<"RawPhotoData"> | string | null
    processedAt?: DateTimeNullableWithAggregatesFilter<"RawPhotoData"> | Date | string | null
    rawListingId?: StringWithAggregatesFilter<"RawPhotoData"> | string
    photoUrls?: StringNullableListFilter<"RawPhotoData">
    createdAt?: DateTimeWithAggregatesFilter<"RawPhotoData"> | Date | string
    rawDataHash?: StringWithAggregatesFilter<"RawPhotoData"> | string
    rawListingDataId?: StringNullableWithAggregatesFilter<"RawPhotoData"> | string | null
  }

  export type spatial_ref_sysWhereInput = {
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    srid?: IntFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }

  export type spatial_ref_sysOrderByWithRelationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
  }

  export type spatial_ref_sysWhereUniqueInput = Prisma.AtLeast<{
    srid?: number
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }, "srid">

  export type spatial_ref_sysOrderByWithAggregationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
    _count?: spatial_ref_sysCountOrderByAggregateInput
    _avg?: spatial_ref_sysAvgOrderByAggregateInput
    _max?: spatial_ref_sysMaxOrderByAggregateInput
    _min?: spatial_ref_sysMinOrderByAggregateInput
    _sum?: spatial_ref_sysSumOrderByAggregateInput
  }

  export type spatial_ref_sysScalarWhereWithAggregatesInput = {
    AND?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    OR?: spatial_ref_sysScalarWhereWithAggregatesInput[]
    NOT?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    srid?: IntWithAggregatesFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableWithAggregatesFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
  }

  export type AssumableMortgageCreateInput = {
    id: string
    currentBalance: Decimal | DecimalJsLike | number | string
    interestRate: Decimal | DecimalJsLike | number | string
    monthlyPayment: Decimal | DecimalJsLike | number | string
    remainingTerm: number
    qualifyingIncome?: Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: Decimal | DecimalJsLike | number | string | null
    assumabilityStatus: string
    lastVerifiedDate?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    downPayment: Decimal | DecimalJsLike | number | string
    monthlyAllInPayment: Decimal | DecimalJsLike | number | string
    monthlyHoa: Decimal | DecimalJsLike | number | string
    monthlyInsurance: Decimal | DecimalJsLike | number | string
    monthlyPmi: Decimal | DecimalJsLike | number | string
    monthlyPropertyTax: Decimal | DecimalJsLike | number | string
    percentDown: Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: string | null
    rawLoanDataId?: string | null
    Loan?: LoanCreateNestedOneWithoutAssumableMortgageInput
  }

  export type AssumableMortgageUncheckedCreateInput = {
    id: string
    currentBalance: Decimal | DecimalJsLike | number | string
    interestRate: Decimal | DecimalJsLike | number | string
    monthlyPayment: Decimal | DecimalJsLike | number | string
    remainingTerm: number
    qualifyingIncome?: Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: Decimal | DecimalJsLike | number | string | null
    assumabilityStatus: string
    lastVerifiedDate?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    downPayment: Decimal | DecimalJsLike | number | string
    monthlyAllInPayment: Decimal | DecimalJsLike | number | string
    monthlyHoa: Decimal | DecimalJsLike | number | string
    monthlyInsurance: Decimal | DecimalJsLike | number | string
    monthlyPmi: Decimal | DecimalJsLike | number | string
    monthlyPropertyTax: Decimal | DecimalJsLike | number | string
    percentDown: Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: string | null
    rawLoanDataId?: string | null
    Loan?: LoanUncheckedCreateNestedOneWithoutAssumableMortgageInput
  }

  export type AssumableMortgageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    Loan?: LoanUpdateOneWithoutAssumableMortgageNestedInput
  }

  export type AssumableMortgageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    Loan?: LoanUncheckedUpdateOneWithoutAssumableMortgageNestedInput
  }

  export type AssumableMortgageCreateManyInput = {
    id: string
    currentBalance: Decimal | DecimalJsLike | number | string
    interestRate: Decimal | DecimalJsLike | number | string
    monthlyPayment: Decimal | DecimalJsLike | number | string
    remainingTerm: number
    qualifyingIncome?: Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: Decimal | DecimalJsLike | number | string | null
    assumabilityStatus: string
    lastVerifiedDate?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    downPayment: Decimal | DecimalJsLike | number | string
    monthlyAllInPayment: Decimal | DecimalJsLike | number | string
    monthlyHoa: Decimal | DecimalJsLike | number | string
    monthlyInsurance: Decimal | DecimalJsLike | number | string
    monthlyPmi: Decimal | DecimalJsLike | number | string
    monthlyPropertyTax: Decimal | DecimalJsLike | number | string
    percentDown: Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: string | null
    rawLoanDataId?: string | null
  }

  export type AssumableMortgageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssumableMortgageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DataCorrectionCreateInput = {
    id: string
    entityType: $Enums.EntityType
    entityId: string
    field: string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue: JsonNullValueInput | InputJsonValue
    reason?: string | null
    status?: $Enums.CorrectionStatus
    appliedAt?: Date | string | null
    createdBy: string
    createdByAuditSource: $Enums.AuditSource
    createdAt?: Date | string
    updatedAt: Date | string
    column: string
    fieldPath?: DataCorrectionCreatefieldPathInput | string[]
    isArrayField: boolean
    isJsonField: boolean
    rawDataId?: string | null
  }

  export type DataCorrectionUncheckedCreateInput = {
    id: string
    entityType: $Enums.EntityType
    entityId: string
    field: string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue: JsonNullValueInput | InputJsonValue
    reason?: string | null
    status?: $Enums.CorrectionStatus
    appliedAt?: Date | string | null
    createdBy: string
    createdByAuditSource: $Enums.AuditSource
    createdAt?: Date | string
    updatedAt: Date | string
    column: string
    fieldPath?: DataCorrectionCreatefieldPathInput | string[]
    isArrayField: boolean
    isJsonField: boolean
    rawDataId?: string | null
  }

  export type DataCorrectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    entityId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue?: JsonNullValueInput | InputJsonValue
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCorrectionStatusFieldUpdateOperationsInput | $Enums.CorrectionStatus
    appliedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdByAuditSource?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    column?: StringFieldUpdateOperationsInput | string
    fieldPath?: DataCorrectionUpdatefieldPathInput | string[]
    isArrayField?: BoolFieldUpdateOperationsInput | boolean
    isJsonField?: BoolFieldUpdateOperationsInput | boolean
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DataCorrectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    entityId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue?: JsonNullValueInput | InputJsonValue
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCorrectionStatusFieldUpdateOperationsInput | $Enums.CorrectionStatus
    appliedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdByAuditSource?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    column?: StringFieldUpdateOperationsInput | string
    fieldPath?: DataCorrectionUpdatefieldPathInput | string[]
    isArrayField?: BoolFieldUpdateOperationsInput | boolean
    isJsonField?: BoolFieldUpdateOperationsInput | boolean
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DataCorrectionCreateManyInput = {
    id: string
    entityType: $Enums.EntityType
    entityId: string
    field: string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue: JsonNullValueInput | InputJsonValue
    reason?: string | null
    status?: $Enums.CorrectionStatus
    appliedAt?: Date | string | null
    createdBy: string
    createdByAuditSource: $Enums.AuditSource
    createdAt?: Date | string
    updatedAt: Date | string
    column: string
    fieldPath?: DataCorrectionCreatefieldPathInput | string[]
    isArrayField: boolean
    isJsonField: boolean
    rawDataId?: string | null
  }

  export type DataCorrectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    entityId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue?: JsonNullValueInput | InputJsonValue
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCorrectionStatusFieldUpdateOperationsInput | $Enums.CorrectionStatus
    appliedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdByAuditSource?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    column?: StringFieldUpdateOperationsInput | string
    fieldPath?: DataCorrectionUpdatefieldPathInput | string[]
    isArrayField?: BoolFieldUpdateOperationsInput | boolean
    isJsonField?: BoolFieldUpdateOperationsInput | boolean
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DataCorrectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: EnumEntityTypeFieldUpdateOperationsInput | $Enums.EntityType
    entityId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    originalValue?: NullableJsonNullValueInput | InputJsonValue
    correctedValue?: JsonNullValueInput | InputJsonValue
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCorrectionStatusFieldUpdateOperationsInput | $Enums.CorrectionStatus
    appliedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    createdByAuditSource?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    column?: StringFieldUpdateOperationsInput | string
    fieldPath?: DataCorrectionUpdatefieldPathInput | string[]
    isArrayField?: BoolFieldUpdateOperationsInput | boolean
    isJsonField?: BoolFieldUpdateOperationsInput | boolean
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingCreateInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateManyInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
  }

  export type ListingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ListingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ListingAuditCreateInput = {
    id: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    Listing: ListingCreateNestedOneWithoutListingAuditInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingAuditInput
  }

  export type ListingAuditUncheckedCreateInput = {
    id: string
    listingId: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingAuditInput
  }

  export type ListingAuditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneRequiredWithoutListingAuditNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingAuditNestedInput
  }

  export type ListingAuditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingAuditNestedInput
  }

  export type ListingAuditCreateManyInput = {
    id: string
    listingId: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ListingAuditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingAuditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingHistoryCreateInput = {
    id: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    ListingAudit?: ListingAuditCreateNestedOneWithoutListingHistoryInput
    Listing: ListingCreateNestedOneWithoutListingHistoryInput
  }

  export type ListingHistoryUncheckedCreateInput = {
    id: string
    listingId: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    auditId?: string | null
  }

  export type ListingHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListingAudit?: ListingAuditUpdateOneWithoutListingHistoryNestedInput
    Listing?: ListingUpdateOneRequiredWithoutListingHistoryNestedInput
  }

  export type ListingHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    auditId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingHistoryCreateManyInput = {
    id: string
    listingId: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    auditId?: string | null
  }

  export type ListingHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    auditId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingLocationCreateInput = {
    id: string
    Listing: ListingCreateNestedOneWithoutListingLocationInput
  }

  export type ListingLocationUncheckedCreateInput = {
    id: string
    listingId: string
  }

  export type ListingLocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    Listing?: ListingUpdateOneRequiredWithoutListingLocationNestedInput
  }

  export type ListingLocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
  }

  export type ListingLocationCreateManyInput = {
    id: string
    listingId: string
  }

  export type ListingLocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type ListingLocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
  }

  export type ListingPhotoCreateInput = {
    id: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    Listing: ListingCreateNestedOneWithoutListingPhotoInput
  }

  export type ListingPhotoUncheckedCreateInput = {
    id: string
    listingId: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingPhotoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneRequiredWithoutListingPhotoNestedInput
  }

  export type ListingPhotoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingPhotoCreateManyInput = {
    id: string
    listingId: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingPhotoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingPhotoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportCreateInput = {
    id: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    Listing: ListingCreateNestedOneWithoutListingReportInput
  }

  export type ListingReportUncheckedCreateInput = {
    id: string
    listingId: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneRequiredWithoutListingReportNestedInput
  }

  export type ListingReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportCreateManyInput = {
    id: string
    listingId: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LoanCreateInput = {
    id: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
    AssumableMortgage?: AssumableMortgageCreateNestedOneWithoutLoanInput
    PropertyRadar: PropertyRadarCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateInput = {
    id: string
    propertyId: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    assumableMortgageId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
  }

  export type LoanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AssumableMortgage?: AssumableMortgageUpdateOneWithoutLoanNestedInput
    PropertyRadar?: PropertyRadarUpdateOneRequiredWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    assumableMortgageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type LoanCreateManyInput = {
    id: string
    propertyId: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    assumableMortgageId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
  }

  export type LoanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type LoanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    assumableMortgageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MlsInstanceDetailsCreateInput = {
    id: string
    instanceId: string
    acronym?: string | null
    name: string
    mlsNumber?: string | null
    logoUrl?: string | null
    region?: string | null
    state?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceDetailsUncheckedCreateInput = {
    id: string
    instanceId: string
    acronym?: string | null
    name: string
    mlsNumber?: string | null
    logoUrl?: string | null
    region?: string | null
    state?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceDetailsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    instanceId?: StringFieldUpdateOperationsInput | string
    acronym?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    mlsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceDetailsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    instanceId?: StringFieldUpdateOperationsInput | string
    acronym?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    mlsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceDetailsCreateManyInput = {
    id: string
    instanceId: string
    acronym?: string | null
    name: string
    mlsNumber?: string | null
    logoUrl?: string | null
    region?: string | null
    state?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceDetailsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    instanceId?: StringFieldUpdateOperationsInput | string
    acronym?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    mlsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceDetailsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    instanceId?: StringFieldUpdateOperationsInput | string
    acronym?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    mlsNumber?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    region?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceVisibilityCreateInput = {
    id: string
    mlsInstanceId: string
    isHidden?: boolean
    reason?: string | null
    hiddenAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceVisibilityUncheckedCreateInput = {
    id: string
    mlsInstanceId: string
    isHidden?: boolean
    reason?: string | null
    hiddenAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceVisibilityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    isHidden?: BoolFieldUpdateOperationsInput | boolean
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    hiddenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceVisibilityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    isHidden?: BoolFieldUpdateOperationsInput | boolean
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    hiddenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceVisibilityCreateManyInput = {
    id: string
    mlsInstanceId: string
    isHidden?: boolean
    reason?: string | null
    hiddenAt?: Date | string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type MlsInstanceVisibilityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    isHidden?: BoolFieldUpdateOperationsInput | boolean
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    hiddenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MlsInstanceVisibilityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    isHidden?: BoolFieldUpdateOperationsInput | boolean
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    hiddenAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyRadarCreateInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Listing?: ListingCreateNestedOneWithoutPropertyRadarInput
    Loan?: LoanCreateNestedManyWithoutPropertyRadarInput
  }

  export type PropertyRadarUncheckedCreateInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Listing?: ListingUncheckedCreateNestedOneWithoutPropertyRadarInput
    Loan?: LoanUncheckedCreateNestedManyWithoutPropertyRadarInput
  }

  export type PropertyRadarUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneWithoutPropertyRadarNestedInput
    Loan?: LoanUpdateManyWithoutPropertyRadarNestedInput
  }

  export type PropertyRadarUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUncheckedUpdateOneWithoutPropertyRadarNestedInput
    Loan?: LoanUncheckedUpdateManyWithoutPropertyRadarNestedInput
  }

  export type PropertyRadarCreateManyInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PropertyRadarUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PropertyRadarUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RawListingDataCreateInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
    RawLoanData?: RawLoanDataCreateNestedOneWithoutRawListingDataInput
    RawPhotoData?: RawPhotoDataCreateNestedOneWithoutRawListingDataInput
  }

  export type RawListingDataUncheckedCreateInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawLoanDataId?: string | null
    rawPhotoDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
    RawLoanData?: RawLoanDataUpdateOneWithoutRawListingDataNestedInput
    RawPhotoData?: RawPhotoDataUpdateOneWithoutRawListingDataNestedInput
  }

  export type RawListingDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawPhotoDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataCreateManyInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawLoanDataId?: string | null
    rawPhotoDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawPhotoDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawLoanDataCreateInput = {
    id: string
    mlsProviderId: string
    mlsInstanceId?: string | null
    parcelNumber?: string | null
    zipCode?: string | null
    unitNumber?: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: string | null
    RawListingData?: RawListingDataCreateNestedManyWithoutRawLoanDataInput
  }

  export type RawLoanDataUncheckedCreateInput = {
    id: string
    mlsProviderId: string
    mlsInstanceId?: string | null
    parcelNumber?: string | null
    zipCode?: string | null
    unitNumber?: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: string | null
    RawListingData?: RawListingDataUncheckedCreateNestedManyWithoutRawLoanDataInput
  }

  export type RawLoanDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    RawListingData?: RawListingDataUpdateManyWithoutRawLoanDataNestedInput
  }

  export type RawLoanDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    RawListingData?: RawListingDataUncheckedUpdateManyWithoutRawLoanDataNestedInput
  }

  export type RawLoanDataCreateManyInput = {
    id: string
    mlsProviderId: string
    mlsInstanceId?: string | null
    parcelNumber?: string | null
    zipCode?: string | null
    unitNumber?: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: string | null
  }

  export type RawLoanDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawLoanDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawPhotoDataCreateInput = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.PhotoProcessingStatus
    errorMessage?: string | null
    processedAt?: Date | string | null
    rawListingId: string
    photoUrls?: RawPhotoDataCreatephotoUrlsInput | string[]
    createdAt?: Date | string
    rawDataHash: string
    rawListingDataId?: string | null
    RawListingData?: RawListingDataCreateNestedManyWithoutRawPhotoDataInput
  }

  export type RawPhotoDataUncheckedCreateInput = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.PhotoProcessingStatus
    errorMessage?: string | null
    processedAt?: Date | string | null
    rawListingId: string
    photoUrls?: RawPhotoDataCreatephotoUrlsInput | string[]
    createdAt?: Date | string
    rawDataHash: string
    rawListingDataId?: string | null
    RawListingData?: RawListingDataUncheckedCreateNestedManyWithoutRawPhotoDataInput
  }

  export type RawPhotoDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    RawListingData?: RawListingDataUpdateManyWithoutRawPhotoDataNestedInput
  }

  export type RawPhotoDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    RawListingData?: RawListingDataUncheckedUpdateManyWithoutRawPhotoDataNestedInput
  }

  export type RawPhotoDataCreateManyInput = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.PhotoProcessingStatus
    errorMessage?: string | null
    processedAt?: Date | string | null
    rawListingId: string
    photoUrls?: RawPhotoDataCreatephotoUrlsInput | string[]
    createdAt?: Date | string
    rawDataHash: string
    rawListingDataId?: string | null
  }

  export type RawPhotoDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawPhotoDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUncheckedCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysCreateManyInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateManyMutationInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateManyInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type LoanNullableScalarRelationFilter = {
    is?: LoanWhereInput | null
    isNot?: LoanWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AssumableMortgageCountOrderByAggregateInput = {
    id?: SortOrder
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrder
    qualifyingDti?: SortOrder
    assumabilityStatus?: SortOrder
    lastVerifiedDate?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    tileMonthlyPayment?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    maxDownPaymentThreshold?: SortOrder
    maxLoanBalanceRatioThreshold?: SortOrder
    rawListingDataId?: SortOrder
    rawLoanDataId?: SortOrder
  }

  export type AssumableMortgageAvgOrderByAggregateInput = {
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrder
    qualifyingDti?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    assumableDesirabilityScore?: SortOrder
    maxDownPaymentThreshold?: SortOrder
    maxLoanBalanceRatioThreshold?: SortOrder
  }

  export type AssumableMortgageMaxOrderByAggregateInput = {
    id?: SortOrder
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrder
    qualifyingDti?: SortOrder
    assumabilityStatus?: SortOrder
    lastVerifiedDate?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    tileMonthlyPayment?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    maxDownPaymentThreshold?: SortOrder
    maxLoanBalanceRatioThreshold?: SortOrder
    rawListingDataId?: SortOrder
    rawLoanDataId?: SortOrder
  }

  export type AssumableMortgageMinOrderByAggregateInput = {
    id?: SortOrder
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrder
    qualifyingDti?: SortOrder
    assumabilityStatus?: SortOrder
    lastVerifiedDate?: SortOrder
    verificationNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    tileMonthlyPayment?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    maxDownPaymentThreshold?: SortOrder
    maxLoanBalanceRatioThreshold?: SortOrder
    rawListingDataId?: SortOrder
    rawLoanDataId?: SortOrder
  }

  export type AssumableMortgageSumOrderByAggregateInput = {
    currentBalance?: SortOrder
    interestRate?: SortOrder
    monthlyPayment?: SortOrder
    remainingTerm?: SortOrder
    qualifyingIncome?: SortOrder
    qualifyingDti?: SortOrder
    downPayment?: SortOrder
    monthlyAllInPayment?: SortOrder
    monthlyHoa?: SortOrder
    monthlyInsurance?: SortOrder
    monthlyPmi?: SortOrder
    monthlyPropertyTax?: SortOrder
    percentDown?: SortOrder
    assumableDesirabilityScore?: SortOrder
    maxDownPaymentThreshold?: SortOrder
    maxLoanBalanceRatioThreshold?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumEntityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeFilter<$PrismaModel> | $Enums.EntityType
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumCorrectionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CorrectionStatus | EnumCorrectionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCorrectionStatusFilter<$PrismaModel> | $Enums.CorrectionStatus
  }

  export type EnumAuditSourceFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditSource | EnumAuditSourceFieldRefInput<$PrismaModel>
    in?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditSourceFilter<$PrismaModel> | $Enums.AuditSource
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type DataCorrectionCountOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    field?: SortOrder
    originalValue?: SortOrder
    correctedValue?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    createdBy?: SortOrder
    createdByAuditSource?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    column?: SortOrder
    fieldPath?: SortOrder
    isArrayField?: SortOrder
    isJsonField?: SortOrder
    rawDataId?: SortOrder
  }

  export type DataCorrectionMaxOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    field?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    createdBy?: SortOrder
    createdByAuditSource?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    column?: SortOrder
    isArrayField?: SortOrder
    isJsonField?: SortOrder
    rawDataId?: SortOrder
  }

  export type DataCorrectionMinOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    field?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    appliedAt?: SortOrder
    createdBy?: SortOrder
    createdByAuditSource?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    column?: SortOrder
    isArrayField?: SortOrder
    isJsonField?: SortOrder
    rawDataId?: SortOrder
  }

  export type EnumEntityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel> | $Enums.EntityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntityTypeFilter<$PrismaModel>
    _max?: NestedEnumEntityTypeFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type EnumCorrectionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CorrectionStatus | EnumCorrectionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCorrectionStatusWithAggregatesFilter<$PrismaModel> | $Enums.CorrectionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCorrectionStatusFilter<$PrismaModel>
    _max?: NestedEnumCorrectionStatusFilter<$PrismaModel>
  }

  export type EnumAuditSourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditSource | EnumAuditSourceFieldRefInput<$PrismaModel>
    in?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditSourceWithAggregatesFilter<$PrismaModel> | $Enums.AuditSource
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditSourceFilter<$PrismaModel>
    _max?: NestedEnumAuditSourceFilter<$PrismaModel>
  }

  export type EnumListingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusFilter<$PrismaModel> | $Enums.ListingStatus
  }

  export type EnumPropertyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeFilter<$PrismaModel> | $Enums.PropertyType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type EnumLoanTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLoanTypeNullableFilter<$PrismaModel> | $Enums.LoanType | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type PropertyRadarNullableScalarRelationFilter = {
    is?: PropertyRadarWhereInput | null
    isNot?: PropertyRadarWhereInput | null
  }

  export type ListingAuditListRelationFilter = {
    every?: ListingAuditWhereInput
    some?: ListingAuditWhereInput
    none?: ListingAuditWhereInput
  }

  export type ListingHistoryListRelationFilter = {
    every?: ListingHistoryWhereInput
    some?: ListingHistoryWhereInput
    none?: ListingHistoryWhereInput
  }

  export type ListingLocationNullableScalarRelationFilter = {
    is?: ListingLocationWhereInput | null
    isNot?: ListingLocationWhereInput | null
  }

  export type ListingPhotoListRelationFilter = {
    every?: ListingPhotoWhereInput
    some?: ListingPhotoWhereInput
    none?: ListingPhotoWhereInput
  }

  export type ListingReportListRelationFilter = {
    every?: ListingReportWhereInput
    some?: ListingReportWhereInput
    none?: ListingReportWhereInput
  }

  export type ListingAuditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingPhotoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListingZipCodeParcelNumberUnitNumberCompoundUniqueInput = {
    zipCode: string
    parcelNumber: string
    unitNumber: string
  }

  export type ListingCountOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    rawDataHash?: SortOrder
    mlsListingId?: SortOrder
    lastMlsUpdate?: SortOrder
    isAssumable?: SortOrder
    processingState?: SortOrder
    deletedAt?: SortOrder
    status?: SortOrder
    price?: SortOrder
    propertyType?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    squareFeet?: SortOrder
    yearBuilt?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrder
    tileY?: SortOrder
    tileZ?: SortOrder
    amenities?: SortOrder
    interiorFeatures?: SortOrder
    exteriorFeatures?: SortOrder
    parkingDetails?: SortOrder
    associationDetails?: SortOrder
    schoolDetails?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    lastStatusChange?: SortOrder
    unitNumber?: SortOrder
    mlsInstanceId?: SortOrder
    photoUrls?: SortOrder
    propertyRadarId?: SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrder
    rawDataId?: SortOrder
    tilePrice?: SortOrder
    tileDenormalizedAssumableMonthlyPayment?: SortOrder
    isRootsListing?: SortOrder
    modifierScore?: SortOrder
    propertySubType?: SortOrder
    remarks?: SortOrder
    documentUrls?: SortOrder
    videoUrls?: SortOrder
    staticPriority?: SortOrder
    tileId10?: SortOrder
    tileId11?: SortOrder
    tileId12?: SortOrder
    tileId13?: SortOrder
    tileId14?: SortOrder
    tileId15?: SortOrder
    tileId16?: SortOrder
    tileId17?: SortOrder
    tileId18?: SortOrder
    tileId19?: SortOrder
    tileId20?: SortOrder
    tileId8?: SortOrder
    tileId9?: SortOrder
    tileId6?: SortOrder
    tileId7?: SortOrder
    denormalizedAssumableDownPayment?: SortOrder
    denormalizedAssumableInterestRate?: SortOrder
    denormalizedAssumableLoanType?: SortOrder
    hasPool?: SortOrder
    is55Plus?: SortOrder
    monthlyHoa?: SortOrder
    streetAddress?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    processingVersion?: SortOrder
    lotSizeAcres?: SortOrder
    lotSizeSquareFeet?: SortOrder
    agentDetails?: SortOrder
    agentEmail?: SortOrder
    agentName?: SortOrder
    agentOfficeEmail?: SortOrder
    agentOfficeName?: SortOrder
    agentOfficePhone?: SortOrder
    agentPhone?: SortOrder
    coListingAgents?: SortOrder
    denormalizedMlsInstanceLogoUrl?: SortOrder
    denormalizedMlsInstanceName?: SortOrder
    agentMlsId?: SortOrder
    denormalizedMlsInstanceAcronym?: SortOrder
    agentOfficeMlsId?: SortOrder
    hasBasement?: SortOrder
    stories?: SortOrder
  }

  export type ListingAvgOrderByAggregateInput = {
    price?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    squareFeet?: SortOrder
    yearBuilt?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrder
    tileY?: SortOrder
    tileZ?: SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrder
    modifierScore?: SortOrder
    staticPriority?: SortOrder
    tileId10?: SortOrder
    tileId11?: SortOrder
    tileId12?: SortOrder
    tileId13?: SortOrder
    tileId14?: SortOrder
    tileId15?: SortOrder
    tileId16?: SortOrder
    tileId17?: SortOrder
    tileId18?: SortOrder
    tileId19?: SortOrder
    tileId20?: SortOrder
    tileId8?: SortOrder
    tileId9?: SortOrder
    tileId6?: SortOrder
    tileId7?: SortOrder
    denormalizedAssumableDownPayment?: SortOrder
    denormalizedAssumableInterestRate?: SortOrder
    monthlyHoa?: SortOrder
    assumableDesirabilityScore?: SortOrder
    lotSizeAcres?: SortOrder
    lotSizeSquareFeet?: SortOrder
    stories?: SortOrder
  }

  export type ListingMaxOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    rawDataHash?: SortOrder
    mlsListingId?: SortOrder
    lastMlsUpdate?: SortOrder
    isAssumable?: SortOrder
    processingState?: SortOrder
    deletedAt?: SortOrder
    status?: SortOrder
    price?: SortOrder
    propertyType?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    squareFeet?: SortOrder
    yearBuilt?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrder
    tileY?: SortOrder
    tileZ?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    lastStatusChange?: SortOrder
    unitNumber?: SortOrder
    mlsInstanceId?: SortOrder
    propertyRadarId?: SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrder
    rawDataId?: SortOrder
    tilePrice?: SortOrder
    tileDenormalizedAssumableMonthlyPayment?: SortOrder
    isRootsListing?: SortOrder
    modifierScore?: SortOrder
    propertySubType?: SortOrder
    staticPriority?: SortOrder
    tileId10?: SortOrder
    tileId11?: SortOrder
    tileId12?: SortOrder
    tileId13?: SortOrder
    tileId14?: SortOrder
    tileId15?: SortOrder
    tileId16?: SortOrder
    tileId17?: SortOrder
    tileId18?: SortOrder
    tileId19?: SortOrder
    tileId20?: SortOrder
    tileId8?: SortOrder
    tileId9?: SortOrder
    tileId6?: SortOrder
    tileId7?: SortOrder
    denormalizedAssumableDownPayment?: SortOrder
    denormalizedAssumableInterestRate?: SortOrder
    denormalizedAssumableLoanType?: SortOrder
    hasPool?: SortOrder
    is55Plus?: SortOrder
    monthlyHoa?: SortOrder
    streetAddress?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    processingVersion?: SortOrder
    lotSizeAcres?: SortOrder
    lotSizeSquareFeet?: SortOrder
    agentEmail?: SortOrder
    agentName?: SortOrder
    agentOfficeEmail?: SortOrder
    agentOfficeName?: SortOrder
    agentOfficePhone?: SortOrder
    agentPhone?: SortOrder
    denormalizedMlsInstanceLogoUrl?: SortOrder
    denormalizedMlsInstanceName?: SortOrder
    agentMlsId?: SortOrder
    denormalizedMlsInstanceAcronym?: SortOrder
    agentOfficeMlsId?: SortOrder
    hasBasement?: SortOrder
    stories?: SortOrder
  }

  export type ListingMinOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    rawDataHash?: SortOrder
    mlsListingId?: SortOrder
    lastMlsUpdate?: SortOrder
    isAssumable?: SortOrder
    processingState?: SortOrder
    deletedAt?: SortOrder
    status?: SortOrder
    price?: SortOrder
    propertyType?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    squareFeet?: SortOrder
    yearBuilt?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrder
    tileY?: SortOrder
    tileZ?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    listedAt?: SortOrder
    lastStatusChange?: SortOrder
    unitNumber?: SortOrder
    mlsInstanceId?: SortOrder
    propertyRadarId?: SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrder
    rawDataId?: SortOrder
    tilePrice?: SortOrder
    tileDenormalizedAssumableMonthlyPayment?: SortOrder
    isRootsListing?: SortOrder
    modifierScore?: SortOrder
    propertySubType?: SortOrder
    staticPriority?: SortOrder
    tileId10?: SortOrder
    tileId11?: SortOrder
    tileId12?: SortOrder
    tileId13?: SortOrder
    tileId14?: SortOrder
    tileId15?: SortOrder
    tileId16?: SortOrder
    tileId17?: SortOrder
    tileId18?: SortOrder
    tileId19?: SortOrder
    tileId20?: SortOrder
    tileId8?: SortOrder
    tileId9?: SortOrder
    tileId6?: SortOrder
    tileId7?: SortOrder
    denormalizedAssumableDownPayment?: SortOrder
    denormalizedAssumableInterestRate?: SortOrder
    denormalizedAssumableLoanType?: SortOrder
    hasPool?: SortOrder
    is55Plus?: SortOrder
    monthlyHoa?: SortOrder
    streetAddress?: SortOrder
    assumableDesirabilityScore?: SortOrder
    isAssumableDesirable?: SortOrder
    processingVersion?: SortOrder
    lotSizeAcres?: SortOrder
    lotSizeSquareFeet?: SortOrder
    agentEmail?: SortOrder
    agentName?: SortOrder
    agentOfficeEmail?: SortOrder
    agentOfficeName?: SortOrder
    agentOfficePhone?: SortOrder
    agentPhone?: SortOrder
    denormalizedMlsInstanceLogoUrl?: SortOrder
    denormalizedMlsInstanceName?: SortOrder
    agentMlsId?: SortOrder
    denormalizedMlsInstanceAcronym?: SortOrder
    agentOfficeMlsId?: SortOrder
    hasBasement?: SortOrder
    stories?: SortOrder
  }

  export type ListingSumOrderByAggregateInput = {
    price?: SortOrder
    bedrooms?: SortOrder
    bathrooms?: SortOrder
    squareFeet?: SortOrder
    yearBuilt?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    tileX?: SortOrder
    tileY?: SortOrder
    tileZ?: SortOrder
    denormalizedAssumableMonthlyPayment?: SortOrder
    modifierScore?: SortOrder
    staticPriority?: SortOrder
    tileId10?: SortOrder
    tileId11?: SortOrder
    tileId12?: SortOrder
    tileId13?: SortOrder
    tileId14?: SortOrder
    tileId15?: SortOrder
    tileId16?: SortOrder
    tileId17?: SortOrder
    tileId18?: SortOrder
    tileId19?: SortOrder
    tileId20?: SortOrder
    tileId8?: SortOrder
    tileId9?: SortOrder
    tileId6?: SortOrder
    tileId7?: SortOrder
    denormalizedAssumableDownPayment?: SortOrder
    denormalizedAssumableInterestRate?: SortOrder
    monthlyHoa?: SortOrder
    assumableDesirabilityScore?: SortOrder
    lotSizeAcres?: SortOrder
    lotSizeSquareFeet?: SortOrder
    stories?: SortOrder
  }

  export type EnumListingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingStatusFilter<$PrismaModel>
    _max?: NestedEnumListingStatusFilter<$PrismaModel>
  }

  export type EnumPropertyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel> | $Enums.PropertyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyTypeFilter<$PrismaModel>
    _max?: NestedEnumPropertyTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type EnumLoanTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLoanTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.LoanType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumLoanTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumLoanTypeNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type ListingScalarRelationFilter = {
    is?: ListingWhereInput
    isNot?: ListingWhereInput
  }

  export type ListingAuditCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    action?: SortOrder
    source?: SortOrder
    sourceId?: SortOrder
    sourceName?: SortOrder
    changes?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingAuditMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    action?: SortOrder
    source?: SortOrder
    sourceId?: SortOrder
    sourceName?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingAuditMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    action?: SortOrder
    source?: SortOrder
    sourceId?: SortOrder
    sourceName?: SortOrder
    createdAt?: SortOrder
  }

  export type ListingAuditNullableScalarRelationFilter = {
    is?: ListingAuditWhereInput | null
    isNot?: ListingAuditWhereInput | null
  }

  export type ListingHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    price?: SortOrder
    status?: SortOrder
    rawData?: SortOrder
    changedFields?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    auditId?: SortOrder
  }

  export type ListingHistoryAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type ListingHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    price?: SortOrder
    status?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    auditId?: SortOrder
  }

  export type ListingHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    price?: SortOrder
    status?: SortOrder
    effectiveDate?: SortOrder
    createdAt?: SortOrder
    auditId?: SortOrder
  }

  export type ListingHistorySumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type ListingLocationCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
  }

  export type ListingLocationMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
  }

  export type ListingLocationMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
  }

  export type ListingPhotoCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    mlsUrl?: SortOrder
    s3Url?: SortOrder
    order?: SortOrder
    lastChecked?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingPhotoAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type ListingPhotoMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    mlsUrl?: SortOrder
    s3Url?: SortOrder
    order?: SortOrder
    lastChecked?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingPhotoMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    mlsUrl?: SortOrder
    s3Url?: SortOrder
    order?: SortOrder
    lastChecked?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingPhotoSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type EnumReporterTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReporterType | EnumReporterTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReporterTypeFilter<$PrismaModel> | $Enums.ReporterType
  }

  export type EnumListingReportReasonFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingReportReason | EnumListingReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumListingReportReasonFilter<$PrismaModel> | $Enums.ListingReportReason
  }

  export type ListingReportCountOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    userId?: SortOrder
    reporterType?: SortOrder
    reason?: SortOrder
    details?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingReportMaxOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    userId?: SortOrder
    reporterType?: SortOrder
    reason?: SortOrder
    details?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingReportMinOrderByAggregateInput = {
    id?: SortOrder
    listingId?: SortOrder
    userId?: SortOrder
    reporterType?: SortOrder
    reason?: SortOrder
    details?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumReporterTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReporterType | EnumReporterTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReporterTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReporterType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReporterTypeFilter<$PrismaModel>
    _max?: NestedEnumReporterTypeFilter<$PrismaModel>
  }

  export type EnumListingReportReasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingReportReason | EnumListingReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumListingReportReasonWithAggregatesFilter<$PrismaModel> | $Enums.ListingReportReason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingReportReasonFilter<$PrismaModel>
    _max?: NestedEnumListingReportReasonFilter<$PrismaModel>
  }

  export type EnumLoanTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLoanTypeFilter<$PrismaModel> | $Enums.LoanType
  }

  export type AssumableMortgageNullableScalarRelationFilter = {
    is?: AssumableMortgageWhereInput | null
    isNot?: AssumableMortgageWhereInput | null
  }

  export type PropertyRadarScalarRelationFilter = {
    is?: PropertyRadarWhereInput
    isNot?: PropertyRadarWhereInput
  }

  export type LoanCountOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    loanPosition?: SortOrder
    purpose?: SortOrder
    loanType?: SortOrder
    recordingDate?: SortOrder
    concurrent?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrder
    termYears?: SortOrder
    lenderName?: SortOrder
    rateType?: SortOrder
    interestRate?: SortOrder
    currentPeriod?: SortOrder
    startingPeriod?: SortOrder
    totalPayments?: SortOrder
    maturityDate?: SortOrder
    monthlyPayment?: SortOrder
    ownerOccupied?: SortOrder
    assumableMortgageId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mlsInstanceId?: SortOrder
    deletedAt?: SortOrder
    rawLoanDataId?: SortOrder
    interestRateEstimated?: SortOrder
    isAssumable?: SortOrder
  }

  export type LoanAvgOrderByAggregateInput = {
    loanPosition?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrder
    termYears?: SortOrder
    interestRate?: SortOrder
    currentPeriod?: SortOrder
    startingPeriod?: SortOrder
    totalPayments?: SortOrder
    monthlyPayment?: SortOrder
  }

  export type LoanMaxOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    loanPosition?: SortOrder
    purpose?: SortOrder
    loanType?: SortOrder
    recordingDate?: SortOrder
    concurrent?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrder
    termYears?: SortOrder
    lenderName?: SortOrder
    rateType?: SortOrder
    interestRate?: SortOrder
    currentPeriod?: SortOrder
    startingPeriod?: SortOrder
    totalPayments?: SortOrder
    maturityDate?: SortOrder
    monthlyPayment?: SortOrder
    ownerOccupied?: SortOrder
    assumableMortgageId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mlsInstanceId?: SortOrder
    deletedAt?: SortOrder
    rawLoanDataId?: SortOrder
    interestRateEstimated?: SortOrder
    isAssumable?: SortOrder
  }

  export type LoanMinOrderByAggregateInput = {
    id?: SortOrder
    propertyId?: SortOrder
    loanPosition?: SortOrder
    purpose?: SortOrder
    loanType?: SortOrder
    recordingDate?: SortOrder
    concurrent?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrder
    termYears?: SortOrder
    lenderName?: SortOrder
    rateType?: SortOrder
    interestRate?: SortOrder
    currentPeriod?: SortOrder
    startingPeriod?: SortOrder
    totalPayments?: SortOrder
    maturityDate?: SortOrder
    monthlyPayment?: SortOrder
    ownerOccupied?: SortOrder
    assumableMortgageId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    mlsInstanceId?: SortOrder
    deletedAt?: SortOrder
    rawLoanDataId?: SortOrder
    interestRateEstimated?: SortOrder
    isAssumable?: SortOrder
  }

  export type LoanSumOrderByAggregateInput = {
    loanPosition?: SortOrder
    initialAmount?: SortOrder
    remainingBalance?: SortOrder
    termYears?: SortOrder
    interestRate?: SortOrder
    currentPeriod?: SortOrder
    startingPeriod?: SortOrder
    totalPayments?: SortOrder
    monthlyPayment?: SortOrder
  }

  export type EnumLoanTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLoanTypeWithAggregatesFilter<$PrismaModel> | $Enums.LoanType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLoanTypeFilter<$PrismaModel>
    _max?: NestedEnumLoanTypeFilter<$PrismaModel>
  }

  export type MlsInstanceDetailsCountOrderByAggregateInput = {
    id?: SortOrder
    instanceId?: SortOrder
    acronym?: SortOrder
    name?: SortOrder
    mlsNumber?: SortOrder
    logoUrl?: SortOrder
    region?: SortOrder
    state?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceDetailsMaxOrderByAggregateInput = {
    id?: SortOrder
    instanceId?: SortOrder
    acronym?: SortOrder
    name?: SortOrder
    mlsNumber?: SortOrder
    logoUrl?: SortOrder
    region?: SortOrder
    state?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceDetailsMinOrderByAggregateInput = {
    id?: SortOrder
    instanceId?: SortOrder
    acronym?: SortOrder
    name?: SortOrder
    mlsNumber?: SortOrder
    logoUrl?: SortOrder
    region?: SortOrder
    state?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceVisibilityCountOrderByAggregateInput = {
    id?: SortOrder
    mlsInstanceId?: SortOrder
    isHidden?: SortOrder
    reason?: SortOrder
    hiddenAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceVisibilityMaxOrderByAggregateInput = {
    id?: SortOrder
    mlsInstanceId?: SortOrder
    isHidden?: SortOrder
    reason?: SortOrder
    hiddenAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MlsInstanceVisibilityMinOrderByAggregateInput = {
    id?: SortOrder
    mlsInstanceId?: SortOrder
    isHidden?: SortOrder
    reason?: SortOrder
    hiddenAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ListingNullableScalarRelationFilter = {
    is?: ListingWhereInput | null
    isNot?: ListingWhereInput | null
  }

  export type LoanListRelationFilter = {
    every?: LoanWhereInput
    some?: LoanWhereInput
    none?: LoanWhereInput
  }

  export type LoanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PropertyRadarCountOrderByAggregateInput = {
    id?: SortOrder
    parcelNumber?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    county?: SortOrder
    propertyType?: SortOrder
    yearBuilt?: SortOrder
    units?: SortOrder
    squareFeet?: SortOrder
    annualTaxes?: SortOrder
    avm?: SortOrder
    availableEquity?: SortOrder
    cltv?: SortOrder
    equityPercent?: SortOrder
    ownerName1?: SortOrder
    ownerName2?: SortOrder
    ownerAddress?: SortOrder
    ownerCity?: SortOrder
    ownerState?: SortOrder
    ownerZip?: SortOrder
    lastTransferDate?: SortOrder
    lastTransferValue?: SortOrder
    lastTransferType?: SortOrder
    lastTransferDownPayment?: SortOrder
    lastTransferDownPaymentPercent?: SortOrder
    deletedAt?: SortOrder
    loanDataFetchedAt?: SortOrder
    denormalizedListingUnitNumber?: SortOrder
    needsReview?: SortOrder
    reviewReason?: SortOrder
    unitNumber?: SortOrder
    listingId?: SortOrder
    rawLoanDataId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PropertyRadarAvgOrderByAggregateInput = {
    yearBuilt?: SortOrder
    units?: SortOrder
    annualTaxes?: SortOrder
    avm?: SortOrder
    availableEquity?: SortOrder
    cltv?: SortOrder
    equityPercent?: SortOrder
    lastTransferValue?: SortOrder
    lastTransferDownPayment?: SortOrder
    lastTransferDownPaymentPercent?: SortOrder
  }

  export type PropertyRadarMaxOrderByAggregateInput = {
    id?: SortOrder
    parcelNumber?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    county?: SortOrder
    propertyType?: SortOrder
    yearBuilt?: SortOrder
    units?: SortOrder
    squareFeet?: SortOrder
    annualTaxes?: SortOrder
    avm?: SortOrder
    availableEquity?: SortOrder
    cltv?: SortOrder
    equityPercent?: SortOrder
    ownerName1?: SortOrder
    ownerName2?: SortOrder
    ownerAddress?: SortOrder
    ownerCity?: SortOrder
    ownerState?: SortOrder
    ownerZip?: SortOrder
    lastTransferDate?: SortOrder
    lastTransferValue?: SortOrder
    lastTransferType?: SortOrder
    lastTransferDownPayment?: SortOrder
    lastTransferDownPaymentPercent?: SortOrder
    deletedAt?: SortOrder
    loanDataFetchedAt?: SortOrder
    denormalizedListingUnitNumber?: SortOrder
    needsReview?: SortOrder
    reviewReason?: SortOrder
    unitNumber?: SortOrder
    listingId?: SortOrder
    rawLoanDataId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PropertyRadarMinOrderByAggregateInput = {
    id?: SortOrder
    parcelNumber?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zipCode?: SortOrder
    county?: SortOrder
    propertyType?: SortOrder
    yearBuilt?: SortOrder
    units?: SortOrder
    squareFeet?: SortOrder
    annualTaxes?: SortOrder
    avm?: SortOrder
    availableEquity?: SortOrder
    cltv?: SortOrder
    equityPercent?: SortOrder
    ownerName1?: SortOrder
    ownerName2?: SortOrder
    ownerAddress?: SortOrder
    ownerCity?: SortOrder
    ownerState?: SortOrder
    ownerZip?: SortOrder
    lastTransferDate?: SortOrder
    lastTransferValue?: SortOrder
    lastTransferType?: SortOrder
    lastTransferDownPayment?: SortOrder
    lastTransferDownPaymentPercent?: SortOrder
    deletedAt?: SortOrder
    loanDataFetchedAt?: SortOrder
    denormalizedListingUnitNumber?: SortOrder
    needsReview?: SortOrder
    reviewReason?: SortOrder
    unitNumber?: SortOrder
    listingId?: SortOrder
    rawLoanDataId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PropertyRadarSumOrderByAggregateInput = {
    yearBuilt?: SortOrder
    units?: SortOrder
    annualTaxes?: SortOrder
    avm?: SortOrder
    availableEquity?: SortOrder
    cltv?: SortOrder
    equityPercent?: SortOrder
    lastTransferValue?: SortOrder
    lastTransferDownPayment?: SortOrder
    lastTransferDownPaymentPercent?: SortOrder
  }

  export type EnumDataPullStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DataPullStatus | EnumDataPullStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDataPullStatusFilter<$PrismaModel> | $Enums.DataPullStatus
  }

  export type RawLoanDataNullableScalarRelationFilter = {
    is?: RawLoanDataWhereInput | null
    isNot?: RawLoanDataWhereInput | null
  }

  export type RawPhotoDataNullableScalarRelationFilter = {
    is?: RawPhotoDataWhereInput | null
    isNot?: RawPhotoDataWhereInput | null
  }

  export type RawListingDataCountOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processedAt?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    mlsStatus?: SortOrder
    modificationTimestamp?: SortOrder
    mlsInstanceId?: SortOrder
    propertyType?: SortOrder
    statusChangeTimestamp?: SortOrder
    unitNumber?: SortOrder
    unparsedAddress?: SortOrder
    loanDataError?: SortOrder
    loanDataPullStatus?: SortOrder
    photosPullError?: SortOrder
    photosPullStatus?: SortOrder
    rawLoanDataId?: SortOrder
    rawPhotoDataId?: SortOrder
    processingVersion?: SortOrder
    lastPhotosPullAt?: SortOrder
    photosCount?: SortOrder
    photosPullAttempts?: SortOrder
    pullerVersion?: SortOrder
  }

  export type RawListingDataAvgOrderByAggregateInput = {
    photosCount?: SortOrder
    photosPullAttempts?: SortOrder
  }

  export type RawListingDataMaxOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processedAt?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    mlsStatus?: SortOrder
    modificationTimestamp?: SortOrder
    mlsInstanceId?: SortOrder
    propertyType?: SortOrder
    statusChangeTimestamp?: SortOrder
    unitNumber?: SortOrder
    unparsedAddress?: SortOrder
    loanDataError?: SortOrder
    loanDataPullStatus?: SortOrder
    photosPullError?: SortOrder
    photosPullStatus?: SortOrder
    rawLoanDataId?: SortOrder
    rawPhotoDataId?: SortOrder
    processingVersion?: SortOrder
    lastPhotosPullAt?: SortOrder
    photosCount?: SortOrder
    photosPullAttempts?: SortOrder
    pullerVersion?: SortOrder
  }

  export type RawListingDataMinOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    processedAt?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    mlsStatus?: SortOrder
    modificationTimestamp?: SortOrder
    mlsInstanceId?: SortOrder
    propertyType?: SortOrder
    statusChangeTimestamp?: SortOrder
    unitNumber?: SortOrder
    unparsedAddress?: SortOrder
    loanDataError?: SortOrder
    loanDataPullStatus?: SortOrder
    photosPullError?: SortOrder
    photosPullStatus?: SortOrder
    rawLoanDataId?: SortOrder
    rawPhotoDataId?: SortOrder
    processingVersion?: SortOrder
    lastPhotosPullAt?: SortOrder
    photosCount?: SortOrder
    photosPullAttempts?: SortOrder
    pullerVersion?: SortOrder
  }

  export type RawListingDataSumOrderByAggregateInput = {
    photosCount?: SortOrder
    photosPullAttempts?: SortOrder
  }

  export type EnumDataPullStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DataPullStatus | EnumDataPullStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDataPullStatusWithAggregatesFilter<$PrismaModel> | $Enums.DataPullStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDataPullStatusFilter<$PrismaModel>
    _max?: NestedEnumDataPullStatusFilter<$PrismaModel>
  }

  export type RawListingDataListRelationFilter = {
    every?: RawListingDataWhereInput
    some?: RawListingDataWhereInput
    none?: RawListingDataWhereInput
  }

  export type RawListingDataOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RawLoanDataCountOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    mlsInstanceId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    unitNumber?: SortOrder
    rawData?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    apiCriteria?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type RawLoanDataMaxOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    mlsInstanceId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    unitNumber?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type RawLoanDataMinOrderByAggregateInput = {
    id?: SortOrder
    mlsProviderId?: SortOrder
    mlsInstanceId?: SortOrder
    parcelNumber?: SortOrder
    zipCode?: SortOrder
    unitNumber?: SortOrder
    rawDataHash?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    createdAt?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type EnumPhotoProcessingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PhotoProcessingStatus | EnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel> | $Enums.PhotoProcessingStatus
  }

  export type RawPhotoDataMlsListingIdCreatedAtCompoundUniqueInput = {
    mlsListingId: string
    createdAt: Date | string
  }

  export type RawPhotoDataCountOrderByAggregateInput = {
    id?: SortOrder
    mlsListingId?: SortOrder
    mlsProviderId?: SortOrder
    rawResponse?: SortOrder
    headers?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    rawListingId?: SortOrder
    photoUrls?: SortOrder
    createdAt?: SortOrder
    rawDataHash?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type RawPhotoDataMaxOrderByAggregateInput = {
    id?: SortOrder
    mlsListingId?: SortOrder
    mlsProviderId?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    rawListingId?: SortOrder
    createdAt?: SortOrder
    rawDataHash?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type RawPhotoDataMinOrderByAggregateInput = {
    id?: SortOrder
    mlsListingId?: SortOrder
    mlsProviderId?: SortOrder
    status?: SortOrder
    errorMessage?: SortOrder
    processedAt?: SortOrder
    rawListingId?: SortOrder
    createdAt?: SortOrder
    rawDataHash?: SortOrder
    rawListingDataId?: SortOrder
  }

  export type EnumPhotoProcessingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PhotoProcessingStatus | EnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPhotoProcessingStatusWithAggregatesFilter<$PrismaModel> | $Enums.PhotoProcessingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel>
    _max?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel>
  }

  export type spatial_ref_sysCountOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysAvgOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type spatial_ref_sysMaxOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysMinOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysSumOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type LoanCreateNestedOneWithoutAssumableMortgageInput = {
    create?: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
    connectOrCreate?: LoanCreateOrConnectWithoutAssumableMortgageInput
    connect?: LoanWhereUniqueInput
  }

  export type LoanUncheckedCreateNestedOneWithoutAssumableMortgageInput = {
    create?: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
    connectOrCreate?: LoanCreateOrConnectWithoutAssumableMortgageInput
    connect?: LoanWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type LoanUpdateOneWithoutAssumableMortgageNestedInput = {
    create?: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
    connectOrCreate?: LoanCreateOrConnectWithoutAssumableMortgageInput
    upsert?: LoanUpsertWithoutAssumableMortgageInput
    disconnect?: LoanWhereInput | boolean
    delete?: LoanWhereInput | boolean
    connect?: LoanWhereUniqueInput
    update?: XOR<XOR<LoanUpdateToOneWithWhereWithoutAssumableMortgageInput, LoanUpdateWithoutAssumableMortgageInput>, LoanUncheckedUpdateWithoutAssumableMortgageInput>
  }

  export type LoanUncheckedUpdateOneWithoutAssumableMortgageNestedInput = {
    create?: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
    connectOrCreate?: LoanCreateOrConnectWithoutAssumableMortgageInput
    upsert?: LoanUpsertWithoutAssumableMortgageInput
    disconnect?: LoanWhereInput | boolean
    delete?: LoanWhereInput | boolean
    connect?: LoanWhereUniqueInput
    update?: XOR<XOR<LoanUpdateToOneWithWhereWithoutAssumableMortgageInput, LoanUpdateWithoutAssumableMortgageInput>, LoanUncheckedUpdateWithoutAssumableMortgageInput>
  }

  export type DataCorrectionCreatefieldPathInput = {
    set: string[]
  }

  export type EnumEntityTypeFieldUpdateOperationsInput = {
    set?: $Enums.EntityType
  }

  export type EnumCorrectionStatusFieldUpdateOperationsInput = {
    set?: $Enums.CorrectionStatus
  }

  export type EnumAuditSourceFieldUpdateOperationsInput = {
    set?: $Enums.AuditSource
  }

  export type DataCorrectionUpdatefieldPathInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ListingCreatephotoUrlsInput = {
    set: string[]
  }

  export type ListingCreatedocumentUrlsInput = {
    set: string[]
  }

  export type ListingCreatevideoUrlsInput = {
    set: string[]
  }

  export type PropertyRadarCreateNestedOneWithoutListingInput = {
    create?: XOR<PropertyRadarCreateWithoutListingInput, PropertyRadarUncheckedCreateWithoutListingInput>
    connectOrCreate?: PropertyRadarCreateOrConnectWithoutListingInput
    connect?: PropertyRadarWhereUniqueInput
  }

  export type ListingAuditCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput> | ListingAuditCreateWithoutListingInput[] | ListingAuditUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingInput | ListingAuditCreateOrConnectWithoutListingInput[]
    createMany?: ListingAuditCreateManyListingInputEnvelope
    connect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
  }

  export type ListingHistoryCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput> | ListingHistoryCreateWithoutListingInput[] | ListingHistoryUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingInput | ListingHistoryCreateOrConnectWithoutListingInput[]
    createMany?: ListingHistoryCreateManyListingInputEnvelope
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
  }

  export type ListingLocationCreateNestedOneWithoutListingInput = {
    create?: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
    connectOrCreate?: ListingLocationCreateOrConnectWithoutListingInput
    connect?: ListingLocationWhereUniqueInput
  }

  export type ListingPhotoCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput> | ListingPhotoCreateWithoutListingInput[] | ListingPhotoUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingPhotoCreateOrConnectWithoutListingInput | ListingPhotoCreateOrConnectWithoutListingInput[]
    createMany?: ListingPhotoCreateManyListingInputEnvelope
    connect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
  }

  export type ListingReportCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput> | ListingReportCreateWithoutListingInput[] | ListingReportUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingReportCreateOrConnectWithoutListingInput | ListingReportCreateOrConnectWithoutListingInput[]
    createMany?: ListingReportCreateManyListingInputEnvelope
    connect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
  }

  export type ListingAuditUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput> | ListingAuditCreateWithoutListingInput[] | ListingAuditUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingInput | ListingAuditCreateOrConnectWithoutListingInput[]
    createMany?: ListingAuditCreateManyListingInputEnvelope
    connect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
  }

  export type ListingHistoryUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput> | ListingHistoryCreateWithoutListingInput[] | ListingHistoryUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingInput | ListingHistoryCreateOrConnectWithoutListingInput[]
    createMany?: ListingHistoryCreateManyListingInputEnvelope
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
  }

  export type ListingLocationUncheckedCreateNestedOneWithoutListingInput = {
    create?: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
    connectOrCreate?: ListingLocationCreateOrConnectWithoutListingInput
    connect?: ListingLocationWhereUniqueInput
  }

  export type ListingPhotoUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput> | ListingPhotoCreateWithoutListingInput[] | ListingPhotoUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingPhotoCreateOrConnectWithoutListingInput | ListingPhotoCreateOrConnectWithoutListingInput[]
    createMany?: ListingPhotoCreateManyListingInputEnvelope
    connect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
  }

  export type ListingReportUncheckedCreateNestedManyWithoutListingInput = {
    create?: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput> | ListingReportCreateWithoutListingInput[] | ListingReportUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingReportCreateOrConnectWithoutListingInput | ListingReportCreateOrConnectWithoutListingInput[]
    createMany?: ListingReportCreateManyListingInputEnvelope
    connect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
  }

  export type EnumListingStatusFieldUpdateOperationsInput = {
    set?: $Enums.ListingStatus
  }

  export type EnumPropertyTypeFieldUpdateOperationsInput = {
    set?: $Enums.PropertyType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ListingUpdatephotoUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ListingUpdatedocumentUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ListingUpdatevideoUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableEnumLoanTypeFieldUpdateOperationsInput = {
    set?: $Enums.LoanType | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type PropertyRadarUpdateOneWithoutListingNestedInput = {
    create?: XOR<PropertyRadarCreateWithoutListingInput, PropertyRadarUncheckedCreateWithoutListingInput>
    connectOrCreate?: PropertyRadarCreateOrConnectWithoutListingInput
    upsert?: PropertyRadarUpsertWithoutListingInput
    disconnect?: PropertyRadarWhereInput | boolean
    delete?: PropertyRadarWhereInput | boolean
    connect?: PropertyRadarWhereUniqueInput
    update?: XOR<XOR<PropertyRadarUpdateToOneWithWhereWithoutListingInput, PropertyRadarUpdateWithoutListingInput>, PropertyRadarUncheckedUpdateWithoutListingInput>
  }

  export type ListingAuditUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput> | ListingAuditCreateWithoutListingInput[] | ListingAuditUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingInput | ListingAuditCreateOrConnectWithoutListingInput[]
    upsert?: ListingAuditUpsertWithWhereUniqueWithoutListingInput | ListingAuditUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingAuditCreateManyListingInputEnvelope
    set?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    disconnect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    delete?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    connect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    update?: ListingAuditUpdateWithWhereUniqueWithoutListingInput | ListingAuditUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingAuditUpdateManyWithWhereWithoutListingInput | ListingAuditUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingAuditScalarWhereInput | ListingAuditScalarWhereInput[]
  }

  export type ListingHistoryUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput> | ListingHistoryCreateWithoutListingInput[] | ListingHistoryUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingInput | ListingHistoryCreateOrConnectWithoutListingInput[]
    upsert?: ListingHistoryUpsertWithWhereUniqueWithoutListingInput | ListingHistoryUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingHistoryCreateManyListingInputEnvelope
    set?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    disconnect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    delete?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    update?: ListingHistoryUpdateWithWhereUniqueWithoutListingInput | ListingHistoryUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingHistoryUpdateManyWithWhereWithoutListingInput | ListingHistoryUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
  }

  export type ListingLocationUpdateOneWithoutListingNestedInput = {
    create?: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
    connectOrCreate?: ListingLocationCreateOrConnectWithoutListingInput
    upsert?: ListingLocationUpsertWithoutListingInput
    disconnect?: ListingLocationWhereInput | boolean
    delete?: ListingLocationWhereInput | boolean
    connect?: ListingLocationWhereUniqueInput
    update?: XOR<XOR<ListingLocationUpdateToOneWithWhereWithoutListingInput, ListingLocationUpdateWithoutListingInput>, ListingLocationUncheckedUpdateWithoutListingInput>
  }

  export type ListingPhotoUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput> | ListingPhotoCreateWithoutListingInput[] | ListingPhotoUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingPhotoCreateOrConnectWithoutListingInput | ListingPhotoCreateOrConnectWithoutListingInput[]
    upsert?: ListingPhotoUpsertWithWhereUniqueWithoutListingInput | ListingPhotoUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingPhotoCreateManyListingInputEnvelope
    set?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    disconnect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    delete?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    connect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    update?: ListingPhotoUpdateWithWhereUniqueWithoutListingInput | ListingPhotoUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingPhotoUpdateManyWithWhereWithoutListingInput | ListingPhotoUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingPhotoScalarWhereInput | ListingPhotoScalarWhereInput[]
  }

  export type ListingReportUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput> | ListingReportCreateWithoutListingInput[] | ListingReportUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingReportCreateOrConnectWithoutListingInput | ListingReportCreateOrConnectWithoutListingInput[]
    upsert?: ListingReportUpsertWithWhereUniqueWithoutListingInput | ListingReportUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingReportCreateManyListingInputEnvelope
    set?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    disconnect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    delete?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    connect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    update?: ListingReportUpdateWithWhereUniqueWithoutListingInput | ListingReportUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingReportUpdateManyWithWhereWithoutListingInput | ListingReportUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingReportScalarWhereInput | ListingReportScalarWhereInput[]
  }

  export type ListingAuditUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput> | ListingAuditCreateWithoutListingInput[] | ListingAuditUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingInput | ListingAuditCreateOrConnectWithoutListingInput[]
    upsert?: ListingAuditUpsertWithWhereUniqueWithoutListingInput | ListingAuditUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingAuditCreateManyListingInputEnvelope
    set?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    disconnect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    delete?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    connect?: ListingAuditWhereUniqueInput | ListingAuditWhereUniqueInput[]
    update?: ListingAuditUpdateWithWhereUniqueWithoutListingInput | ListingAuditUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingAuditUpdateManyWithWhereWithoutListingInput | ListingAuditUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingAuditScalarWhereInput | ListingAuditScalarWhereInput[]
  }

  export type ListingHistoryUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput> | ListingHistoryCreateWithoutListingInput[] | ListingHistoryUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingInput | ListingHistoryCreateOrConnectWithoutListingInput[]
    upsert?: ListingHistoryUpsertWithWhereUniqueWithoutListingInput | ListingHistoryUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingHistoryCreateManyListingInputEnvelope
    set?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    disconnect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    delete?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    update?: ListingHistoryUpdateWithWhereUniqueWithoutListingInput | ListingHistoryUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingHistoryUpdateManyWithWhereWithoutListingInput | ListingHistoryUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
  }

  export type ListingLocationUncheckedUpdateOneWithoutListingNestedInput = {
    create?: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
    connectOrCreate?: ListingLocationCreateOrConnectWithoutListingInput
    upsert?: ListingLocationUpsertWithoutListingInput
    disconnect?: ListingLocationWhereInput | boolean
    delete?: ListingLocationWhereInput | boolean
    connect?: ListingLocationWhereUniqueInput
    update?: XOR<XOR<ListingLocationUpdateToOneWithWhereWithoutListingInput, ListingLocationUpdateWithoutListingInput>, ListingLocationUncheckedUpdateWithoutListingInput>
  }

  export type ListingPhotoUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput> | ListingPhotoCreateWithoutListingInput[] | ListingPhotoUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingPhotoCreateOrConnectWithoutListingInput | ListingPhotoCreateOrConnectWithoutListingInput[]
    upsert?: ListingPhotoUpsertWithWhereUniqueWithoutListingInput | ListingPhotoUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingPhotoCreateManyListingInputEnvelope
    set?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    disconnect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    delete?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    connect?: ListingPhotoWhereUniqueInput | ListingPhotoWhereUniqueInput[]
    update?: ListingPhotoUpdateWithWhereUniqueWithoutListingInput | ListingPhotoUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingPhotoUpdateManyWithWhereWithoutListingInput | ListingPhotoUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingPhotoScalarWhereInput | ListingPhotoScalarWhereInput[]
  }

  export type ListingReportUncheckedUpdateManyWithoutListingNestedInput = {
    create?: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput> | ListingReportCreateWithoutListingInput[] | ListingReportUncheckedCreateWithoutListingInput[]
    connectOrCreate?: ListingReportCreateOrConnectWithoutListingInput | ListingReportCreateOrConnectWithoutListingInput[]
    upsert?: ListingReportUpsertWithWhereUniqueWithoutListingInput | ListingReportUpsertWithWhereUniqueWithoutListingInput[]
    createMany?: ListingReportCreateManyListingInputEnvelope
    set?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    disconnect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    delete?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    connect?: ListingReportWhereUniqueInput | ListingReportWhereUniqueInput[]
    update?: ListingReportUpdateWithWhereUniqueWithoutListingInput | ListingReportUpdateWithWhereUniqueWithoutListingInput[]
    updateMany?: ListingReportUpdateManyWithWhereWithoutListingInput | ListingReportUpdateManyWithWhereWithoutListingInput[]
    deleteMany?: ListingReportScalarWhereInput | ListingReportScalarWhereInput[]
  }

  export type ListingCreateNestedOneWithoutListingAuditInput = {
    create?: XOR<ListingCreateWithoutListingAuditInput, ListingUncheckedCreateWithoutListingAuditInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingAuditInput
    connect?: ListingWhereUniqueInput
  }

  export type ListingHistoryCreateNestedManyWithoutListingAuditInput = {
    create?: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput> | ListingHistoryCreateWithoutListingAuditInput[] | ListingHistoryUncheckedCreateWithoutListingAuditInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingAuditInput | ListingHistoryCreateOrConnectWithoutListingAuditInput[]
    createMany?: ListingHistoryCreateManyListingAuditInputEnvelope
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
  }

  export type ListingHistoryUncheckedCreateNestedManyWithoutListingAuditInput = {
    create?: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput> | ListingHistoryCreateWithoutListingAuditInput[] | ListingHistoryUncheckedCreateWithoutListingAuditInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingAuditInput | ListingHistoryCreateOrConnectWithoutListingAuditInput[]
    createMany?: ListingHistoryCreateManyListingAuditInputEnvelope
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
  }

  export type ListingUpdateOneRequiredWithoutListingAuditNestedInput = {
    create?: XOR<ListingCreateWithoutListingAuditInput, ListingUncheckedCreateWithoutListingAuditInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingAuditInput
    upsert?: ListingUpsertWithoutListingAuditInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutListingAuditInput, ListingUpdateWithoutListingAuditInput>, ListingUncheckedUpdateWithoutListingAuditInput>
  }

  export type ListingHistoryUpdateManyWithoutListingAuditNestedInput = {
    create?: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput> | ListingHistoryCreateWithoutListingAuditInput[] | ListingHistoryUncheckedCreateWithoutListingAuditInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingAuditInput | ListingHistoryCreateOrConnectWithoutListingAuditInput[]
    upsert?: ListingHistoryUpsertWithWhereUniqueWithoutListingAuditInput | ListingHistoryUpsertWithWhereUniqueWithoutListingAuditInput[]
    createMany?: ListingHistoryCreateManyListingAuditInputEnvelope
    set?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    disconnect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    delete?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    update?: ListingHistoryUpdateWithWhereUniqueWithoutListingAuditInput | ListingHistoryUpdateWithWhereUniqueWithoutListingAuditInput[]
    updateMany?: ListingHistoryUpdateManyWithWhereWithoutListingAuditInput | ListingHistoryUpdateManyWithWhereWithoutListingAuditInput[]
    deleteMany?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
  }

  export type ListingHistoryUncheckedUpdateManyWithoutListingAuditNestedInput = {
    create?: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput> | ListingHistoryCreateWithoutListingAuditInput[] | ListingHistoryUncheckedCreateWithoutListingAuditInput[]
    connectOrCreate?: ListingHistoryCreateOrConnectWithoutListingAuditInput | ListingHistoryCreateOrConnectWithoutListingAuditInput[]
    upsert?: ListingHistoryUpsertWithWhereUniqueWithoutListingAuditInput | ListingHistoryUpsertWithWhereUniqueWithoutListingAuditInput[]
    createMany?: ListingHistoryCreateManyListingAuditInputEnvelope
    set?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    disconnect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    delete?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    connect?: ListingHistoryWhereUniqueInput | ListingHistoryWhereUniqueInput[]
    update?: ListingHistoryUpdateWithWhereUniqueWithoutListingAuditInput | ListingHistoryUpdateWithWhereUniqueWithoutListingAuditInput[]
    updateMany?: ListingHistoryUpdateManyWithWhereWithoutListingAuditInput | ListingHistoryUpdateManyWithWhereWithoutListingAuditInput[]
    deleteMany?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
  }

  export type ListingAuditCreateNestedOneWithoutListingHistoryInput = {
    create?: XOR<ListingAuditCreateWithoutListingHistoryInput, ListingAuditUncheckedCreateWithoutListingHistoryInput>
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingHistoryInput
    connect?: ListingAuditWhereUniqueInput
  }

  export type ListingCreateNestedOneWithoutListingHistoryInput = {
    create?: XOR<ListingCreateWithoutListingHistoryInput, ListingUncheckedCreateWithoutListingHistoryInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingHistoryInput
    connect?: ListingWhereUniqueInput
  }

  export type ListingAuditUpdateOneWithoutListingHistoryNestedInput = {
    create?: XOR<ListingAuditCreateWithoutListingHistoryInput, ListingAuditUncheckedCreateWithoutListingHistoryInput>
    connectOrCreate?: ListingAuditCreateOrConnectWithoutListingHistoryInput
    upsert?: ListingAuditUpsertWithoutListingHistoryInput
    disconnect?: ListingAuditWhereInput | boolean
    delete?: ListingAuditWhereInput | boolean
    connect?: ListingAuditWhereUniqueInput
    update?: XOR<XOR<ListingAuditUpdateToOneWithWhereWithoutListingHistoryInput, ListingAuditUpdateWithoutListingHistoryInput>, ListingAuditUncheckedUpdateWithoutListingHistoryInput>
  }

  export type ListingUpdateOneRequiredWithoutListingHistoryNestedInput = {
    create?: XOR<ListingCreateWithoutListingHistoryInput, ListingUncheckedCreateWithoutListingHistoryInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingHistoryInput
    upsert?: ListingUpsertWithoutListingHistoryInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutListingHistoryInput, ListingUpdateWithoutListingHistoryInput>, ListingUncheckedUpdateWithoutListingHistoryInput>
  }

  export type ListingCreateNestedOneWithoutListingLocationInput = {
    create?: XOR<ListingCreateWithoutListingLocationInput, ListingUncheckedCreateWithoutListingLocationInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingLocationInput
    connect?: ListingWhereUniqueInput
  }

  export type ListingUpdateOneRequiredWithoutListingLocationNestedInput = {
    create?: XOR<ListingCreateWithoutListingLocationInput, ListingUncheckedCreateWithoutListingLocationInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingLocationInput
    upsert?: ListingUpsertWithoutListingLocationInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutListingLocationInput, ListingUpdateWithoutListingLocationInput>, ListingUncheckedUpdateWithoutListingLocationInput>
  }

  export type ListingCreateNestedOneWithoutListingPhotoInput = {
    create?: XOR<ListingCreateWithoutListingPhotoInput, ListingUncheckedCreateWithoutListingPhotoInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingPhotoInput
    connect?: ListingWhereUniqueInput
  }

  export type ListingUpdateOneRequiredWithoutListingPhotoNestedInput = {
    create?: XOR<ListingCreateWithoutListingPhotoInput, ListingUncheckedCreateWithoutListingPhotoInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingPhotoInput
    upsert?: ListingUpsertWithoutListingPhotoInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutListingPhotoInput, ListingUpdateWithoutListingPhotoInput>, ListingUncheckedUpdateWithoutListingPhotoInput>
  }

  export type ListingCreateNestedOneWithoutListingReportInput = {
    create?: XOR<ListingCreateWithoutListingReportInput, ListingUncheckedCreateWithoutListingReportInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingReportInput
    connect?: ListingWhereUniqueInput
  }

  export type EnumReporterTypeFieldUpdateOperationsInput = {
    set?: $Enums.ReporterType
  }

  export type EnumListingReportReasonFieldUpdateOperationsInput = {
    set?: $Enums.ListingReportReason
  }

  export type ListingUpdateOneRequiredWithoutListingReportNestedInput = {
    create?: XOR<ListingCreateWithoutListingReportInput, ListingUncheckedCreateWithoutListingReportInput>
    connectOrCreate?: ListingCreateOrConnectWithoutListingReportInput
    upsert?: ListingUpsertWithoutListingReportInput
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutListingReportInput, ListingUpdateWithoutListingReportInput>, ListingUncheckedUpdateWithoutListingReportInput>
  }

  export type AssumableMortgageCreateNestedOneWithoutLoanInput = {
    create?: XOR<AssumableMortgageCreateWithoutLoanInput, AssumableMortgageUncheckedCreateWithoutLoanInput>
    connectOrCreate?: AssumableMortgageCreateOrConnectWithoutLoanInput
    connect?: AssumableMortgageWhereUniqueInput
  }

  export type PropertyRadarCreateNestedOneWithoutLoanInput = {
    create?: XOR<PropertyRadarCreateWithoutLoanInput, PropertyRadarUncheckedCreateWithoutLoanInput>
    connectOrCreate?: PropertyRadarCreateOrConnectWithoutLoanInput
    connect?: PropertyRadarWhereUniqueInput
  }

  export type EnumLoanTypeFieldUpdateOperationsInput = {
    set?: $Enums.LoanType
  }

  export type AssumableMortgageUpdateOneWithoutLoanNestedInput = {
    create?: XOR<AssumableMortgageCreateWithoutLoanInput, AssumableMortgageUncheckedCreateWithoutLoanInput>
    connectOrCreate?: AssumableMortgageCreateOrConnectWithoutLoanInput
    upsert?: AssumableMortgageUpsertWithoutLoanInput
    disconnect?: AssumableMortgageWhereInput | boolean
    delete?: AssumableMortgageWhereInput | boolean
    connect?: AssumableMortgageWhereUniqueInput
    update?: XOR<XOR<AssumableMortgageUpdateToOneWithWhereWithoutLoanInput, AssumableMortgageUpdateWithoutLoanInput>, AssumableMortgageUncheckedUpdateWithoutLoanInput>
  }

  export type PropertyRadarUpdateOneRequiredWithoutLoanNestedInput = {
    create?: XOR<PropertyRadarCreateWithoutLoanInput, PropertyRadarUncheckedCreateWithoutLoanInput>
    connectOrCreate?: PropertyRadarCreateOrConnectWithoutLoanInput
    upsert?: PropertyRadarUpsertWithoutLoanInput
    connect?: PropertyRadarWhereUniqueInput
    update?: XOR<XOR<PropertyRadarUpdateToOneWithWhereWithoutLoanInput, PropertyRadarUpdateWithoutLoanInput>, PropertyRadarUncheckedUpdateWithoutLoanInput>
  }

  export type ListingCreateNestedOneWithoutPropertyRadarInput = {
    create?: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPropertyRadarInput
    connect?: ListingWhereUniqueInput
  }

  export type LoanCreateNestedManyWithoutPropertyRadarInput = {
    create?: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput> | LoanCreateWithoutPropertyRadarInput[] | LoanUncheckedCreateWithoutPropertyRadarInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutPropertyRadarInput | LoanCreateOrConnectWithoutPropertyRadarInput[]
    createMany?: LoanCreateManyPropertyRadarInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type ListingUncheckedCreateNestedOneWithoutPropertyRadarInput = {
    create?: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPropertyRadarInput
    connect?: ListingWhereUniqueInput
  }

  export type LoanUncheckedCreateNestedManyWithoutPropertyRadarInput = {
    create?: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput> | LoanCreateWithoutPropertyRadarInput[] | LoanUncheckedCreateWithoutPropertyRadarInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutPropertyRadarInput | LoanCreateOrConnectWithoutPropertyRadarInput[]
    createMany?: LoanCreateManyPropertyRadarInputEnvelope
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
  }

  export type ListingUpdateOneWithoutPropertyRadarNestedInput = {
    create?: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPropertyRadarInput
    upsert?: ListingUpsertWithoutPropertyRadarInput
    disconnect?: ListingWhereInput | boolean
    delete?: ListingWhereInput | boolean
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutPropertyRadarInput, ListingUpdateWithoutPropertyRadarInput>, ListingUncheckedUpdateWithoutPropertyRadarInput>
  }

  export type LoanUpdateManyWithoutPropertyRadarNestedInput = {
    create?: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput> | LoanCreateWithoutPropertyRadarInput[] | LoanUncheckedCreateWithoutPropertyRadarInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutPropertyRadarInput | LoanCreateOrConnectWithoutPropertyRadarInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutPropertyRadarInput | LoanUpsertWithWhereUniqueWithoutPropertyRadarInput[]
    createMany?: LoanCreateManyPropertyRadarInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutPropertyRadarInput | LoanUpdateWithWhereUniqueWithoutPropertyRadarInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutPropertyRadarInput | LoanUpdateManyWithWhereWithoutPropertyRadarInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type ListingUncheckedUpdateOneWithoutPropertyRadarNestedInput = {
    create?: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
    connectOrCreate?: ListingCreateOrConnectWithoutPropertyRadarInput
    upsert?: ListingUpsertWithoutPropertyRadarInput
    disconnect?: ListingWhereInput | boolean
    delete?: ListingWhereInput | boolean
    connect?: ListingWhereUniqueInput
    update?: XOR<XOR<ListingUpdateToOneWithWhereWithoutPropertyRadarInput, ListingUpdateWithoutPropertyRadarInput>, ListingUncheckedUpdateWithoutPropertyRadarInput>
  }

  export type LoanUncheckedUpdateManyWithoutPropertyRadarNestedInput = {
    create?: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput> | LoanCreateWithoutPropertyRadarInput[] | LoanUncheckedCreateWithoutPropertyRadarInput[]
    connectOrCreate?: LoanCreateOrConnectWithoutPropertyRadarInput | LoanCreateOrConnectWithoutPropertyRadarInput[]
    upsert?: LoanUpsertWithWhereUniqueWithoutPropertyRadarInput | LoanUpsertWithWhereUniqueWithoutPropertyRadarInput[]
    createMany?: LoanCreateManyPropertyRadarInputEnvelope
    set?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    disconnect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    delete?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    connect?: LoanWhereUniqueInput | LoanWhereUniqueInput[]
    update?: LoanUpdateWithWhereUniqueWithoutPropertyRadarInput | LoanUpdateWithWhereUniqueWithoutPropertyRadarInput[]
    updateMany?: LoanUpdateManyWithWhereWithoutPropertyRadarInput | LoanUpdateManyWithWhereWithoutPropertyRadarInput[]
    deleteMany?: LoanScalarWhereInput | LoanScalarWhereInput[]
  }

  export type RawLoanDataCreateNestedOneWithoutRawListingDataInput = {
    create?: XOR<RawLoanDataCreateWithoutRawListingDataInput, RawLoanDataUncheckedCreateWithoutRawListingDataInput>
    connectOrCreate?: RawLoanDataCreateOrConnectWithoutRawListingDataInput
    connect?: RawLoanDataWhereUniqueInput
  }

  export type RawPhotoDataCreateNestedOneWithoutRawListingDataInput = {
    create?: XOR<RawPhotoDataCreateWithoutRawListingDataInput, RawPhotoDataUncheckedCreateWithoutRawListingDataInput>
    connectOrCreate?: RawPhotoDataCreateOrConnectWithoutRawListingDataInput
    connect?: RawPhotoDataWhereUniqueInput
  }

  export type EnumDataPullStatusFieldUpdateOperationsInput = {
    set?: $Enums.DataPullStatus
  }

  export type RawLoanDataUpdateOneWithoutRawListingDataNestedInput = {
    create?: XOR<RawLoanDataCreateWithoutRawListingDataInput, RawLoanDataUncheckedCreateWithoutRawListingDataInput>
    connectOrCreate?: RawLoanDataCreateOrConnectWithoutRawListingDataInput
    upsert?: RawLoanDataUpsertWithoutRawListingDataInput
    disconnect?: RawLoanDataWhereInput | boolean
    delete?: RawLoanDataWhereInput | boolean
    connect?: RawLoanDataWhereUniqueInput
    update?: XOR<XOR<RawLoanDataUpdateToOneWithWhereWithoutRawListingDataInput, RawLoanDataUpdateWithoutRawListingDataInput>, RawLoanDataUncheckedUpdateWithoutRawListingDataInput>
  }

  export type RawPhotoDataUpdateOneWithoutRawListingDataNestedInput = {
    create?: XOR<RawPhotoDataCreateWithoutRawListingDataInput, RawPhotoDataUncheckedCreateWithoutRawListingDataInput>
    connectOrCreate?: RawPhotoDataCreateOrConnectWithoutRawListingDataInput
    upsert?: RawPhotoDataUpsertWithoutRawListingDataInput
    disconnect?: RawPhotoDataWhereInput | boolean
    delete?: RawPhotoDataWhereInput | boolean
    connect?: RawPhotoDataWhereUniqueInput
    update?: XOR<XOR<RawPhotoDataUpdateToOneWithWhereWithoutRawListingDataInput, RawPhotoDataUpdateWithoutRawListingDataInput>, RawPhotoDataUncheckedUpdateWithoutRawListingDataInput>
  }

  export type RawListingDataCreateNestedManyWithoutRawLoanDataInput = {
    create?: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput> | RawListingDataCreateWithoutRawLoanDataInput[] | RawListingDataUncheckedCreateWithoutRawLoanDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawLoanDataInput | RawListingDataCreateOrConnectWithoutRawLoanDataInput[]
    createMany?: RawListingDataCreateManyRawLoanDataInputEnvelope
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
  }

  export type RawListingDataUncheckedCreateNestedManyWithoutRawLoanDataInput = {
    create?: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput> | RawListingDataCreateWithoutRawLoanDataInput[] | RawListingDataUncheckedCreateWithoutRawLoanDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawLoanDataInput | RawListingDataCreateOrConnectWithoutRawLoanDataInput[]
    createMany?: RawListingDataCreateManyRawLoanDataInputEnvelope
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
  }

  export type RawListingDataUpdateManyWithoutRawLoanDataNestedInput = {
    create?: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput> | RawListingDataCreateWithoutRawLoanDataInput[] | RawListingDataUncheckedCreateWithoutRawLoanDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawLoanDataInput | RawListingDataCreateOrConnectWithoutRawLoanDataInput[]
    upsert?: RawListingDataUpsertWithWhereUniqueWithoutRawLoanDataInput | RawListingDataUpsertWithWhereUniqueWithoutRawLoanDataInput[]
    createMany?: RawListingDataCreateManyRawLoanDataInputEnvelope
    set?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    disconnect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    delete?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    update?: RawListingDataUpdateWithWhereUniqueWithoutRawLoanDataInput | RawListingDataUpdateWithWhereUniqueWithoutRawLoanDataInput[]
    updateMany?: RawListingDataUpdateManyWithWhereWithoutRawLoanDataInput | RawListingDataUpdateManyWithWhereWithoutRawLoanDataInput[]
    deleteMany?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
  }

  export type RawListingDataUncheckedUpdateManyWithoutRawLoanDataNestedInput = {
    create?: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput> | RawListingDataCreateWithoutRawLoanDataInput[] | RawListingDataUncheckedCreateWithoutRawLoanDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawLoanDataInput | RawListingDataCreateOrConnectWithoutRawLoanDataInput[]
    upsert?: RawListingDataUpsertWithWhereUniqueWithoutRawLoanDataInput | RawListingDataUpsertWithWhereUniqueWithoutRawLoanDataInput[]
    createMany?: RawListingDataCreateManyRawLoanDataInputEnvelope
    set?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    disconnect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    delete?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    update?: RawListingDataUpdateWithWhereUniqueWithoutRawLoanDataInput | RawListingDataUpdateWithWhereUniqueWithoutRawLoanDataInput[]
    updateMany?: RawListingDataUpdateManyWithWhereWithoutRawLoanDataInput | RawListingDataUpdateManyWithWhereWithoutRawLoanDataInput[]
    deleteMany?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
  }

  export type RawPhotoDataCreatephotoUrlsInput = {
    set: string[]
  }

  export type RawListingDataCreateNestedManyWithoutRawPhotoDataInput = {
    create?: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput> | RawListingDataCreateWithoutRawPhotoDataInput[] | RawListingDataUncheckedCreateWithoutRawPhotoDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawPhotoDataInput | RawListingDataCreateOrConnectWithoutRawPhotoDataInput[]
    createMany?: RawListingDataCreateManyRawPhotoDataInputEnvelope
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
  }

  export type RawListingDataUncheckedCreateNestedManyWithoutRawPhotoDataInput = {
    create?: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput> | RawListingDataCreateWithoutRawPhotoDataInput[] | RawListingDataUncheckedCreateWithoutRawPhotoDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawPhotoDataInput | RawListingDataCreateOrConnectWithoutRawPhotoDataInput[]
    createMany?: RawListingDataCreateManyRawPhotoDataInputEnvelope
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
  }

  export type EnumPhotoProcessingStatusFieldUpdateOperationsInput = {
    set?: $Enums.PhotoProcessingStatus
  }

  export type RawPhotoDataUpdatephotoUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type RawListingDataUpdateManyWithoutRawPhotoDataNestedInput = {
    create?: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput> | RawListingDataCreateWithoutRawPhotoDataInput[] | RawListingDataUncheckedCreateWithoutRawPhotoDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawPhotoDataInput | RawListingDataCreateOrConnectWithoutRawPhotoDataInput[]
    upsert?: RawListingDataUpsertWithWhereUniqueWithoutRawPhotoDataInput | RawListingDataUpsertWithWhereUniqueWithoutRawPhotoDataInput[]
    createMany?: RawListingDataCreateManyRawPhotoDataInputEnvelope
    set?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    disconnect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    delete?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    update?: RawListingDataUpdateWithWhereUniqueWithoutRawPhotoDataInput | RawListingDataUpdateWithWhereUniqueWithoutRawPhotoDataInput[]
    updateMany?: RawListingDataUpdateManyWithWhereWithoutRawPhotoDataInput | RawListingDataUpdateManyWithWhereWithoutRawPhotoDataInput[]
    deleteMany?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
  }

  export type RawListingDataUncheckedUpdateManyWithoutRawPhotoDataNestedInput = {
    create?: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput> | RawListingDataCreateWithoutRawPhotoDataInput[] | RawListingDataUncheckedCreateWithoutRawPhotoDataInput[]
    connectOrCreate?: RawListingDataCreateOrConnectWithoutRawPhotoDataInput | RawListingDataCreateOrConnectWithoutRawPhotoDataInput[]
    upsert?: RawListingDataUpsertWithWhereUniqueWithoutRawPhotoDataInput | RawListingDataUpsertWithWhereUniqueWithoutRawPhotoDataInput[]
    createMany?: RawListingDataCreateManyRawPhotoDataInputEnvelope
    set?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    disconnect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    delete?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    connect?: RawListingDataWhereUniqueInput | RawListingDataWhereUniqueInput[]
    update?: RawListingDataUpdateWithWhereUniqueWithoutRawPhotoDataInput | RawListingDataUpdateWithWhereUniqueWithoutRawPhotoDataInput[]
    updateMany?: RawListingDataUpdateManyWithWhereWithoutRawPhotoDataInput | RawListingDataUpdateManyWithWhereWithoutRawPhotoDataInput[]
    deleteMany?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumEntityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeFilter<$PrismaModel> | $Enums.EntityType
  }

  export type NestedEnumCorrectionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CorrectionStatus | EnumCorrectionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCorrectionStatusFilter<$PrismaModel> | $Enums.CorrectionStatus
  }

  export type NestedEnumAuditSourceFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditSource | EnumAuditSourceFieldRefInput<$PrismaModel>
    in?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditSourceFilter<$PrismaModel> | $Enums.AuditSource
  }

  export type NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EntityType | EnumEntityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.EntityType[] | ListEnumEntityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumEntityTypeWithAggregatesFilter<$PrismaModel> | $Enums.EntityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEntityTypeFilter<$PrismaModel>
    _max?: NestedEnumEntityTypeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumCorrectionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CorrectionStatus | EnumCorrectionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CorrectionStatus[] | ListEnumCorrectionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCorrectionStatusWithAggregatesFilter<$PrismaModel> | $Enums.CorrectionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCorrectionStatusFilter<$PrismaModel>
    _max?: NestedEnumCorrectionStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditSourceWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditSource | EnumAuditSourceFieldRefInput<$PrismaModel>
    in?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditSource[] | ListEnumAuditSourceFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditSourceWithAggregatesFilter<$PrismaModel> | $Enums.AuditSource
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditSourceFilter<$PrismaModel>
    _max?: NestedEnumAuditSourceFilter<$PrismaModel>
  }

  export type NestedEnumListingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusFilter<$PrismaModel> | $Enums.ListingStatus
  }

  export type NestedEnumPropertyTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeFilter<$PrismaModel> | $Enums.PropertyType
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedEnumLoanTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLoanTypeNullableFilter<$PrismaModel> | $Enums.LoanType | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumListingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingStatus | EnumListingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingStatus[] | ListEnumListingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumListingStatusWithAggregatesFilter<$PrismaModel> | $Enums.ListingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingStatusFilter<$PrismaModel>
    _max?: NestedEnumListingStatusFilter<$PrismaModel>
  }

  export type NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PropertyType | EnumPropertyTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PropertyType[] | ListEnumPropertyTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPropertyTypeWithAggregatesFilter<$PrismaModel> | $Enums.PropertyType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPropertyTypeFilter<$PrismaModel>
    _max?: NestedEnumPropertyTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumLoanTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumLoanTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.LoanType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumLoanTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumLoanTypeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumReporterTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReporterType | EnumReporterTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReporterTypeFilter<$PrismaModel> | $Enums.ReporterType
  }

  export type NestedEnumListingReportReasonFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingReportReason | EnumListingReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumListingReportReasonFilter<$PrismaModel> | $Enums.ListingReportReason
  }

  export type NestedEnumReporterTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReporterType | EnumReporterTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReporterType[] | ListEnumReporterTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReporterTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReporterType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReporterTypeFilter<$PrismaModel>
    _max?: NestedEnumReporterTypeFilter<$PrismaModel>
  }

  export type NestedEnumListingReportReasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ListingReportReason | EnumListingReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ListingReportReason[] | ListEnumListingReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumListingReportReasonWithAggregatesFilter<$PrismaModel> | $Enums.ListingReportReason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumListingReportReasonFilter<$PrismaModel>
    _max?: NestedEnumListingReportReasonFilter<$PrismaModel>
  }

  export type NestedEnumLoanTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLoanTypeFilter<$PrismaModel> | $Enums.LoanType
  }

  export type NestedEnumLoanTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LoanType | EnumLoanTypeFieldRefInput<$PrismaModel>
    in?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.LoanType[] | ListEnumLoanTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumLoanTypeWithAggregatesFilter<$PrismaModel> | $Enums.LoanType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLoanTypeFilter<$PrismaModel>
    _max?: NestedEnumLoanTypeFilter<$PrismaModel>
  }

  export type NestedEnumDataPullStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DataPullStatus | EnumDataPullStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDataPullStatusFilter<$PrismaModel> | $Enums.DataPullStatus
  }

  export type NestedEnumDataPullStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DataPullStatus | EnumDataPullStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DataPullStatus[] | ListEnumDataPullStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDataPullStatusWithAggregatesFilter<$PrismaModel> | $Enums.DataPullStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDataPullStatusFilter<$PrismaModel>
    _max?: NestedEnumDataPullStatusFilter<$PrismaModel>
  }

  export type NestedEnumPhotoProcessingStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PhotoProcessingStatus | EnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel> | $Enums.PhotoProcessingStatus
  }

  export type NestedEnumPhotoProcessingStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PhotoProcessingStatus | EnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PhotoProcessingStatus[] | ListEnumPhotoProcessingStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPhotoProcessingStatusWithAggregatesFilter<$PrismaModel> | $Enums.PhotoProcessingStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel>
    _max?: NestedEnumPhotoProcessingStatusFilter<$PrismaModel>
  }

  export type LoanCreateWithoutAssumableMortgageInput = {
    id: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
    PropertyRadar: PropertyRadarCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateWithoutAssumableMortgageInput = {
    id: string
    propertyId: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
  }

  export type LoanCreateOrConnectWithoutAssumableMortgageInput = {
    where: LoanWhereUniqueInput
    create: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
  }

  export type LoanUpsertWithoutAssumableMortgageInput = {
    update: XOR<LoanUpdateWithoutAssumableMortgageInput, LoanUncheckedUpdateWithoutAssumableMortgageInput>
    create: XOR<LoanCreateWithoutAssumableMortgageInput, LoanUncheckedCreateWithoutAssumableMortgageInput>
    where?: LoanWhereInput
  }

  export type LoanUpdateToOneWithWhereWithoutAssumableMortgageInput = {
    where?: LoanWhereInput
    data: XOR<LoanUpdateWithoutAssumableMortgageInput, LoanUncheckedUpdateWithoutAssumableMortgageInput>
  }

  export type LoanUpdateWithoutAssumableMortgageInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    PropertyRadar?: PropertyRadarUpdateOneRequiredWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateWithoutAssumableMortgageInput = {
    id?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PropertyRadarCreateWithoutListingInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Loan?: LoanCreateNestedManyWithoutPropertyRadarInput
  }

  export type PropertyRadarUncheckedCreateWithoutListingInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Loan?: LoanUncheckedCreateNestedManyWithoutPropertyRadarInput
  }

  export type PropertyRadarCreateOrConnectWithoutListingInput = {
    where: PropertyRadarWhereUniqueInput
    create: XOR<PropertyRadarCreateWithoutListingInput, PropertyRadarUncheckedCreateWithoutListingInput>
  }

  export type ListingAuditCreateWithoutListingInput = {
    id: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingAuditInput
  }

  export type ListingAuditUncheckedCreateWithoutListingInput = {
    id: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingAuditInput
  }

  export type ListingAuditCreateOrConnectWithoutListingInput = {
    where: ListingAuditWhereUniqueInput
    create: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput>
  }

  export type ListingAuditCreateManyListingInputEnvelope = {
    data: ListingAuditCreateManyListingInput | ListingAuditCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type ListingHistoryCreateWithoutListingInput = {
    id: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    ListingAudit?: ListingAuditCreateNestedOneWithoutListingHistoryInput
  }

  export type ListingHistoryUncheckedCreateWithoutListingInput = {
    id: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    auditId?: string | null
  }

  export type ListingHistoryCreateOrConnectWithoutListingInput = {
    where: ListingHistoryWhereUniqueInput
    create: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput>
  }

  export type ListingHistoryCreateManyListingInputEnvelope = {
    data: ListingHistoryCreateManyListingInput | ListingHistoryCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type ListingLocationCreateWithoutListingInput = {
    id: string
  }

  export type ListingLocationUncheckedCreateWithoutListingInput = {
    id: string
  }

  export type ListingLocationCreateOrConnectWithoutListingInput = {
    where: ListingLocationWhereUniqueInput
    create: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
  }

  export type ListingPhotoCreateWithoutListingInput = {
    id: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingPhotoUncheckedCreateWithoutListingInput = {
    id: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingPhotoCreateOrConnectWithoutListingInput = {
    where: ListingPhotoWhereUniqueInput
    create: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput>
  }

  export type ListingPhotoCreateManyListingInputEnvelope = {
    data: ListingPhotoCreateManyListingInput | ListingPhotoCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type ListingReportCreateWithoutListingInput = {
    id: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingReportUncheckedCreateWithoutListingInput = {
    id: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingReportCreateOrConnectWithoutListingInput = {
    where: ListingReportWhereUniqueInput
    create: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput>
  }

  export type ListingReportCreateManyListingInputEnvelope = {
    data: ListingReportCreateManyListingInput | ListingReportCreateManyListingInput[]
    skipDuplicates?: boolean
  }

  export type PropertyRadarUpsertWithoutListingInput = {
    update: XOR<PropertyRadarUpdateWithoutListingInput, PropertyRadarUncheckedUpdateWithoutListingInput>
    create: XOR<PropertyRadarCreateWithoutListingInput, PropertyRadarUncheckedCreateWithoutListingInput>
    where?: PropertyRadarWhereInput
  }

  export type PropertyRadarUpdateToOneWithWhereWithoutListingInput = {
    where?: PropertyRadarWhereInput
    data: XOR<PropertyRadarUpdateWithoutListingInput, PropertyRadarUncheckedUpdateWithoutListingInput>
  }

  export type PropertyRadarUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Loan?: LoanUpdateManyWithoutPropertyRadarNestedInput
  }

  export type PropertyRadarUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Loan?: LoanUncheckedUpdateManyWithoutPropertyRadarNestedInput
  }

  export type ListingAuditUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingAuditWhereUniqueInput
    update: XOR<ListingAuditUpdateWithoutListingInput, ListingAuditUncheckedUpdateWithoutListingInput>
    create: XOR<ListingAuditCreateWithoutListingInput, ListingAuditUncheckedCreateWithoutListingInput>
  }

  export type ListingAuditUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingAuditWhereUniqueInput
    data: XOR<ListingAuditUpdateWithoutListingInput, ListingAuditUncheckedUpdateWithoutListingInput>
  }

  export type ListingAuditUpdateManyWithWhereWithoutListingInput = {
    where: ListingAuditScalarWhereInput
    data: XOR<ListingAuditUpdateManyMutationInput, ListingAuditUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingAuditScalarWhereInput = {
    AND?: ListingAuditScalarWhereInput | ListingAuditScalarWhereInput[]
    OR?: ListingAuditScalarWhereInput[]
    NOT?: ListingAuditScalarWhereInput | ListingAuditScalarWhereInput[]
    id?: StringFilter<"ListingAudit"> | string
    listingId?: StringFilter<"ListingAudit"> | string
    action?: StringFilter<"ListingAudit"> | string
    source?: EnumAuditSourceFilter<"ListingAudit"> | $Enums.AuditSource
    sourceId?: StringFilter<"ListingAudit"> | string
    sourceName?: StringFilter<"ListingAudit"> | string
    changes?: JsonNullableFilter<"ListingAudit">
    metadata?: JsonNullableFilter<"ListingAudit">
    createdAt?: DateTimeFilter<"ListingAudit"> | Date | string
  }

  export type ListingHistoryUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingHistoryWhereUniqueInput
    update: XOR<ListingHistoryUpdateWithoutListingInput, ListingHistoryUncheckedUpdateWithoutListingInput>
    create: XOR<ListingHistoryCreateWithoutListingInput, ListingHistoryUncheckedCreateWithoutListingInput>
  }

  export type ListingHistoryUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingHistoryWhereUniqueInput
    data: XOR<ListingHistoryUpdateWithoutListingInput, ListingHistoryUncheckedUpdateWithoutListingInput>
  }

  export type ListingHistoryUpdateManyWithWhereWithoutListingInput = {
    where: ListingHistoryScalarWhereInput
    data: XOR<ListingHistoryUpdateManyMutationInput, ListingHistoryUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingHistoryScalarWhereInput = {
    AND?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
    OR?: ListingHistoryScalarWhereInput[]
    NOT?: ListingHistoryScalarWhereInput | ListingHistoryScalarWhereInput[]
    id?: StringFilter<"ListingHistory"> | string
    listingId?: StringFilter<"ListingHistory"> | string
    price?: DecimalFilter<"ListingHistory"> | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFilter<"ListingHistory"> | $Enums.ListingStatus
    rawData?: JsonFilter<"ListingHistory">
    changedFields?: JsonFilter<"ListingHistory">
    effectiveDate?: DateTimeFilter<"ListingHistory"> | Date | string
    createdAt?: DateTimeFilter<"ListingHistory"> | Date | string
    auditId?: StringNullableFilter<"ListingHistory"> | string | null
  }

  export type ListingLocationUpsertWithoutListingInput = {
    update: XOR<ListingLocationUpdateWithoutListingInput, ListingLocationUncheckedUpdateWithoutListingInput>
    create: XOR<ListingLocationCreateWithoutListingInput, ListingLocationUncheckedCreateWithoutListingInput>
    where?: ListingLocationWhereInput
  }

  export type ListingLocationUpdateToOneWithWhereWithoutListingInput = {
    where?: ListingLocationWhereInput
    data: XOR<ListingLocationUpdateWithoutListingInput, ListingLocationUncheckedUpdateWithoutListingInput>
  }

  export type ListingLocationUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type ListingLocationUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type ListingPhotoUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingPhotoWhereUniqueInput
    update: XOR<ListingPhotoUpdateWithoutListingInput, ListingPhotoUncheckedUpdateWithoutListingInput>
    create: XOR<ListingPhotoCreateWithoutListingInput, ListingPhotoUncheckedCreateWithoutListingInput>
  }

  export type ListingPhotoUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingPhotoWhereUniqueInput
    data: XOR<ListingPhotoUpdateWithoutListingInput, ListingPhotoUncheckedUpdateWithoutListingInput>
  }

  export type ListingPhotoUpdateManyWithWhereWithoutListingInput = {
    where: ListingPhotoScalarWhereInput
    data: XOR<ListingPhotoUpdateManyMutationInput, ListingPhotoUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingPhotoScalarWhereInput = {
    AND?: ListingPhotoScalarWhereInput | ListingPhotoScalarWhereInput[]
    OR?: ListingPhotoScalarWhereInput[]
    NOT?: ListingPhotoScalarWhereInput | ListingPhotoScalarWhereInput[]
    id?: StringFilter<"ListingPhoto"> | string
    listingId?: StringFilter<"ListingPhoto"> | string
    mlsUrl?: StringFilter<"ListingPhoto"> | string
    s3Url?: StringNullableFilter<"ListingPhoto"> | string | null
    order?: IntFilter<"ListingPhoto"> | number
    lastChecked?: DateTimeFilter<"ListingPhoto"> | Date | string
    isActive?: BoolFilter<"ListingPhoto"> | boolean
    createdAt?: DateTimeFilter<"ListingPhoto"> | Date | string
    updatedAt?: DateTimeFilter<"ListingPhoto"> | Date | string
  }

  export type ListingReportUpsertWithWhereUniqueWithoutListingInput = {
    where: ListingReportWhereUniqueInput
    update: XOR<ListingReportUpdateWithoutListingInput, ListingReportUncheckedUpdateWithoutListingInput>
    create: XOR<ListingReportCreateWithoutListingInput, ListingReportUncheckedCreateWithoutListingInput>
  }

  export type ListingReportUpdateWithWhereUniqueWithoutListingInput = {
    where: ListingReportWhereUniqueInput
    data: XOR<ListingReportUpdateWithoutListingInput, ListingReportUncheckedUpdateWithoutListingInput>
  }

  export type ListingReportUpdateManyWithWhereWithoutListingInput = {
    where: ListingReportScalarWhereInput
    data: XOR<ListingReportUpdateManyMutationInput, ListingReportUncheckedUpdateManyWithoutListingInput>
  }

  export type ListingReportScalarWhereInput = {
    AND?: ListingReportScalarWhereInput | ListingReportScalarWhereInput[]
    OR?: ListingReportScalarWhereInput[]
    NOT?: ListingReportScalarWhereInput | ListingReportScalarWhereInput[]
    id?: StringFilter<"ListingReport"> | string
    listingId?: StringFilter<"ListingReport"> | string
    userId?: StringFilter<"ListingReport"> | string
    reporterType?: EnumReporterTypeFilter<"ListingReport"> | $Enums.ReporterType
    reason?: EnumListingReportReasonFilter<"ListingReport"> | $Enums.ListingReportReason
    details?: StringNullableFilter<"ListingReport"> | string | null
    status?: StringFilter<"ListingReport"> | string
    createdAt?: DateTimeFilter<"ListingReport"> | Date | string
    updatedAt?: DateTimeFilter<"ListingReport"> | Date | string
  }

  export type ListingCreateWithoutListingAuditInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutListingAuditInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutListingAuditInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutListingAuditInput, ListingUncheckedCreateWithoutListingAuditInput>
  }

  export type ListingHistoryCreateWithoutListingAuditInput = {
    id: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    Listing: ListingCreateNestedOneWithoutListingHistoryInput
  }

  export type ListingHistoryUncheckedCreateWithoutListingAuditInput = {
    id: string
    listingId: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
  }

  export type ListingHistoryCreateOrConnectWithoutListingAuditInput = {
    where: ListingHistoryWhereUniqueInput
    create: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput>
  }

  export type ListingHistoryCreateManyListingAuditInputEnvelope = {
    data: ListingHistoryCreateManyListingAuditInput | ListingHistoryCreateManyListingAuditInput[]
    skipDuplicates?: boolean
  }

  export type ListingUpsertWithoutListingAuditInput = {
    update: XOR<ListingUpdateWithoutListingAuditInput, ListingUncheckedUpdateWithoutListingAuditInput>
    create: XOR<ListingCreateWithoutListingAuditInput, ListingUncheckedCreateWithoutListingAuditInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutListingAuditInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutListingAuditInput, ListingUncheckedUpdateWithoutListingAuditInput>
  }

  export type ListingUpdateWithoutListingAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutListingAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingHistoryUpsertWithWhereUniqueWithoutListingAuditInput = {
    where: ListingHistoryWhereUniqueInput
    update: XOR<ListingHistoryUpdateWithoutListingAuditInput, ListingHistoryUncheckedUpdateWithoutListingAuditInput>
    create: XOR<ListingHistoryCreateWithoutListingAuditInput, ListingHistoryUncheckedCreateWithoutListingAuditInput>
  }

  export type ListingHistoryUpdateWithWhereUniqueWithoutListingAuditInput = {
    where: ListingHistoryWhereUniqueInput
    data: XOR<ListingHistoryUpdateWithoutListingAuditInput, ListingHistoryUncheckedUpdateWithoutListingAuditInput>
  }

  export type ListingHistoryUpdateManyWithWhereWithoutListingAuditInput = {
    where: ListingHistoryScalarWhereInput
    data: XOR<ListingHistoryUpdateManyMutationInput, ListingHistoryUncheckedUpdateManyWithoutListingAuditInput>
  }

  export type ListingAuditCreateWithoutListingHistoryInput = {
    id: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    Listing: ListingCreateNestedOneWithoutListingAuditInput
  }

  export type ListingAuditUncheckedCreateWithoutListingHistoryInput = {
    id: string
    listingId: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ListingAuditCreateOrConnectWithoutListingHistoryInput = {
    where: ListingAuditWhereUniqueInput
    create: XOR<ListingAuditCreateWithoutListingHistoryInput, ListingAuditUncheckedCreateWithoutListingHistoryInput>
  }

  export type ListingCreateWithoutListingHistoryInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutListingHistoryInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutListingHistoryInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutListingHistoryInput, ListingUncheckedCreateWithoutListingHistoryInput>
  }

  export type ListingAuditUpsertWithoutListingHistoryInput = {
    update: XOR<ListingAuditUpdateWithoutListingHistoryInput, ListingAuditUncheckedUpdateWithoutListingHistoryInput>
    create: XOR<ListingAuditCreateWithoutListingHistoryInput, ListingAuditUncheckedCreateWithoutListingHistoryInput>
    where?: ListingAuditWhereInput
  }

  export type ListingAuditUpdateToOneWithWhereWithoutListingHistoryInput = {
    where?: ListingAuditWhereInput
    data: XOR<ListingAuditUpdateWithoutListingHistoryInput, ListingAuditUncheckedUpdateWithoutListingHistoryInput>
  }

  export type ListingAuditUpdateWithoutListingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneRequiredWithoutListingAuditNestedInput
  }

  export type ListingAuditUncheckedUpdateWithoutListingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingUpsertWithoutListingHistoryInput = {
    update: XOR<ListingUpdateWithoutListingHistoryInput, ListingUncheckedUpdateWithoutListingHistoryInput>
    create: XOR<ListingCreateWithoutListingHistoryInput, ListingUncheckedCreateWithoutListingHistoryInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutListingHistoryInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutListingHistoryInput, ListingUncheckedUpdateWithoutListingHistoryInput>
  }

  export type ListingUpdateWithoutListingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutListingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateWithoutListingLocationInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutListingLocationInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutListingLocationInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutListingLocationInput, ListingUncheckedCreateWithoutListingLocationInput>
  }

  export type ListingUpsertWithoutListingLocationInput = {
    update: XOR<ListingUpdateWithoutListingLocationInput, ListingUncheckedUpdateWithoutListingLocationInput>
    create: XOR<ListingCreateWithoutListingLocationInput, ListingUncheckedCreateWithoutListingLocationInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutListingLocationInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutListingLocationInput, ListingUncheckedUpdateWithoutListingLocationInput>
  }

  export type ListingUpdateWithoutListingLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutListingLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateWithoutListingPhotoInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutListingPhotoInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutListingPhotoInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutListingPhotoInput, ListingUncheckedCreateWithoutListingPhotoInput>
  }

  export type ListingUpsertWithoutListingPhotoInput = {
    update: XOR<ListingUpdateWithoutListingPhotoInput, ListingUncheckedUpdateWithoutListingPhotoInput>
    create: XOR<ListingCreateWithoutListingPhotoInput, ListingUncheckedCreateWithoutListingPhotoInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutListingPhotoInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutListingPhotoInput, ListingUncheckedUpdateWithoutListingPhotoInput>
  }

  export type ListingUpdateWithoutListingPhotoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutListingPhotoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type ListingCreateWithoutListingReportInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    PropertyRadar?: PropertyRadarCreateNestedOneWithoutListingInput
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutListingReportInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    propertyRadarId?: string | null
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutListingReportInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutListingReportInput, ListingUncheckedCreateWithoutListingReportInput>
  }

  export type ListingUpsertWithoutListingReportInput = {
    update: XOR<ListingUpdateWithoutListingReportInput, ListingUncheckedUpdateWithoutListingReportInput>
    create: XOR<ListingCreateWithoutListingReportInput, ListingUncheckedCreateWithoutListingReportInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutListingReportInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutListingReportInput, ListingUncheckedUpdateWithoutListingReportInput>
  }

  export type ListingUpdateWithoutListingReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    PropertyRadar?: PropertyRadarUpdateOneWithoutListingNestedInput
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutListingReportInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    propertyRadarId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
  }

  export type AssumableMortgageCreateWithoutLoanInput = {
    id: string
    currentBalance: Decimal | DecimalJsLike | number | string
    interestRate: Decimal | DecimalJsLike | number | string
    monthlyPayment: Decimal | DecimalJsLike | number | string
    remainingTerm: number
    qualifyingIncome?: Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: Decimal | DecimalJsLike | number | string | null
    assumabilityStatus: string
    lastVerifiedDate?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    downPayment: Decimal | DecimalJsLike | number | string
    monthlyAllInPayment: Decimal | DecimalJsLike | number | string
    monthlyHoa: Decimal | DecimalJsLike | number | string
    monthlyInsurance: Decimal | DecimalJsLike | number | string
    monthlyPmi: Decimal | DecimalJsLike | number | string
    monthlyPropertyTax: Decimal | DecimalJsLike | number | string
    percentDown: Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: string | null
    rawLoanDataId?: string | null
  }

  export type AssumableMortgageUncheckedCreateWithoutLoanInput = {
    id: string
    currentBalance: Decimal | DecimalJsLike | number | string
    interestRate: Decimal | DecimalJsLike | number | string
    monthlyPayment: Decimal | DecimalJsLike | number | string
    remainingTerm: number
    qualifyingIncome?: Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: Decimal | DecimalJsLike | number | string | null
    assumabilityStatus: string
    lastVerifiedDate?: Date | string | null
    verificationNotes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    downPayment: Decimal | DecimalJsLike | number | string
    monthlyAllInPayment: Decimal | DecimalJsLike | number | string
    monthlyHoa: Decimal | DecimalJsLike | number | string
    monthlyInsurance: Decimal | DecimalJsLike | number | string
    monthlyPmi: Decimal | DecimalJsLike | number | string
    monthlyPropertyTax: Decimal | DecimalJsLike | number | string
    percentDown: Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    maxDownPaymentThreshold?: Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: string | null
    rawLoanDataId?: string | null
  }

  export type AssumableMortgageCreateOrConnectWithoutLoanInput = {
    where: AssumableMortgageWhereUniqueInput
    create: XOR<AssumableMortgageCreateWithoutLoanInput, AssumableMortgageUncheckedCreateWithoutLoanInput>
  }

  export type PropertyRadarCreateWithoutLoanInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Listing?: ListingCreateNestedOneWithoutPropertyRadarInput
  }

  export type PropertyRadarUncheckedCreateWithoutLoanInput = {
    id: string
    parcelNumber: string
    address: string
    city: string
    state: string
    zipCode: string
    county: string
    propertyType: string
    yearBuilt?: number | null
    units?: number | null
    squareFeet?: string | null
    annualTaxes?: Decimal | DecimalJsLike | number | string | null
    avm?: Decimal | DecimalJsLike | number | string | null
    availableEquity?: Decimal | DecimalJsLike | number | string | null
    cltv?: number | null
    equityPercent?: number | null
    ownerName1?: string | null
    ownerName2?: string | null
    ownerAddress?: string | null
    ownerCity?: string | null
    ownerState?: string | null
    ownerZip?: string | null
    lastTransferDate?: Date | string | null
    lastTransferValue?: Decimal | DecimalJsLike | number | string | null
    lastTransferType?: string | null
    lastTransferDownPayment?: Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: number | null
    deletedAt?: Date | string | null
    loanDataFetchedAt?: Date | string | null
    denormalizedListingUnitNumber?: string
    needsReview?: boolean
    reviewReason?: string | null
    unitNumber?: string
    listingId?: string | null
    rawLoanDataId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Listing?: ListingUncheckedCreateNestedOneWithoutPropertyRadarInput
  }

  export type PropertyRadarCreateOrConnectWithoutLoanInput = {
    where: PropertyRadarWhereUniqueInput
    create: XOR<PropertyRadarCreateWithoutLoanInput, PropertyRadarUncheckedCreateWithoutLoanInput>
  }

  export type AssumableMortgageUpsertWithoutLoanInput = {
    update: XOR<AssumableMortgageUpdateWithoutLoanInput, AssumableMortgageUncheckedUpdateWithoutLoanInput>
    create: XOR<AssumableMortgageCreateWithoutLoanInput, AssumableMortgageUncheckedCreateWithoutLoanInput>
    where?: AssumableMortgageWhereInput
  }

  export type AssumableMortgageUpdateToOneWithWhereWithoutLoanInput = {
    where?: AssumableMortgageWhereInput
    data: XOR<AssumableMortgageUpdateWithoutLoanInput, AssumableMortgageUncheckedUpdateWithoutLoanInput>
  }

  export type AssumableMortgageUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssumableMortgageUncheckedUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    currentBalance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    interestRate?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingTerm?: IntFieldUpdateOperationsInput | number
    qualifyingIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    qualifyingDti?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assumabilityStatus?: StringFieldUpdateOperationsInput | string
    lastVerifiedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    downPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyAllInPayment?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyHoa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyInsurance?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPmi?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    monthlyPropertyTax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    percentDown?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    maxDownPaymentThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maxLoanBalanceRatioThreshold?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PropertyRadarUpsertWithoutLoanInput = {
    update: XOR<PropertyRadarUpdateWithoutLoanInput, PropertyRadarUncheckedUpdateWithoutLoanInput>
    create: XOR<PropertyRadarCreateWithoutLoanInput, PropertyRadarUncheckedCreateWithoutLoanInput>
    where?: PropertyRadarWhereInput
  }

  export type PropertyRadarUpdateToOneWithWhereWithoutLoanInput = {
    where?: PropertyRadarWhereInput
    data: XOR<PropertyRadarUpdateWithoutLoanInput, PropertyRadarUncheckedUpdateWithoutLoanInput>
  }

  export type PropertyRadarUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneWithoutPropertyRadarNestedInput
  }

  export type PropertyRadarUncheckedUpdateWithoutLoanInput = {
    id?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    county?: StringFieldUpdateOperationsInput | string
    propertyType?: StringFieldUpdateOperationsInput | string
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    units?: NullableIntFieldUpdateOperationsInput | number | null
    squareFeet?: NullableStringFieldUpdateOperationsInput | string | null
    annualTaxes?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    avm?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    availableEquity?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cltv?: NullableIntFieldUpdateOperationsInput | number | null
    equityPercent?: NullableIntFieldUpdateOperationsInput | number | null
    ownerName1?: NullableStringFieldUpdateOperationsInput | string | null
    ownerName2?: NullableStringFieldUpdateOperationsInput | string | null
    ownerAddress?: NullableStringFieldUpdateOperationsInput | string | null
    ownerCity?: NullableStringFieldUpdateOperationsInput | string | null
    ownerState?: NullableStringFieldUpdateOperationsInput | string | null
    ownerZip?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastTransferValue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferType?: NullableStringFieldUpdateOperationsInput | string | null
    lastTransferDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lastTransferDownPaymentPercent?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    loanDataFetchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    denormalizedListingUnitNumber?: StringFieldUpdateOperationsInput | string
    needsReview?: BoolFieldUpdateOperationsInput | boolean
    reviewReason?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    listingId?: NullableStringFieldUpdateOperationsInput | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUncheckedUpdateOneWithoutPropertyRadarNestedInput
  }

  export type ListingCreateWithoutPropertyRadarInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportCreateNestedManyWithoutListingInput
  }

  export type ListingUncheckedCreateWithoutPropertyRadarInput = {
    id: string
    mlsProviderId: string
    parcelNumber: string
    zipCode: string
    rawDataHash: string
    mlsListingId: string
    lastMlsUpdate?: Date | string | null
    isAssumable?: boolean
    processingState?: string | null
    deletedAt?: Date | string | null
    status: $Enums.ListingStatus
    price: Decimal | DecimalJsLike | number | string
    propertyType: $Enums.PropertyType
    bedrooms?: number | null
    bathrooms?: Decimal | DecimalJsLike | number | string | null
    squareFeet?: number | null
    yearBuilt?: number | null
    address: string
    city?: string | null
    state?: string | null
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    tileX?: number | null
    tileY?: number | null
    tileZ?: number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt: Date | string
    listedAt?: Date | string | null
    lastStatusChange?: Date | string | null
    unitNumber?: string
    mlsInstanceId?: string
    photoUrls?: ListingCreatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: Decimal | DecimalJsLike | number | string | null
    rawDataId?: string | null
    tilePrice?: string | null
    tileDenormalizedAssumableMonthlyPayment?: string | null
    isRootsListing?: boolean
    modifierScore?: number
    propertySubType?: string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingCreatedocumentUrlsInput | string[]
    videoUrls?: ListingCreatevideoUrlsInput | string[]
    staticPriority?: number | null
    tileId10?: bigint | number | null
    tileId11?: bigint | number | null
    tileId12?: bigint | number | null
    tileId13?: bigint | number | null
    tileId14?: bigint | number | null
    tileId15?: bigint | number | null
    tileId16?: bigint | number | null
    tileId17?: bigint | number | null
    tileId18?: bigint | number | null
    tileId19?: bigint | number | null
    tileId20?: bigint | number | null
    tileId8?: bigint | number | null
    tileId9?: bigint | number | null
    tileId6?: bigint | number | null
    tileId7?: bigint | number | null
    denormalizedAssumableDownPayment?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: $Enums.LoanType | null
    hasPool?: boolean | null
    is55Plus?: boolean | null
    monthlyHoa?: Decimal | DecimalJsLike | number | string | null
    streetAddress?: string | null
    assumableDesirabilityScore?: Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: boolean
    processingVersion?: string | null
    lotSizeAcres?: Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: string | null
    agentName?: string | null
    agentOfficeEmail?: string | null
    agentOfficeName?: string | null
    agentOfficePhone?: string | null
    agentPhone?: string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: string | null
    denormalizedMlsInstanceName?: string | null
    agentMlsId?: string | null
    denormalizedMlsInstanceAcronym?: string | null
    agentOfficeMlsId?: string | null
    hasBasement?: boolean | null
    stories?: number | null
    ListingAudit?: ListingAuditUncheckedCreateNestedManyWithoutListingInput
    ListingHistory?: ListingHistoryUncheckedCreateNestedManyWithoutListingInput
    ListingLocation?: ListingLocationUncheckedCreateNestedOneWithoutListingInput
    ListingPhoto?: ListingPhotoUncheckedCreateNestedManyWithoutListingInput
    ListingReport?: ListingReportUncheckedCreateNestedManyWithoutListingInput
  }

  export type ListingCreateOrConnectWithoutPropertyRadarInput = {
    where: ListingWhereUniqueInput
    create: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
  }

  export type LoanCreateWithoutPropertyRadarInput = {
    id: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
    AssumableMortgage?: AssumableMortgageCreateNestedOneWithoutLoanInput
  }

  export type LoanUncheckedCreateWithoutPropertyRadarInput = {
    id: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    assumableMortgageId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
  }

  export type LoanCreateOrConnectWithoutPropertyRadarInput = {
    where: LoanWhereUniqueInput
    create: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput>
  }

  export type LoanCreateManyPropertyRadarInputEnvelope = {
    data: LoanCreateManyPropertyRadarInput | LoanCreateManyPropertyRadarInput[]
    skipDuplicates?: boolean
  }

  export type ListingUpsertWithoutPropertyRadarInput = {
    update: XOR<ListingUpdateWithoutPropertyRadarInput, ListingUncheckedUpdateWithoutPropertyRadarInput>
    create: XOR<ListingCreateWithoutPropertyRadarInput, ListingUncheckedCreateWithoutPropertyRadarInput>
    where?: ListingWhereInput
  }

  export type ListingUpdateToOneWithWhereWithoutPropertyRadarInput = {
    where?: ListingWhereInput
    data: XOR<ListingUpdateWithoutPropertyRadarInput, ListingUncheckedUpdateWithoutPropertyRadarInput>
  }

  export type ListingUpdateWithoutPropertyRadarInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUpdateManyWithoutListingNestedInput
  }

  export type ListingUncheckedUpdateWithoutPropertyRadarInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    parcelNumber?: StringFieldUpdateOperationsInput | string
    zipCode?: StringFieldUpdateOperationsInput | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    lastMlsUpdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isAssumable?: BoolFieldUpdateOperationsInput | boolean
    processingState?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    propertyType?: EnumPropertyTypeFieldUpdateOperationsInput | $Enums.PropertyType
    bedrooms?: NullableIntFieldUpdateOperationsInput | number | null
    bathrooms?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    squareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    yearBuilt?: NullableIntFieldUpdateOperationsInput | number | null
    address?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tileX?: NullableIntFieldUpdateOperationsInput | number | null
    tileY?: NullableIntFieldUpdateOperationsInput | number | null
    tileZ?: NullableIntFieldUpdateOperationsInput | number | null
    amenities?: NullableJsonNullValueInput | InputJsonValue
    interiorFeatures?: NullableJsonNullValueInput | InputJsonValue
    exteriorFeatures?: NullableJsonNullValueInput | InputJsonValue
    parkingDetails?: NullableJsonNullValueInput | InputJsonValue
    associationDetails?: NullableJsonNullValueInput | InputJsonValue
    schoolDetails?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    listedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastStatusChange?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: StringFieldUpdateOperationsInput | string
    photoUrls?: ListingUpdatephotoUrlsInput | string[]
    denormalizedAssumableMonthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rawDataId?: NullableStringFieldUpdateOperationsInput | string | null
    tilePrice?: NullableStringFieldUpdateOperationsInput | string | null
    tileDenormalizedAssumableMonthlyPayment?: NullableStringFieldUpdateOperationsInput | string | null
    isRootsListing?: BoolFieldUpdateOperationsInput | boolean
    modifierScore?: IntFieldUpdateOperationsInput | number
    propertySubType?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableJsonNullValueInput | InputJsonValue
    documentUrls?: ListingUpdatedocumentUrlsInput | string[]
    videoUrls?: ListingUpdatevideoUrlsInput | string[]
    staticPriority?: NullableIntFieldUpdateOperationsInput | number | null
    tileId10?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId11?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId12?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId13?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId14?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId15?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId16?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId17?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId18?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId19?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId20?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId8?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId9?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId6?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    tileId7?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    denormalizedAssumableDownPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableInterestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    denormalizedAssumableLoanType?: NullableEnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType | null
    hasPool?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is55Plus?: NullableBoolFieldUpdateOperationsInput | boolean | null
    monthlyHoa?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    streetAddress?: NullableStringFieldUpdateOperationsInput | string | null
    assumableDesirabilityScore?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isAssumableDesirable?: BoolFieldUpdateOperationsInput | boolean
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lotSizeAcres?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    lotSizeSquareFeet?: NullableIntFieldUpdateOperationsInput | number | null
    agentDetails?: NullableJsonNullValueInput | InputJsonValue
    agentEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeEmail?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeName?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficePhone?: NullableStringFieldUpdateOperationsInput | string | null
    agentPhone?: NullableStringFieldUpdateOperationsInput | string | null
    coListingAgents?: NullableJsonNullValueInput | InputJsonValue
    denormalizedMlsInstanceLogoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceName?: NullableStringFieldUpdateOperationsInput | string | null
    agentMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    denormalizedMlsInstanceAcronym?: NullableStringFieldUpdateOperationsInput | string | null
    agentOfficeMlsId?: NullableStringFieldUpdateOperationsInput | string | null
    hasBasement?: NullableBoolFieldUpdateOperationsInput | boolean | null
    stories?: NullableIntFieldUpdateOperationsInput | number | null
    ListingAudit?: ListingAuditUncheckedUpdateManyWithoutListingNestedInput
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingNestedInput
    ListingLocation?: ListingLocationUncheckedUpdateOneWithoutListingNestedInput
    ListingPhoto?: ListingPhotoUncheckedUpdateManyWithoutListingNestedInput
    ListingReport?: ListingReportUncheckedUpdateManyWithoutListingNestedInput
  }

  export type LoanUpsertWithWhereUniqueWithoutPropertyRadarInput = {
    where: LoanWhereUniqueInput
    update: XOR<LoanUpdateWithoutPropertyRadarInput, LoanUncheckedUpdateWithoutPropertyRadarInput>
    create: XOR<LoanCreateWithoutPropertyRadarInput, LoanUncheckedCreateWithoutPropertyRadarInput>
  }

  export type LoanUpdateWithWhereUniqueWithoutPropertyRadarInput = {
    where: LoanWhereUniqueInput
    data: XOR<LoanUpdateWithoutPropertyRadarInput, LoanUncheckedUpdateWithoutPropertyRadarInput>
  }

  export type LoanUpdateManyWithWhereWithoutPropertyRadarInput = {
    where: LoanScalarWhereInput
    data: XOR<LoanUpdateManyMutationInput, LoanUncheckedUpdateManyWithoutPropertyRadarInput>
  }

  export type LoanScalarWhereInput = {
    AND?: LoanScalarWhereInput | LoanScalarWhereInput[]
    OR?: LoanScalarWhereInput[]
    NOT?: LoanScalarWhereInput | LoanScalarWhereInput[]
    id?: StringFilter<"Loan"> | string
    propertyId?: StringFilter<"Loan"> | string
    loanPosition?: IntFilter<"Loan"> | number
    purpose?: StringNullableFilter<"Loan"> | string | null
    loanType?: EnumLoanTypeFilter<"Loan"> | $Enums.LoanType
    recordingDate?: DateTimeFilter<"Loan"> | Date | string
    concurrent?: BoolFilter<"Loan"> | boolean
    initialAmount?: DecimalFilter<"Loan"> | Decimal | DecimalJsLike | number | string
    remainingBalance?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    termYears?: IntNullableFilter<"Loan"> | number | null
    lenderName?: StringFilter<"Loan"> | string
    rateType?: StringNullableFilter<"Loan"> | string | null
    interestRate?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: IntNullableFilter<"Loan"> | number | null
    startingPeriod?: IntNullableFilter<"Loan"> | number | null
    totalPayments?: IntNullableFilter<"Loan"> | number | null
    maturityDate?: DateTimeNullableFilter<"Loan"> | Date | string | null
    monthlyPayment?: DecimalNullableFilter<"Loan"> | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: BoolNullableFilter<"Loan"> | boolean | null
    assumableMortgageId?: StringNullableFilter<"Loan"> | string | null
    createdAt?: DateTimeFilter<"Loan"> | Date | string
    updatedAt?: DateTimeFilter<"Loan"> | Date | string
    mlsInstanceId?: StringNullableFilter<"Loan"> | string | null
    deletedAt?: DateTimeNullableFilter<"Loan"> | Date | string | null
    rawLoanDataId?: StringNullableFilter<"Loan"> | string | null
    interestRateEstimated?: BoolNullableFilter<"Loan"> | boolean | null
    isAssumable?: BoolNullableFilter<"Loan"> | boolean | null
  }

  export type RawLoanDataCreateWithoutRawListingDataInput = {
    id: string
    mlsProviderId: string
    mlsInstanceId?: string | null
    parcelNumber?: string | null
    zipCode?: string | null
    unitNumber?: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: string | null
  }

  export type RawLoanDataUncheckedCreateWithoutRawListingDataInput = {
    id: string
    mlsProviderId: string
    mlsInstanceId?: string | null
    parcelNumber?: string | null
    zipCode?: string | null
    unitNumber?: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    processedAt?: Date | string | null
    createdAt?: Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: string | null
  }

  export type RawLoanDataCreateOrConnectWithoutRawListingDataInput = {
    where: RawLoanDataWhereUniqueInput
    create: XOR<RawLoanDataCreateWithoutRawListingDataInput, RawLoanDataUncheckedCreateWithoutRawListingDataInput>
  }

  export type RawPhotoDataCreateWithoutRawListingDataInput = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.PhotoProcessingStatus
    errorMessage?: string | null
    processedAt?: Date | string | null
    rawListingId: string
    photoUrls?: RawPhotoDataCreatephotoUrlsInput | string[]
    createdAt?: Date | string
    rawDataHash: string
    rawListingDataId?: string | null
  }

  export type RawPhotoDataUncheckedCreateWithoutRawListingDataInput = {
    id: string
    mlsListingId: string
    mlsProviderId: string
    rawResponse: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.PhotoProcessingStatus
    errorMessage?: string | null
    processedAt?: Date | string | null
    rawListingId: string
    photoUrls?: RawPhotoDataCreatephotoUrlsInput | string[]
    createdAt?: Date | string
    rawDataHash: string
    rawListingDataId?: string | null
  }

  export type RawPhotoDataCreateOrConnectWithoutRawListingDataInput = {
    where: RawPhotoDataWhereUniqueInput
    create: XOR<RawPhotoDataCreateWithoutRawListingDataInput, RawPhotoDataUncheckedCreateWithoutRawListingDataInput>
  }

  export type RawLoanDataUpsertWithoutRawListingDataInput = {
    update: XOR<RawLoanDataUpdateWithoutRawListingDataInput, RawLoanDataUncheckedUpdateWithoutRawListingDataInput>
    create: XOR<RawLoanDataCreateWithoutRawListingDataInput, RawLoanDataUncheckedCreateWithoutRawListingDataInput>
    where?: RawLoanDataWhereInput
  }

  export type RawLoanDataUpdateToOneWithWhereWithoutRawListingDataInput = {
    where?: RawLoanDataWhereInput
    data: XOR<RawLoanDataUpdateWithoutRawListingDataInput, RawLoanDataUncheckedUpdateWithoutRawListingDataInput>
  }

  export type RawLoanDataUpdateWithoutRawListingDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawLoanDataUncheckedUpdateWithoutRawListingDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    apiCriteria?: NullableJsonNullValueInput | InputJsonValue
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawPhotoDataUpsertWithoutRawListingDataInput = {
    update: XOR<RawPhotoDataUpdateWithoutRawListingDataInput, RawPhotoDataUncheckedUpdateWithoutRawListingDataInput>
    create: XOR<RawPhotoDataCreateWithoutRawListingDataInput, RawPhotoDataUncheckedCreateWithoutRawListingDataInput>
    where?: RawPhotoDataWhereInput
  }

  export type RawPhotoDataUpdateToOneWithWhereWithoutRawListingDataInput = {
    where?: RawPhotoDataWhereInput
    data: XOR<RawPhotoDataUpdateWithoutRawListingDataInput, RawPhotoDataUncheckedUpdateWithoutRawListingDataInput>
  }

  export type RawPhotoDataUpdateWithoutRawListingDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawPhotoDataUncheckedUpdateWithoutRawListingDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsListingId?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawResponse?: JsonNullValueInput | InputJsonValue
    headers?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumPhotoProcessingStatusFieldUpdateOperationsInput | $Enums.PhotoProcessingStatus
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawListingId?: StringFieldUpdateOperationsInput | string
    photoUrls?: RawPhotoDataUpdatephotoUrlsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    rawDataHash?: StringFieldUpdateOperationsInput | string
    rawListingDataId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataCreateWithoutRawLoanDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
    RawPhotoData?: RawPhotoDataCreateNestedOneWithoutRawListingDataInput
  }

  export type RawListingDataUncheckedCreateWithoutRawLoanDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawPhotoDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataCreateOrConnectWithoutRawLoanDataInput = {
    where: RawListingDataWhereUniqueInput
    create: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput>
  }

  export type RawListingDataCreateManyRawLoanDataInputEnvelope = {
    data: RawListingDataCreateManyRawLoanDataInput | RawListingDataCreateManyRawLoanDataInput[]
    skipDuplicates?: boolean
  }

  export type RawListingDataUpsertWithWhereUniqueWithoutRawLoanDataInput = {
    where: RawListingDataWhereUniqueInput
    update: XOR<RawListingDataUpdateWithoutRawLoanDataInput, RawListingDataUncheckedUpdateWithoutRawLoanDataInput>
    create: XOR<RawListingDataCreateWithoutRawLoanDataInput, RawListingDataUncheckedCreateWithoutRawLoanDataInput>
  }

  export type RawListingDataUpdateWithWhereUniqueWithoutRawLoanDataInput = {
    where: RawListingDataWhereUniqueInput
    data: XOR<RawListingDataUpdateWithoutRawLoanDataInput, RawListingDataUncheckedUpdateWithoutRawLoanDataInput>
  }

  export type RawListingDataUpdateManyWithWhereWithoutRawLoanDataInput = {
    where: RawListingDataScalarWhereInput
    data: XOR<RawListingDataUpdateManyMutationInput, RawListingDataUncheckedUpdateManyWithoutRawLoanDataInput>
  }

  export type RawListingDataScalarWhereInput = {
    AND?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
    OR?: RawListingDataScalarWhereInput[]
    NOT?: RawListingDataScalarWhereInput | RawListingDataScalarWhereInput[]
    id?: StringFilter<"RawListingData"> | string
    mlsProviderId?: StringFilter<"RawListingData"> | string
    rawData?: JsonFilter<"RawListingData">
    rawDataHash?: StringFilter<"RawListingData"> | string
    status?: StringFilter<"RawListingData"> | string
    errorMessage?: StringNullableFilter<"RawListingData"> | string | null
    createdAt?: DateTimeFilter<"RawListingData"> | Date | string
    updatedAt?: DateTimeFilter<"RawListingData"> | Date | string
    processedAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    parcelNumber?: StringNullableFilter<"RawListingData"> | string | null
    zipCode?: StringNullableFilter<"RawListingData"> | string | null
    mlsStatus?: StringNullableFilter<"RawListingData"> | string | null
    modificationTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    mlsInstanceId?: StringNullableFilter<"RawListingData"> | string | null
    propertyType?: StringNullableFilter<"RawListingData"> | string | null
    statusChangeTimestamp?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    unitNumber?: StringFilter<"RawListingData"> | string
    unparsedAddress?: StringNullableFilter<"RawListingData"> | string | null
    loanDataError?: StringNullableFilter<"RawListingData"> | string | null
    loanDataPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    photosPullError?: StringNullableFilter<"RawListingData"> | string | null
    photosPullStatus?: EnumDataPullStatusFilter<"RawListingData"> | $Enums.DataPullStatus
    rawLoanDataId?: StringNullableFilter<"RawListingData"> | string | null
    rawPhotoDataId?: StringNullableFilter<"RawListingData"> | string | null
    processingVersion?: StringNullableFilter<"RawListingData"> | string | null
    lastPhotosPullAt?: DateTimeNullableFilter<"RawListingData"> | Date | string | null
    photosCount?: IntNullableFilter<"RawListingData"> | number | null
    photosPullAttempts?: IntFilter<"RawListingData"> | number
    pullerVersion?: StringNullableFilter<"RawListingData"> | string | null
  }

  export type RawListingDataCreateWithoutRawPhotoDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
    RawLoanData?: RawLoanDataCreateNestedOneWithoutRawListingDataInput
  }

  export type RawListingDataUncheckedCreateWithoutRawPhotoDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawLoanDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataCreateOrConnectWithoutRawPhotoDataInput = {
    where: RawListingDataWhereUniqueInput
    create: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput>
  }

  export type RawListingDataCreateManyRawPhotoDataInputEnvelope = {
    data: RawListingDataCreateManyRawPhotoDataInput | RawListingDataCreateManyRawPhotoDataInput[]
    skipDuplicates?: boolean
  }

  export type RawListingDataUpsertWithWhereUniqueWithoutRawPhotoDataInput = {
    where: RawListingDataWhereUniqueInput
    update: XOR<RawListingDataUpdateWithoutRawPhotoDataInput, RawListingDataUncheckedUpdateWithoutRawPhotoDataInput>
    create: XOR<RawListingDataCreateWithoutRawPhotoDataInput, RawListingDataUncheckedCreateWithoutRawPhotoDataInput>
  }

  export type RawListingDataUpdateWithWhereUniqueWithoutRawPhotoDataInput = {
    where: RawListingDataWhereUniqueInput
    data: XOR<RawListingDataUpdateWithoutRawPhotoDataInput, RawListingDataUncheckedUpdateWithoutRawPhotoDataInput>
  }

  export type RawListingDataUpdateManyWithWhereWithoutRawPhotoDataInput = {
    where: RawListingDataScalarWhereInput
    data: XOR<RawListingDataUpdateManyMutationInput, RawListingDataUncheckedUpdateManyWithoutRawPhotoDataInput>
  }

  export type ListingAuditCreateManyListingInput = {
    id: string
    action: string
    source: $Enums.AuditSource
    sourceId: string
    sourceName: string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
  }

  export type ListingHistoryCreateManyListingInput = {
    id: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
    auditId?: string | null
  }

  export type ListingPhotoCreateManyListingInput = {
    id: string
    mlsUrl: string
    s3Url?: string | null
    order: number
    lastChecked: Date | string
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingReportCreateManyListingInput = {
    id: string
    userId: string
    reporterType: $Enums.ReporterType
    reason: $Enums.ListingReportReason
    details?: string | null
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ListingAuditUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListingHistory?: ListingHistoryUpdateManyWithoutListingAuditNestedInput
  }

  export type ListingAuditUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListingHistory?: ListingHistoryUncheckedUpdateManyWithoutListingAuditNestedInput
  }

  export type ListingAuditUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    source?: EnumAuditSourceFieldUpdateOperationsInput | $Enums.AuditSource
    sourceId?: StringFieldUpdateOperationsInput | string
    sourceName?: StringFieldUpdateOperationsInput | string
    changes?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingHistoryUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ListingAudit?: ListingAuditUpdateOneWithoutListingHistoryNestedInput
  }

  export type ListingHistoryUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    auditId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingHistoryUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    auditId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListingPhotoUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingPhotoUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingPhotoUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsUrl?: StringFieldUpdateOperationsInput | string
    s3Url?: NullableStringFieldUpdateOperationsInput | string | null
    order?: IntFieldUpdateOperationsInput | number
    lastChecked?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportUncheckedUpdateWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingReportUncheckedUpdateManyWithoutListingInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reporterType?: EnumReporterTypeFieldUpdateOperationsInput | $Enums.ReporterType
    reason?: EnumListingReportReasonFieldUpdateOperationsInput | $Enums.ListingReportReason
    details?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingHistoryCreateManyListingAuditInput = {
    id: string
    listingId: string
    price: Decimal | DecimalJsLike | number | string
    status: $Enums.ListingStatus
    rawData: JsonNullValueInput | InputJsonValue
    changedFields: JsonNullValueInput | InputJsonValue
    effectiveDate: Date | string
    createdAt?: Date | string
  }

  export type ListingHistoryUpdateWithoutListingAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Listing?: ListingUpdateOneRequiredWithoutListingHistoryNestedInput
  }

  export type ListingHistoryUncheckedUpdateWithoutListingAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ListingHistoryUncheckedUpdateManyWithoutListingAuditInput = {
    id?: StringFieldUpdateOperationsInput | string
    listingId?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumListingStatusFieldUpdateOperationsInput | $Enums.ListingStatus
    rawData?: JsonNullValueInput | InputJsonValue
    changedFields?: JsonNullValueInput | InputJsonValue
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LoanCreateManyPropertyRadarInput = {
    id: string
    loanPosition: number
    purpose?: string | null
    loanType: $Enums.LoanType
    recordingDate: Date | string
    concurrent?: boolean
    initialAmount: Decimal | DecimalJsLike | number | string
    remainingBalance?: Decimal | DecimalJsLike | number | string | null
    termYears?: number | null
    lenderName: string
    rateType?: string | null
    interestRate?: Decimal | DecimalJsLike | number | string | null
    currentPeriod?: number | null
    startingPeriod?: number | null
    totalPayments?: number | null
    maturityDate?: Date | string | null
    monthlyPayment?: Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: boolean | null
    assumableMortgageId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    mlsInstanceId?: string | null
    deletedAt?: Date | string | null
    rawLoanDataId?: string | null
    interestRateEstimated?: boolean | null
    isAssumable?: boolean | null
  }

  export type LoanUpdateWithoutPropertyRadarInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    AssumableMortgage?: AssumableMortgageUpdateOneWithoutLoanNestedInput
  }

  export type LoanUncheckedUpdateWithoutPropertyRadarInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    assumableMortgageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type LoanUncheckedUpdateManyWithoutPropertyRadarInput = {
    id?: StringFieldUpdateOperationsInput | string
    loanPosition?: IntFieldUpdateOperationsInput | number
    purpose?: NullableStringFieldUpdateOperationsInput | string | null
    loanType?: EnumLoanTypeFieldUpdateOperationsInput | $Enums.LoanType
    recordingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    concurrent?: BoolFieldUpdateOperationsInput | boolean
    initialAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    remainingBalance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    termYears?: NullableIntFieldUpdateOperationsInput | number | null
    lenderName?: StringFieldUpdateOperationsInput | string
    rateType?: NullableStringFieldUpdateOperationsInput | string | null
    interestRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    currentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    startingPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    totalPayments?: NullableIntFieldUpdateOperationsInput | number | null
    maturityDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monthlyPayment?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ownerOccupied?: NullableBoolFieldUpdateOperationsInput | boolean | null
    assumableMortgageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    interestRateEstimated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    isAssumable?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type RawListingDataCreateManyRawLoanDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawPhotoDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataUpdateWithoutRawLoanDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
    RawPhotoData?: RawPhotoDataUpdateOneWithoutRawListingDataNestedInput
  }

  export type RawListingDataUncheckedUpdateWithoutRawLoanDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawPhotoDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataUncheckedUpdateManyWithoutRawLoanDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawPhotoDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataCreateManyRawPhotoDataInput = {
    id: string
    mlsProviderId: string
    rawData: JsonNullValueInput | InputJsonValue
    rawDataHash: string
    status?: string
    errorMessage?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    processedAt?: Date | string | null
    parcelNumber?: string | null
    zipCode?: string | null
    mlsStatus?: string | null
    modificationTimestamp?: Date | string | null
    mlsInstanceId?: string | null
    propertyType?: string | null
    statusChangeTimestamp?: Date | string | null
    unitNumber?: string
    unparsedAddress?: string | null
    loanDataError?: string | null
    loanDataPullStatus?: $Enums.DataPullStatus
    photosPullError?: string | null
    photosPullStatus?: $Enums.DataPullStatus
    rawLoanDataId?: string | null
    processingVersion?: string | null
    lastPhotosPullAt?: Date | string | null
    photosCount?: number | null
    photosPullAttempts?: number
    pullerVersion?: string | null
  }

  export type RawListingDataUpdateWithoutRawPhotoDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
    RawLoanData?: RawLoanDataUpdateOneWithoutRawListingDataNestedInput
  }

  export type RawListingDataUncheckedUpdateWithoutRawPhotoDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type RawListingDataUncheckedUpdateManyWithoutRawPhotoDataInput = {
    id?: StringFieldUpdateOperationsInput | string
    mlsProviderId?: StringFieldUpdateOperationsInput | string
    rawData?: JsonNullValueInput | InputJsonValue
    rawDataHash?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    processedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parcelNumber?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    mlsStatus?: NullableStringFieldUpdateOperationsInput | string | null
    modificationTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mlsInstanceId?: NullableStringFieldUpdateOperationsInput | string | null
    propertyType?: NullableStringFieldUpdateOperationsInput | string | null
    statusChangeTimestamp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unitNumber?: StringFieldUpdateOperationsInput | string
    unparsedAddress?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataError?: NullableStringFieldUpdateOperationsInput | string | null
    loanDataPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    photosPullError?: NullableStringFieldUpdateOperationsInput | string | null
    photosPullStatus?: EnumDataPullStatusFieldUpdateOperationsInput | $Enums.DataPullStatus
    rawLoanDataId?: NullableStringFieldUpdateOperationsInput | string | null
    processingVersion?: NullableStringFieldUpdateOperationsInput | string | null
    lastPhotosPullAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    photosCount?: NullableIntFieldUpdateOperationsInput | number | null
    photosPullAttempts?: IntFieldUpdateOperationsInput | number
    pullerVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}